{
  "openapi": "3.0.1",
  "info": {
    "title": "Customer Management",
    "description": "Customer Management，include: client profile、process setting、client service、question、client location、asset management.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://meshdev.smsassist.com",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/process/advanced-report/in-house-affiliate": {
      "put": {
        "tags": [
          "advanced-reporting-controller"
        ],
        "summary": "Update client in house affiliate",
        "description": "<p><b>Feature</b></p> <p>Update client in house affiliate</p>",
        "operationId": "advancedreporting_updateReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/advanced-report/{clientId}/{reportType}": {
      "get": {
        "tags": [
          "advanced-reporting-controller"
        ],
        "summary": "Get basis accounting type",
        "description": "<p><b>Feature</b></p> <p>Get basis accounting type</p>",
        "operationId": "advancedreporting_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdvancedReportingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/advanced-report": {
      "put": {
        "tags": [
          "advanced-reporting-controller"
        ],
        "summary": "Update basis accounting type",
        "description": "<p><b>Feature</b></p> <p>Update basis accounting type</p>",
        "operationId": "advancedreporting_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdvancedReportingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/callCategorys/businessUnit": {
      "get": {
        "tags": [
          "call-category-controller"
        ],
        "summary": "Get client call category businessUnit list by client id.",
        "description": "<p><b>Feature</b></p> <p>Get client call category businessUnit list by client id.</p>",
        "operationId": "callcategory_getcallcategorybusinessunit",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCallCategoryBusinessUnitListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/callCategorys": {
      "get": {
        "tags": [
          "call-category-controller"
        ],
        "summary": "Get client call category list by client id.",
        "description": "<p><b>Feature</b></p> <p>Get client call category list by client id.</p>",
        "operationId": "callcategory_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCallCategoryListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/callCategory": {
      "put": {
        "tags": [
          "call-category-controller"
        ],
        "summary": "Update client call category by client id.",
        "description": "<p><b>Feature</b></p> <p>Update client call category by client id.</p>",
        "operationId": "callcategory_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/callerPosition/{clientId}": {
      "get": {
        "tags": [
          "client-caller-position-controller"
        ],
        "summary": "Query client caller position list",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Query client caller position list</p>",
        "operationId": "clientcallerposition_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQueryClientCallerPositionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "client-caller-position-controller"
        ],
        "summary": "Update client caller position",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client caller position</p>",
        "operationId": "clientcallerposition_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCallerPositionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/communication/{clientId}": {
      "put": {
        "tags": [
          "client-communication-controller"
        ],
        "summary": "Update client role communication",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client role communication</p>",
        "operationId": "clientcommunication_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCommunicationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/isExist": {
      "get": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Verify that the client exists.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Verify that the client exists.</p>",
        "operationId": "clientdetail_isexist",
        "parameters": [
          {
            "name": "name"
          },
          {
            "name": "clientCode"
          },
          {
            "name": "email",
            "description": "email"
          },
          {
            "name": "phone"
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckClientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients": {
      "get": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Get client list by condition.",
        "description": "<p><b>Feature</b></p> <p>Get client list by condition.</p>",
        "operationId": "clientdetail_getpage",
        "parameters": [
          {
            "name": "isAdvanceSearch",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "name"
          },
          {
            "name": "state"
          },
          {
            "name": "city"
          },
          {
            "name": "customerTypeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy"
          },
          {
            "name": "asc",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePageClientDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{id}": {
      "get": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Get client by client id.",
        "description": "<p><b>Feature</b></p> <p>Get client by client id.</p>",
        "operationId": "clientdetail_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Delete client by id",
        "description": "<p><b>Path</b></p><p>Eolinker test using</p><p><b>Feature</b></p> <p>Delete client by id</p>",
        "operationId": "clientdetail_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client": {
      "put": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Update client.",
        "description": "<p><b>Feature</b></p> <p>Update client.</p>",
        "operationId": "clientdetail_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client-detail-controller"
        ],
        "summary": "Create client.",
        "description": "<p><b>Feature</b></p> <p>Create client.</p>",
        "operationId": "clientdetail_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/fiscal-year/{clientId}": {
      "get": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Query client fiscal year list by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Query client fiscal year list by client id.</p>",
        "operationId": "clientfiscal_getfiscalyearlist",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientFiscalYearListDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Create client fiscal year.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Create client fiscal year.</p>",
        "operationId": "clientfiscal_insertfiscalyear",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientFiscalYearDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/fiscal-month/{clientId}": {
      "get": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Query client fiscal month list by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Query client fiscal month list by client id.</p>",
        "operationId": "clientfiscal_getfiscalmonthlist",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientFiscalMonthListDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Create client fiscal month.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Create client fiscal month.</p>",
        "operationId": "clientfiscal_insertfiscalmonth",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientFiscalMonthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/fiscal-month/{id}": {
      "delete": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Delete client fiscal month by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Delete client fiscal month by id.</p>",
        "operationId": "clientfiscal_deletefiscalmonth",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentUserId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/fiscal-year/{id}": {
      "delete": {
        "tags": [
          "client-fiscal-controller"
        ],
        "summary": "Delete client fiscal year by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Delete client fiscal year by id.</p>",
        "operationId": "clientfiscal_deletefiscalyear",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentUserId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/issuesReasons/{clientId}": {
      "get": {
        "tags": [
          "client-issues-reason-controller"
        ],
        "summary": "Get client issues reason by client id.",
        "description": "<p><b>Feature</b></p> <p>Get client issues reason by client id.</p>",
        "operationId": "clientissuesreason_getbyclient",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientIssuesReasonListDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "client-issues-reason-controller"
        ],
        "summary": "Update client issues reason by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client issues reason by client id.</p>",
        "operationId": "clientissuesreason_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientIssuesReasonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client-issues-reason-controller"
        ],
        "summary": "Create client issues reason by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Create client issues reason by client id.</p>",
        "operationId": "clientissuesreason_insert",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddClientIssuesReasonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/issuesReasons/{clientId}/{id}": {
      "delete": {
        "tags": [
          "client-issues-reason-controller"
        ],
        "summary": "Delete client issues reason by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Delete client issues reason by id.</p>",
        "operationId": "clientissuesreason_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/launchedMarket/{id}": {
      "get": {
        "tags": [
          "client-launched-market-controller"
        ],
        "summary": "Get clientLaunchedMarket by id.",
        "description": "<p><b>Feature</b></p> <p>Get clientLaunchedMarket by id.</p>",
        "operationId": "clientlaunchedmarket_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientLaunchedMarketDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/confirmation-email": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client confirmation email setting.",
        "description": "<p><b>Feature</b></p> <p>Update client confirmation email setting.</p>",
        "operationId": "clientprocess_updateconfirmationemail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfirmationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/client-portal": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client portal setting.",
        "description": "<p><b>Feature</b></p> <p>Update client portal setting.</p>",
        "operationId": "clientprocess_updateclientportal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientPortalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/config-due-date": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client config due date setting.",
        "description": "<p><b>Feature</b></p> <p>Update client config due date setting.</p>",
        "operationId": "clientprocess_updateconfigduedate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigDueDateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/allow-edit-refer-wo": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client allow edit refer wo setting.",
        "description": "<p><b>Feature</b></p> <p>Update client allow edit refer wo setting.</p>",
        "operationId": "clientprocess_updatealloweditreferwo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAllowEditReferWoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/enable-priority": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client enable priority setting.",
        "description": "<p><b>Feature</b></p> <p>Update client enable priority setting.</p>",
        "operationId": "clientprocess_updateenablepriority",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnablePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/enable-under-warranty": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client under warranty setting.",
        "description": "<p><b>Feature</b></p> <p>Update client under warranty setting.</p>",
        "operationId": "clientprocess_updateenableunderwarranty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnableUnderWarrantyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/client/pcda": {
      "put": {
        "tags": [
          "client-process-controller"
        ],
        "summary": "Update client PCDA package",
        "description": "<p><b>Feature</b></p> <p>Update client PCDA package</p>",
        "operationId": "clientprocess_updatepcda",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePcdaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/temperature-priority/isEnable": {
      "put": {
        "tags": [
          "client-temperature-priority-controller"
        ],
        "summary": "Update client is enable temperature priority.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client is enable temperature priority.</p>",
        "operationId": "clienttemperaturepriority_updateisenable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientIsEnableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/temperature-priority/{clientId}": {
      "get": {
        "tags": [
          "client-temperature-priority-controller"
        ],
        "summary": "Query client temperature priority by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Query client temperature priority by client id.</p>",
        "operationId": "clienttemperaturepriority_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientTemperaturePriorityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/temperature-priority": {
      "put": {
        "tags": [
          "client-temperature-priority-controller"
        ],
        "summary": "Update client temperature priority.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client temperature priority.</p>",
        "operationId": "clienttemperaturepriority_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientTemperaturePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "client-temperature-priority-controller"
        ],
        "summary": "Create client temperature priority.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Create client temperature priority.</p>",
        "operationId": "clienttemperaturepriority_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientTemperaturePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientTemperaturePriorityConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/temperature-priority/{id}": {
      "delete": {
        "tags": [
          "client-temperature-priority-controller"
        ],
        "summary": "Delete Client temperature priority by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Delete Client temperature priority by id.</p>",
        "operationId": "clienttemperaturepriority_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "priorityId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currentUserId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/dispatch-script": {
      "get": {
        "tags": [
          "dispatch-script-controller"
        ],
        "summary": "Get dispatch script",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Dispatch Script</p><p><b>Feature</b></p> <p>Get dispatch script</p>",
        "operationId": "dispatchscript_get",
        "parameters": [
          {
            "name": "serviceCategoryId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dispatchScript"
          },
          {
            "name": "clientId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientDispatchScriptDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "dispatch-script-controller"
        ],
        "summary": "Update dispatch script",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Dispatch Script</p><p><b>Feature</b></p> <p>Update dispatch script</p>",
        "operationId": "dispatchscript_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDispatchScriptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dispatch-script-controller"
        ],
        "summary": "Create dispatch script",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Dispatch Script</p><p><b>Feature</b></p> <p>Create dispatch script</p>",
        "operationId": "dispatchscript_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDispatchScriptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/hours": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice hours setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice hours setting.</p>",
        "operationId": "invoiceprocess_updateinvoicehours",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceHoursRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/in-house-affiliate": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice in house affiliate setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice in house affiliate setting.</p>",
        "operationId": "invoiceprocess_updateinvoiceinhouseaffiliate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceInHouseAffiliateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/in-house-service-fee": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice service fee setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice service fee setting.</p>",
        "operationId": "invoiceprocess_updateinvoiceservicefee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceServiceFeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/in-house-service-fee-taxable": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice service fee taxable setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice service fee taxable setting.</p>",
        "operationId": "invoiceprocess_updateinvoiceservicefeetaxable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceServiceFeeTaxableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/pass-through": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice pass through setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice pass through setting.</p>",
        "operationId": "invoiceprocess_updateinvoicepassthrough",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoicePassThroughRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/pass-through-service-fee": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice pass through fee setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice pass through fee setting.</p>",
        "operationId": "invoiceprocess_updateinvoicepassthroughfee",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoicePassThroughFeeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice/pass-through-service-fee-taxable": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice pass through service fee taxable setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice pass through service fee taxable setting.</p>",
        "operationId": "invoiceprocess_updatepassthroughservicefeetaxable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassThroughServiceFeeTaxableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/invoice": {
      "put": {
        "tags": [
          "invoice-process-controller"
        ],
        "summary": "Update client invoice setting.",
        "description": "<p><b>Feature</b></p> <p>Update client invoice setting.</p>",
        "operationId": "invoiceprocess_updateinvoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/kpi-reactive": {
      "delete": {
        "tags": [
          "kpi-controller"
        ],
        "summary": "Delete client reactive kpi.",
        "description": "<p><b>Feature</b></p> <p>Delete client reactive kpi.</p>",
        "operationId": "kpi_deletereactivekpi",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCategoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "kpiId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/kpi-recurrent": {
      "delete": {
        "tags": [
          "kpi-controller"
        ],
        "summary": "Delete client recurrent kpi.",
        "description": "<p><b>Feature</b></p> <p>Delete client recurrent kpi.</p>",
        "operationId": "kpi_deleterecurrentkpi",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCategoryId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "kpiId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/kpi": {
      "put": {
        "tags": [
          "kpi-controller"
        ],
        "summary": "Update client kpi.",
        "description": "<p><b>Feature</b></p> <p>Update client kpi.</p>",
        "operationId": "kpi_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KpiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/attributes/{locationId}": {
      "get": {
        "tags": [
          "location-attribute-controller"
        ],
        "summary": "Get locationAttribute by location id.",
        "description": "<p><b>Feature</b></p> <p>Get locationAttribute by location id.</p>",
        "operationId": "locationattribute_getbylocationid",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationAttributesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/attribute/{id}": {
      "get": {
        "tags": [
          "location-attribute-controller"
        ],
        "summary": "Get locationAttribute by id.",
        "description": "<p><b>Feature</b></p> <p>Get locationAttribute by id.</p>",
        "operationId": "locationattribute_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationAttributeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/attribute": {
      "put": {
        "tags": [
          "location-attribute-controller"
        ],
        "summary": "insert or update locationAttribute.",
        "description": "<p><b>Feature</b></p> <p>insert or update locationAttribute.</p>",
        "operationId": "locationattribute_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationAttributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations/page": {
      "get": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "Get location page by condition.",
        "description": "<p><b>Feature</b></p> <p>Get location page by condition.</p>",
        "operationId": "locationdetail_getpage",
        "parameters": [
          {
            "name": "address"
          },
          {
            "name": "state"
          },
          {
            "name": "city"
          },
          {
            "name": "smsNumber"
          },
          {
            "name": "clientId"
          },
          {
            "name": "districts",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "regions",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIPageLocationPageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/info/{id}": {
      "get": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "Get location info by id.",
        "description": "<p><b>Feature</b></p> <p>Get location info by id.</p>",
        "operationId": "locationdetail_getlocationinfo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/locations": {
      "get": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "Get location list by condition.",
        "description": "<p><b>Feature</b></p> <p>Get location list by condition.</p>",
        "operationId": "locationdetail_getlocationlist",
        "parameters": [
          {
            "name": "address"
          },
          {
            "name": "locationNumber"
          },
          {
            "name": "zipCode"
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientLocationListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/customerType/{locationId}": {
      "get": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "get customerTypeId by location id.",
        "description": "<p><b>Feature</b></p> <p>get customerTypeId by location id.</p>",
        "operationId": "locationdetail_getcustomertypeidbylocationid",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInteger"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/{id}": {
      "get": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "Get location by location id.",
        "description": "<p><b>Feature</b></p> <p>Get location by location id.</p>",
        "operationId": "locationdetail_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientLocationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location": {
      "put": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "Update location by location id.",
        "description": "<p><b>Feature</b></p> <p>Update location by location id.</p>",
        "operationId": "locationdetail_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "location-detail-controller"
        ],
        "summary": "create location.",
        "description": "<p><b>Feature</b></p> <p>create location.</p>",
        "operationId": "locationdetail_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCreateLocationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/landlord/page": {
      "get": {
        "tags": [
          "location-landlord-controller"
        ],
        "summary": "Get locationLandlordList by condition.",
        "description": "<p><b>Feature</b></p> <p>Get locationLandlordList by condition.</p>",
        "operationId": "locationlandlord_getlocationlandlordpage",
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy"
          },
          {
            "name": "asc",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePageLocationLandlordPageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/landlord/{id}": {
      "get": {
        "tags": [
          "location-landlord-controller"
        ],
        "summary": "Query locationLandlord by id.",
        "description": "<p><b>Feature</b></p> <p>Query locationLandlord by id.</p>",
        "operationId": "locationlandlord_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationLandlordDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "location-landlord-controller"
        ],
        "summary": "Delete locationLandlord by id.",
        "description": "<p><b>Feature</b></p> <p>Delete locationLandlord by id.</p>",
        "operationId": "locationlandlord_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/landlord": {
      "put": {
        "tags": [
          "location-landlord-controller"
        ],
        "summary": "Update locationLandlord.",
        "description": "<p><b>Feature</b></p> <p>Update locationLandlord.</p>",
        "operationId": "locationLandlord_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationLandlordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "location-landlord-controller"
        ],
        "summary": "locationLandlord.",
        "description": "<p><b>Feature</b></p> <p>Create locationLandlord.</p>",
        "operationId": "locationlandlord_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationLandlordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/manager": {
      "put": {
        "tags": [
          "location-manager-controller"
        ],
        "summary": "Update locationManager.",
        "description": "<p><b>Feature</b></p> <p>Update locationManager.</p>",
        "operationId": "locationmanager_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationManagerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/mir/info/{locationId}": {
      "get": {
        "tags": [
          "location-mir-controller"
        ],
        "summary": "Get locationMir by location id.",
        "description": "<p><b>Feature</b></p> <p>Get locationMir by location id.</p>",
        "operationId": "locationmir_getbylocationid",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationMirDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/mir": {
      "post": {
        "tags": [
          "location-mir-controller"
        ],
        "summary": "insert or update locationMir.",
        "description": "<p><b>Feature</b></p> <p>insert or update locationMir.</p>",
        "operationId": "locationmir_insertorupdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrUpdateLocationMirRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInteger"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/mir/{id}": {
      "get": {
        "tags": [
          "location-mir-controller"
        ],
        "summary": "Get locationMir by  id.",
        "description": "<p><b>Feature</b></p> <p>Get LocationMir by id.</p>",
        "operationId": "locationmir_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationMirDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/monthlyBudget/{id}": {
      "get": {
        "tags": [
          "location-monthly-budget-controller"
        ],
        "summary": "Get locationMonthlyBudget by client id.",
        "description": "<p><b>Feature</b></p> <p>Get locationMonthlyBudget by id.</p>",
        "operationId": "locationmonthlybudget_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationMonthlyBudgetDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/residential/{id}": {
      "get": {
        "tags": [
          "location-residential-controller"
        ],
        "summary": "Get locationResidential by id.",
        "description": "<p><b>Feature</b></p> <p>Get locationResidential by id.</p>",
        "operationId": "locationresidential_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLocationResidentialDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/residential": {
      "put": {
        "tags": [
          "location-residential-controller"
        ],
        "summary": "Update locationResidential..",
        "description": "<p><b>Feature</b></p> <p>Update locationResidential.</p>",
        "operationId": "locationresidential_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationResidentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInteger"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "location-residential-controller"
        ],
        "summary": "Create locationResidential..",
        "description": "<p><b>Feature</b></p> <p>Create locationResidential.</p>",
        "operationId": "locationresidential_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationResidentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/residential/{id}/{currentUserId}": {
      "delete": {
        "tags": [
          "location-residential-controller"
        ],
        "summary": "Delete locationResidential by id.",
        "description": "<p><b>Feature</b></p> <p>Delete locationResidential by id.</p>",
        "operationId": "locationresidential_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInteger"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/location/type/list/{locationId}": {
      "get": {
        "tags": [
          "location-type-controller"
        ],
        "summary": "Get all locationTypeList by location id.",
        "description": "<p><b>Feature</b></p> <p>Get locationTypeList by location id.</p>",
        "operationId": "locationtype_getlocationtypelistbylocationid",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListLocationTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/check-in-mileage-designation/{clientId}": {
      "get": {
        "tags": [
          "mileage-config-controller"
        ],
        "summary": "Get check in mileage designation by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Get check in mileage designation by client id.</p>",
        "operationId": "mileageconfig_getbyclient",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckinMileageConfigListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/check-in-mileage-designation/{id}": {
      "put": {
        "tags": [
          "mileage-config-controller"
        ],
        "summary": "Update check in mileage designation by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update check in mileage designation by id.</p>",
        "operationId": "mileageconfig_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckinMileageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "mileage-config-controller"
        ],
        "summary": "Delete check in mileage designation by id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Delete check in mileage designation by id.</p>",
        "operationId": "mileageconfig_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/check-in-mileage-designation": {
      "post": {
        "tags": [
          "mileage-config-controller"
        ],
        "summary": "Create client check in mileage designation.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Create client check in mileage designation.</p>",
        "operationId": "mileageconfig_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCheckinMileageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckinMileageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/photo-label/{clientId}/{type}": {
      "get": {
        "tags": [
          "photo-label-controller"
        ],
        "summary": "Get photo label list for select",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Photo Label</p><p><b>Feature</b></p> <p>Management of photo label in client info detail</p>",
        "operationId": "photolabel_getselect",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePhotoLabelsSelectListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/photo-label": {
      "get": {
        "tags": [
          "photo-label-controller"
        ],
        "summary": "Get selected photo labels",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Photo Label</p><p><b>Feature</b></p> <p>Management of photo label in client info detail</p>",
        "operationId": "photolabel_get",
        "parameters": [
          {
            "name": "labelName"
          },
          {
            "name": "typeId",
            "description": "1:Check-in;2:Check-out;3:Before-service;4:After-service",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceCategoryId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isActive",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isMandatory",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePhotoLabelsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "photo-label-controller"
        ],
        "summary": "Update photo labels status setting",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Photo Label</p><p><b>Feature</b></p> <p>Update photo labels status setting</p>",
        "operationId": "photolabel_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhotoLabelStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "photo-label-controller"
        ],
        "summary": "Insert photo label config",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Photo Label</p><p><b>Feature</b></p> <p>Insert photo label config</p>",
        "operationId": "photolabel_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePhotoLabelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/swapRank": {
      "put": {
        "tags": [
          "question-controller"
        ],
        "summary": "Update question rank",
        "description": "<p><b>Feature</b></p> <p>Update question rank</p>",
        "operationId": "question_updaterank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwapRankRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/option": {
      "put": {
        "tags": [
          "question-controller"
        ],
        "summary": "Update question option",
        "description": "<p><b>Feature</b></p> <p>Update question option</p>",
        "operationId": "question_updateoption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionOptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "question-controller"
        ],
        "summary": "Insert question option",
        "description": "<p><b>Feature</b></p> <p>Insert question option</p>",
        "operationId": "question_insertoption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionOptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdNameDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/{questionId}/{optionId}": {
      "delete": {
        "tags": [
          "question-controller"
        ],
        "summary": "Delete question option",
        "description": "<p><b>Feature</b></p> <p>Delete question option</p>",
        "operationId": "question_deleteoption",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currentUserId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/rules": {
      "put": {
        "tags": [
          "question-controller"
        ],
        "summary": "Update question rules",
        "description": "<p><b>Feature</b></p> <p>Update question rules</p>",
        "operationId": "question_updaterules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionRulesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/question-feel-likes/{clientId}/{roleName}": {
      "get": {
        "tags": [
          "question-controller"
        ],
        "summary": "Get question and feels like",
        "description": "<p><b>Feature</b></p> <p>Get question and feels like</p>",
        "operationId": "question_getquestionandfeelslike",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQueryQuestionAndFeelsLikeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/{questionId}": {
      "get": {
        "tags": [
          "question-controller"
        ],
        "summary": "Get question by id",
        "description": "<p><b>Feature</b></p> <p>Get question by id</p>",
        "operationId": "question_getbyid",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQuestion"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "question-controller"
        ],
        "summary": "Delete question",
        "description": "<p><b>Feature</b></p> <p>Delete question</p>",
        "operationId": "question_delete",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currentUserId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/copy": {
      "post": {
        "tags": [
          "question-controller"
        ],
        "summary": "Copy question",
        "description": "<p><b>Feature</b></p> <p>Copy question.</p>",
        "operationId": "question_copyquestion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyQuestionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringIdDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question/multi-option": {
      "post": {
        "tags": [
          "question-controller"
        ],
        "summary": "Insert multi question option",
        "description": "<p><b>Feature</b></p> <p>Insert multi question option</p>",
        "operationId": "question_insertmultioption",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionMultiOptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseListIdNameDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/question": {
      "get": {
        "tags": [
          "question-controller"
        ],
        "summary": "Get question",
        "description": "<p><b>Feature</b></p> <p>Get question</p>",
        "operationId": "question_get",
        "parameters": [
          {
            "name": "clientId",
            "required": true
          },
          {
            "name": "type",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "serviceCode",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseQuestionListDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "question-controller"
        ],
        "summary": "Update question",
        "description": "<p><b>Feature</b></p> <p>Update question</p>",
        "operationId": "question_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "question-controller"
        ],
        "summary": "Insert question",
        "description": "<p><b>Feature</b></p> <p>Insert question</p>",
        "operationId": "question_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIdNameDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/service-category": {
      "get": {
        "tags": [
          "service-detail-controller"
        ],
        "summary": "Query client service category detail.",
        "operationId": "servicedetail_getclientservicecategory",
        "parameters": [
          {
            "name": "clientId",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "serviceCategoryId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "isHidden",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderBy"
          },
          {
            "name": "asc",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePageClientServiceCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service": {
      "put": {
        "tags": [
          "service-detail-controller"
        ],
        "summary": "Update client service detail.",
        "description": "<p><b>Feature</b></p> <p>Update client service detail.</p>",
        "operationId": "servicedetail_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDetailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/nte/isEnableChargeBack/{clientId}/{serviceCodeId}": {
      "get": {
        "tags": [
          "service-nte-controller"
        ],
        "summary": "Get client service code isEnableChargeBack",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Service Code NTE</p><p><b>Feature</b></p> <p>Get client service code isEnableChargeBack</p>",
        "operationId": "servicente_getisenablechargeback",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceNteIsEnableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/nte/isEnableChargeBack": {
      "put": {
        "tags": [
          "service-nte-controller"
        ],
        "summary": "Activate or inactivate chanrgeback flag for service combination in client info detail",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Service Code NTE -> Activate Chargeback</p><p><b>Feature</b></p> <p>Activate or inactivate chanrgeback flag for service combination in client info detail</p>",
        "operationId": "servicente_updateisenablechargeback",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIsEnableChargeBackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/nte/{clientId}/{serviceCodeId}": {
      "get": {
        "tags": [
          "service-nte-controller"
        ],
        "summary": "Get client service code NTE",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Service Code NTE</p><p><b>Feature</b></p> <p>Get client service code NTE</p>",
        "operationId": "servicente_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceNteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/nte": {
      "put": {
        "tags": [
          "service-nte-controller"
        ],
        "summary": "Update client service code NTE",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Detail -> Service Code NTE</p><p><b>Feature</b></p> <p>Update client service code NTE</p>",
        "operationId": "servicente_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceNteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/priority/{clientId}": {
      "get": {
        "tags": [
          "service-priority-controller"
        ],
        "summary": "Get client service priority by client id.",
        "description": "<p><b>Feature</b></p> <p>Get client service priority by client id.</p>",
        "operationId": "servicepriority_getlist",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServicePriorityListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/priority/service-code": {
      "put": {
        "tags": [
          "service-priority-controller"
        ],
        "summary": "Update client service code priority.",
        "description": "<p><b>Feature</b></p> <p>Update client service code priority.</p>",
        "operationId": "servicepriority_updateservicecode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCodePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/priority/{clientId}/{serviceCodeId}": {
      "get": {
        "tags": [
          "service-priority-controller"
        ],
        "summary": "Get client service priority by client id and service code id.",
        "description": "<p><b>Feature</b></p> <p>Get client service priority by client id and service code id.</p>",
        "operationId": "servicepriority_getservicecodeprioritylist",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServicePriorityListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/priority": {
      "put": {
        "tags": [
          "service-priority-controller"
        ],
        "summary": "Update client service priority.",
        "description": "<p><b>Feature</b></p> <p>Update client service priority.</p>",
        "operationId": "servicepriority_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/sow/{clientId}/{serviceCodeId}": {
      "get": {
        "tags": [
          "service-sow-controller"
        ],
        "summary": "Get client service contract by client id and service code id.",
        "description": "<p><b>Feature</b></p> <p>Get client service contract by client id and service code id.</p>",
        "operationId": "servicesow_get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceSowListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/sow/{id}": {
      "put": {
        "tags": [
          "service-sow-controller"
        ],
        "summary": "Update client service contract by id.",
        "description": "<p><b>Feature</b></p> <p>Update client service contract by id.</p>",
        "operationId": "servicesow_update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceSowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceSowDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "service-sow-controller"
        ],
        "summary": "Delete client service contract by id.",
        "description": "<p><b>Feature</b></p> <p>Delete client service contract by id.</p>",
        "operationId": "servicesow_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/service/sow": {
      "post": {
        "tags": [
          "service-sow-controller"
        ],
        "summary": "Insert client service contract.",
        "description": "<p><b>Feature</b></p> <p>Insert client service contract.</p>",
        "operationId": "servicesow_insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceSowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceSowDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/theme": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Query client theme by client id.",
        "description": "<p><b>Feature</b></p> <p>Query client theme by client id.</p>",
        "operationId": "theme_getclienttheme",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientThemeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Update client theme.",
        "description": "<p><b>Feature</b></p> <p>Update client theme.</p>",
        "operationId": "theme_updateclienttheme",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/theme/rsp": {
      "get": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Query client rsp theme by client id.",
        "description": "<p><b>Feature</b></p> <p>Query client rsp theme by client id.</p>",
        "operationId": "theme_getclientrsptheme",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientRspThemeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "theme-controller"
        ],
        "summary": "Update client rsp theme.",
        "description": "<p><b>Feature</b></p> <p>Update client rsp theme.</p>",
        "operationId": "theme_updateclientrsptheme",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRspThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/domain": {
      "get": {
        "tags": [
          "url-customization-controller"
        ],
        "summary": "Query client domain by client id.",
        "description": "<p><b>Feature</b></p> <p>Query client domain by client id.</p>",
        "operationId": "urlcustomization_getdomain",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientDomainDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "url-customization-controller"
        ],
        "summary": "Update client domain.",
        "description": "<p><b>Feature</b></p> <p>Update client domain.</p>",
        "operationId": "urlcustomization_updatedomain",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUrlCustomizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/{clientId}/domain/rsp": {
      "get": {
        "tags": [
          "url-customization-controller"
        ],
        "summary": "Query client rsp domain by client id.",
        "description": "<p><b>Feature</b></p> <p>Query client rsp domain by client id.</p>",
        "operationId": "urlcustomization_getrspdomain",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientDomainDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "url-customization-controller"
        ],
        "summary": "Update client rsp domain.",
        "description": "<p><b>Feature</b></p> <p>Update client rsp domain.</p>",
        "operationId": "urlcustomization_updaterspdomain",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUrlCustomizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/process/wo-request": {
      "put": {
        "tags": [
          "wo-request-controller"
        ],
        "summary": "Update client wo request setting",
        "description": "<p><b>Feature</b></p> <p>Update client wo request setting</p>",
        "operationId": "worequest_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWoRequestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUpdateWoRequestDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/wo-type/{clientId}": {
      "get": {
        "tags": [
          "wo-type-controller"
        ],
        "summary": "Get WO type list by client id.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Get WO type list by client id.</p>",
        "operationId": "wotype_getlist",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseClientWoTypeListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client/wo-type/{clientId}/{id}": {
      "put": {
        "tags": [
          "wo-type-controller"
        ],
        "summary": "Update client enabled WO type.",
        "description": "<p><b>Path</b></p><p>Internal Portal -> Client Info -> Details</p><p><b>Feature</b></p> <p>Update client enabled WO type.</p>",
        "operationId": "wotype_update",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientWoTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UpdateReportRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "reportMappingId",
          "reportMappingValueId",
          "reportType"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "reportType": {
            "type": "integer",
            "format": "int32"
          },
          "reportMappingId": {
            "type": "integer",
            "format": "int32"
          },
          "reportMappingValueId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "AdvancedReportingDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "reportType": {
            "type": "integer",
            "format": "int32"
          },
          "reportMappingId": {
            "type": "integer",
            "format": "int32"
          },
          "reportMappingValueId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseAdvancedReportingDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/AdvancedReportingDto"
          }
        }
      },
      "UpdateAdvancedReportingRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "enable"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "enable": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CallCategoryBusinessUnitDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "callCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CallCategoryBusinessUnitListDto": {
        "type": "object",
        "properties": {
          "callCategoryBusinessUnitDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCategoryBusinessUnitDto"
            }
          }
        }
      },
      "ResponseCallCategoryBusinessUnitListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CallCategoryBusinessUnitListDto"
          }
        }
      },
      "CallCategoryDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "callCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CallCategoryListDto": {
        "type": "object",
        "properties": {
          "callCategoryList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallCategoryDto"
            }
          }
        }
      },
      "ResponseCallCategoryListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CallCategoryListDto"
          }
        }
      },
      "CallCategoryRequest": {
        "required": [
          "callCategoryId",
          "currentUserId",
          "department",
          "isClientVisible"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "callCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "department": {
            "type": "string"
          },
          "isClientVisible": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataCallerPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isInternal": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QueryClientCallerPositionDto": {
        "type": "object",
        "properties": {
          "allPositionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataCallerPosition"
            }
          },
          "enabledPositionList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ResponseQueryClientCallerPositionDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/QueryClientCallerPositionDto"
          }
        }
      },
      "ClientCallerPositionRequest": {
        "required": [
          "callerPosition",
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "callerPosition": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseIdDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/IdDto"
          }
        }
      },
      "ClientCommunicationRequest": {
        "required": [
          "currentUserId",
          "roleId",
          "trunOnOrOff"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "trunOnOrOff": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CheckClientDto": {
        "type": "object",
        "properties": {
          "exist": {
            "type": "boolean"
          }
        }
      },
      "ResponseCheckClientDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CheckClientDto"
          }
        }
      },
      "ClientDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "integer",
            "format": "int32"
          },
          "logoPath": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "isVip": {
            "type": "integer",
            "format": "int32"
          },
          "customerTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "callCenterNumber": {
            "type": "string"
          },
          "isEnableServiceFee": {
            "type": "integer",
            "format": "int32"
          },
          "serviceFeeRate": {
            "type": "number",
            "format": "double"
          },
          "isEnablePlatformFee": {
            "type": "integer",
            "format": "int32"
          },
          "platformFeeRate": {
            "type": "number",
            "format": "double"
          },
          "domain": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "isVirtualClient": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "rspDomain": {
            "type": "string"
          },
          "houseOwnerDomain": {
            "type": "string"
          },
          "isConfirmationEmailOptin": {
            "type": "integer",
            "format": "int32"
          },
          "isUsesClientPortal": {
            "type": "integer",
            "format": "int32"
          },
          "isTaxFree": {
            "type": "integer",
            "format": "int32"
          },
          "isBypassManagerToDoList": {
            "type": "integer",
            "format": "int32"
          },
          "isInvoiceApprovalActive": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceApprovalHours": {
            "type": "number",
            "format": "double"
          },
          "isInHouseInvoiceProcess": {
            "type": "integer",
            "format": "int32"
          },
          "inHouseInvoiceServiceFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "isInHouseInvoiceServiceFeeTaxable": {
            "type": "integer",
            "format": "int32"
          },
          "isPassThroughInvoiceProcess": {
            "type": "integer",
            "format": "int32"
          },
          "passThroughInvoiceServiceFeeAmount": {
            "type": "number",
            "format": "double"
          },
          "isPassThroughInvoiceServiceFeeTaxable": {
            "type": "integer",
            "format": "int32"
          },
          "passThroughInvoiceProcess": {
            "type": "integer",
            "format": "int32"
          },
          "isConfigDueDate": {
            "type": "integer",
            "format": "int32"
          },
          "isInvoiceDiscount": {
            "type": "integer",
            "format": "int32"
          },
          "autoRwiDays": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableTemperaturePriorityConfig": {
            "type": "integer",
            "format": "int32"
          },
          "isAllowEditReferWoNum": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableOneRecommendedAffiliate": {
            "type": "integer",
            "format": "int32"
          },
          "isEnablePendingClientDispatchApproval": {
            "type": "integer",
            "format": "int32"
          },
          "isEnablePriorityExcludeNonWorkingTime": {
            "type": "integer",
            "format": "int32"
          },
          "businessTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabledServiceRequest": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableTurnRehabCapitalProject": {
            "type": "integer",
            "format": "int32"
          },
          "isEnabledPreDispatch": {
            "type": "integer",
            "format": "int32"
          },
          "replyRpaNeedCcUserType": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableUnderWarranty": {
            "type": "integer",
            "format": "int32"
          },
          "pcdaPackageId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string"
          },
          "asc": {
            "type": "boolean"
          }
        }
      },
      "PageClientDto": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientDto"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "current": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "optimizeCountSql": {
            "type": "boolean"
          },
          "hitCount": {
            "type": "boolean"
          },
          "desc": {
            "$ref": "#/components/schemas/PageClientDto"
          },
          "ascs": {
            "$ref": "#/components/schemas/PageClientDto"
          },
          "searchCount": {
            "type": "boolean"
          },
          "descs": {
            "$ref": "#/components/schemas/PageClientDto"
          },
          "asc": {
            "$ref": "#/components/schemas/PageClientDto"
          },
          "pages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponsePageClientDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageClientDto"
          }
        }
      },
      "ResponseClientDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientDto"
          }
        }
      },
      "ClientRequest": {
        "required": [
          "currentUserId",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "logoPath": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "isVip": {
            "type": "boolean"
          },
          "customerTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "callCenterNumber": {
            "type": "string"
          },
          "businessTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "isBypassManagerToDoList": {
            "type": "boolean"
          }
        }
      },
      "CreateClientRequest": {
        "required": [
          "active",
          "addressLine1",
          "businessTypeId",
          "city",
          "clientCode",
          "currentUserId",
          "customerTypeId",
          "email",
          "firstName",
          "name",
          "phone",
          "state",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "customerTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "businessTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientFiscalYearDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "endMonth": {
            "type": "string",
            "format": "date-time"
          },
          "startMonth": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClientFiscalYearListDto": {
        "type": "object",
        "properties": {
          "clientFiscalYearDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientFiscalYearDto"
            }
          }
        }
      },
      "ResponseClientFiscalYearListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientFiscalYearListDto"
          }
        }
      },
      "ClientFiscalMonthDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalMonth": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "fiscalYear": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalPeriodName": {
            "type": "string"
          }
        }
      },
      "ClientFiscalMonthListDto": {
        "type": "object",
        "properties": {
          "clientFiscalMonthDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientFiscalMonthDto"
            }
          }
        }
      },
      "ResponseClientFiscalMonthListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientFiscalMonthListDto"
          }
        }
      },
      "CreateClientFiscalMonthRequest": {
        "required": [
          "currentUserId",
          "endDate",
          "fiscalMonth",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalMonth": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateClientFiscalYearDto": {
        "required": [
          "currentUserId",
          "endMonth",
          "startMonth",
          "year"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "endMonth": {
            "type": "integer",
            "format": "int32"
          },
          "startMonth": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientIssuesReasonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientIssuesReasonListDto": {
        "type": "object",
        "properties": {
          "clientIssuesReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientIssuesReasonDto"
            }
          }
        }
      },
      "ResponseClientIssuesReasonListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientIssuesReasonListDto"
          }
        }
      },
      "UpdateClientIssuesReasonRequest": {
        "required": [
          "currentUserId",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddClientIssuesReasonDto": {
        "required": [
          "createUserId",
          "name"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientLaunchedMarketDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "zipCode": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "isPilotingMarket": {
            "type": "boolean"
          }
        }
      },
      "ResponseClientLaunchedMarketDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientLaunchedMarketDto"
          }
        }
      },
      "UpdateConfirmationEmailRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isConfirmationEmailOptIn"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isConfirmationEmailOptIn": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateClientPortalRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isUsesClientPortal"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isUsesClientPortal": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateConfigDueDateRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isActivateDueDate"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isActivateDueDate": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateAllowEditReferWoRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isAllowEditReferWoNum"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isAllowEditReferWoNum": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateEnablePriorityRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isEnablePriorityExcludeNonWorkingTime"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnablePriorityExcludeNonWorkingTime": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateEnableUnderWarrantyRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isEnableUnderWarranty"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableUnderWarranty": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdatePcdaRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "pcdaPackageId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "pcdaPackageId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateClientIsEnableRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isEnableTemperaturePriorityConfig"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableTemperaturePriorityConfig": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientTemperaturePriorityConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientTemperaturePriorityDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "temperaturePriorityConfigList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTemperaturePriorityConfig"
            }
          }
        }
      },
      "ResponseClientTemperaturePriorityDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientTemperaturePriorityDto"
          }
        }
      },
      "ClientTemperaturePriorityRequest": {
        "required": [
          "clientId",
          "id",
          "priorityId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateClientTemperaturePriorityRequest": {
        "required": [
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "clientTemperaturePriorityRequestList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientTemperaturePriorityRequest"
            }
          }
        }
      },
      "CreateClientTemperaturePriorityRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "priorityId",
          "serviceCategoryId",
          "temperature"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseClientTemperaturePriorityConfig": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientTemperaturePriorityConfig"
          }
        }
      },
      "ClientDispatchScriptDto": {
        "type": "object",
        "properties": {
          "dispatchScriptId": {
            "type": "integer",
            "format": "int32"
          },
          "dispatchScript": {
            "type": "string"
          }
        }
      },
      "ResponseClientDispatchScriptDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientDispatchScriptDto"
          }
        }
      },
      "UpdateDispatchScriptRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "dispatchScriptSettingId"
        ],
        "type": "object",
        "properties": {
          "dispatchScript": {
            "type": "string"
          },
          "dispatchScriptSettingId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateDispatchScriptRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "dispatchScript"
        ],
        "type": "object",
        "properties": {
          "dispatchScript": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoiceHoursRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "invoiceApprovalHours"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceApprovalHours": {
            "type": "number"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoiceInHouseAffiliateRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isInHouseInvoiceProcess"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isInHouseInvoiceProcess": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoiceServiceFeeRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "inHouseInvoiceServiceFeeAmount"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "inHouseInvoiceServiceFeeAmount": {
            "type": "number"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoiceServiceFeeTaxableRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isInHouseInvoiceServiceFeeTaxable"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isInHouseInvoiceServiceFeeTaxable": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoicePassThroughRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "passThroughInvoiceProcess"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "passThroughInvoiceProcess": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoicePassThroughFeeRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "passThroughInvoiceServiceFeeAmount"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "passThroughInvoiceServiceFeeAmount": {
            "type": "number"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdatePassThroughServiceFeeTaxableRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isPassThroughInvoiceServiceFeeTaxable"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isPassThroughInvoiceServiceFeeTaxable": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateInvoiceRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isInvoiceApprovalActive"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "isInvoiceApprovalActive": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KpiRequest": {
        "required": [
          "currentUserId",
          "kpiId",
          "serviceCategoryId",
          "type",
          "value"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "description": "1:Reactive, 2:Recurrent",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "kpiId": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LocationAttributeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "unitStatus": {
            "type": "string"
          },
          "warranty": {
            "type": "string"
          },
          "isHighRisk": {
            "type": "integer",
            "format": "int32"
          },
          "moveInDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "ruralUrbanId": {
            "type": "integer",
            "format": "int32"
          },
          "msa": {
            "type": "string"
          },
          "unitCode": {
            "type": "string"
          },
          "securitization": {
            "type": "string"
          },
          "trusteeOccupied": {
            "type": "boolean"
          },
          "acquisitionEntity": {
            "type": "string"
          },
          "lotSize": {
            "type": "string"
          },
          "yearBuilt": {
            "type": "integer",
            "format": "int32"
          },
          "bathRooms": {
            "type": "number",
            "format": "double"
          },
          "ttsqft": {
            "type": "number",
            "format": "double"
          },
          "pool": {
            "type": "string"
          },
          "gateCode": {
            "type": "string"
          },
          "acquiredDate": {
            "type": "string",
            "format": "date-time"
          },
          "landscapingNeeded": {
            "type": "boolean"
          },
          "specialCircumstances": {
            "type": "string"
          },
          "bedRooms": {
            "type": "integer",
            "format": "int32"
          },
          "propertyHmy": {
            "type": "integer",
            "format": "int32"
          },
          "firstRentRevenueDate": {
            "type": "string",
            "format": "date-time"
          },
          "propertyCode": {
            "type": "string"
          },
          "propertyStatus": {
            "type": "string"
          },
          "landscapingServiceType": {
            "type": "string"
          },
          "recurringLandscapingNeeded": {
            "type": "boolean"
          },
          "inventoryDate": {
            "type": "string",
            "format": "date-time"
          },
          "repeatOffender": {
            "type": "boolean"
          },
          "county": {
            "type": "string"
          },
          "dispositionType": {
            "type": "string"
          },
          "ownership": {
            "type": "string"
          },
          "poolMaint": {
            "type": "string"
          },
          "newBuildWarrantyEndDate": {
            "type": "string",
            "format": "date"
          },
          "surveyorFileName": {
            "type": "string"
          },
          "isMaintenanceHold": {
            "type": "integer",
            "format": "int32"
          },
          "isHighPriority": {
            "type": "integer",
            "format": "int32"
          },
          "sidewalkSize": {
            "type": "string"
          },
          "applicableServiceArea": {
            "type": "string"
          },
          "surveyComplete": {
            "type": "string"
          },
          "turf": {
            "type": "boolean"
          },
          "irrigation": {
            "type": "boolean"
          },
          "landscapingSize": {
            "type": "number",
            "format": "float"
          },
          "floorType": {
            "type": "string"
          },
          "vctsqtf": {
            "type": "string"
          },
          "carpetsqft": {
            "type": "string"
          },
          "concretesqft": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "restrooms": {
            "type": "integer",
            "format": "int32"
          },
          "truckDay": {
            "type": "string"
          },
          "pm": {
            "type": "string"
          },
          "bedArea": {
            "type": "number",
            "format": "double"
          },
          "mainDriveSqFt": {
            "type": "number",
            "format": "double"
          },
          "additionalDriveSqFt": {
            "type": "number",
            "format": "double"
          },
          "isHasPath": {
            "type": "integer",
            "format": "int32"
          },
          "pathCount": {
            "type": "integer",
            "format": "int32"
          },
          "locationPhoto": {
            "type": "string"
          },
          "buildingId": {
            "type": "string"
          },
          "isMandatoryHighRisk": {
            "type": "integer",
            "format": "int32"
          },
          "retentionPondSize": {
            "type": "number",
            "format": "double"
          },
          "mulchType": {
            "type": "string"
          },
          "nonPalmTrees": {
            "type": "number",
            "format": "double"
          },
          "palmTrees": {
            "type": "number",
            "format": "double"
          },
          "parkingLotSize": {
            "type": "number",
            "format": "double"
          },
          "isHoa": {
            "type": "integer",
            "format": "int32"
          },
          "isSmartHome": {
            "type": "integer",
            "format": "int32"
          },
          "insideMapWalkthroughUrl": {
            "type": "string"
          },
          "insideMap3dModelUrl": {
            "type": "string"
          },
          "dronebaseExternalId": {
            "type": "string"
          },
          "dronebaseUrl": {
            "type": "string"
          },
          "lvtsqft": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "maintenanceHoldEnumId": {
            "type": "integer",
            "format": "int32"
          },
          "remodelDate": {
            "type": "string",
            "format": "date-time"
          },
          "riskClass": {
            "type": "integer",
            "format": "int32"
          },
          "origin": {
            "type": "string"
          },
          "primaryResidentStatus": {
            "type": "string"
          },
          "customerPropertyId": {
            "type": "string"
          },
          "moveinReadyDate": {
            "type": "string",
            "format": "date-time"
          },
          "lockboxCode": {
            "type": "string"
          },
          "accessCode": {
            "type": "string"
          },
          "assignedEstimator": {
            "type": "string"
          },
          "assignedSuperintendent": {
            "type": "string"
          },
          "brokerPartner": {
            "type": "string"
          },
          "sellingContractEffectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "sellingClosingDate": {
            "type": "string",
            "format": "date-time"
          },
          "activedbyNdcpJob": {
            "type": "integer",
            "format": "int32"
          },
          "isAirFilterDelivered": {
            "type": "integer",
            "format": "int32"
          },
          "portfolioDirector": {
            "type": "string"
          },
          "isSmartHomeInstalled": {
            "type": "integer",
            "format": "int32"
          },
          "isShVideoDoorbellInstalled": {
            "type": "integer",
            "format": "int32"
          },
          "sowTrigger": {
            "type": "number",
            "format": "double"
          },
          "ruralUrban": {
            "$ref": "#/components/schemas/RuralUrbanDto"
          }
        }
      },
      "LocationAttributesDto": {
        "type": "object",
        "properties": {
          "locationAttribute": {
            "$ref": "#/components/schemas/LocationAttributeDto"
          },
          "locationLandscaping": {
            "$ref": "#/components/schemas/LocationAttributeDto"
          },
          "locationFloorCare": {
            "$ref": "#/components/schemas/LocationAttributeDto"
          },
          "storeEmail": {
            "type": "string"
          },
          "responsibleEntity": {
            "type": "string"
          }
        }
      },
      "ResponseLocationAttributesDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationAttributesDto"
          }
        }
      },
      "RuralUrbanDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseLocationAttributeDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationAttributeDto"
          }
        }
      },
      "UpdateLocationAttributeRequest": {
        "required": [
          "currentUserId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "unitStatus": {
            "type": "string"
          },
          "warranty": {
            "type": "string"
          },
          "isHighRisk": {
            "type": "integer",
            "format": "int32"
          },
          "moveInDate": {
            "type": "string",
            "format": "date"
          },
          "ruralUrbanId": {
            "type": "integer",
            "format": "int32"
          },
          "msa": {
            "type": "string"
          },
          "unitCode": {
            "type": "string"
          },
          "securitization": {
            "type": "string"
          },
          "acquisitionEntity": {
            "type": "string"
          },
          "lotSize": {
            "type": "string"
          },
          "yearBuilt": {
            "type": "integer",
            "format": "int32"
          },
          "bathRooms": {
            "type": "number"
          },
          "ttsqft": {
            "type": "number"
          },
          "pool": {
            "type": "string"
          },
          "gateCode": {
            "type": "string"
          },
          "acquiredDate": {
            "type": "string",
            "format": "date"
          },
          "landscapingNeeded": {
            "type": "boolean"
          },
          "specialCircumstances": {
            "type": "string"
          },
          "bedRooms": {
            "type": "integer",
            "format": "int32"
          },
          "propertyHmy": {
            "type": "integer",
            "format": "int32"
          },
          "firstRentRevenueDate": {
            "type": "string",
            "format": "date"
          },
          "propertyCode": {
            "type": "string"
          },
          "propertyStatus": {
            "type": "string"
          },
          "landscapingServiceType": {
            "type": "string"
          },
          "inventoryDate": {
            "type": "string",
            "format": "date"
          },
          "county": {
            "type": "string"
          },
          "newBuildWarrantyEndDate": {
            "type": "string",
            "format": "date"
          },
          "surveyorFileName": {
            "type": "string"
          },
          "isMaintenanceHold": {
            "type": "integer",
            "format": "int32"
          },
          "isHighPriority": {
            "type": "integer",
            "format": "int32"
          },
          "sidewalkSize": {
            "type": "string"
          },
          "applicableServiceArea": {
            "type": "string"
          },
          "surveyComplete": {
            "type": "string"
          },
          "landscapingSize": {
            "type": "number",
            "format": "float"
          },
          "floorType": {
            "type": "string"
          },
          "vctsqtf": {
            "type": "string"
          },
          "carpetsqft": {
            "type": "string"
          },
          "concretesqft": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "restrooms": {
            "type": "integer",
            "format": "int32"
          },
          "truckDay": {
            "type": "string"
          },
          "pm": {
            "type": "string"
          },
          "bedArea": {
            "type": "number"
          },
          "mainDriveSqFt": {
            "type": "number"
          },
          "additionalDriveSqFt": {
            "type": "number"
          },
          "isHasPath": {
            "type": "integer",
            "format": "int32"
          },
          "pathCount": {
            "type": "integer",
            "format": "int32"
          },
          "locationPhoto": {
            "type": "string"
          },
          "buildingId": {
            "type": "string"
          },
          "isMandatoryHighRisk": {
            "type": "integer",
            "format": "int32"
          },
          "retentionPondSize": {
            "type": "number"
          },
          "mulchType": {
            "type": "string"
          },
          "nonPalmTrees": {
            "type": "number"
          },
          "palmTrees": {
            "type": "number"
          },
          "parkingLotSize": {
            "type": "number"
          },
          "dronebaseExternalId": {
            "type": "string"
          },
          "lvtsqft": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "activedbyNdcpJob": {
            "type": "integer",
            "format": "int32"
          },
          "isAirFilterDelivered": {
            "type": "integer",
            "format": "int32"
          },
          "portfolioDirector": {
            "type": "string"
          },
          "isSmartHomeInstalled": {
            "type": "integer",
            "format": "int32"
          },
          "isShVideoDoorbellInstalled": {
            "type": "integer",
            "format": "int32"
          },
          "sowTrigger": {
            "type": "number"
          },
          "isTrusteeOccupied": {
            "type": "boolean"
          },
          "isRecurringLandscapingNeeded": {
            "type": "boolean"
          },
          "isRepeatOffender": {
            "type": "boolean"
          },
          "IsTurf": {
            "type": "boolean"
          },
          "isIrrigation": {
            "type": "boolean"
          }
        }
      },
      "ResponseBoolean": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "boolean"
          }
        }
      },
      "IPageLocationPageDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "current": {
            "type": "integer",
            "format": "int64"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationPageDto"
            }
          },
          "searchCount": {
            "type": "boolean"
          },
          "hitCount": {
            "type": "boolean"
          },
          "pages": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocationPageDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "smsNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "district": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "addressLine": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseIPageLocationPageDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/IPageLocationPageDto"
          }
        }
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "ClientProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "logoPath": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "clientCode": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDto"
          },
          "customerType": {
            "$ref": "#/components/schemas/CustomerTypeDto"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "customerTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "callCenterNumber": {
            "type": "string"
          },
          "serviceFeeRate": {
            "type": "number"
          },
          "platformFeeRate": {
            "type": "number"
          },
          "domain": {
            "type": "string"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "rspDomain": {
            "type": "string"
          },
          "houseOwnerDomain": {
            "type": "string"
          },
          "invoiceApprovalHours": {
            "type": "number"
          },
          "inHouseInvoiceServiceFeeAmount": {
            "type": "number"
          },
          "passThroughInvoiceServiceFeeAmount": {
            "type": "number"
          },
          "passThroughInvoiceProcess": {
            "type": "integer",
            "format": "int32"
          },
          "businessTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "pcdaPackageId": {
            "type": "integer",
            "format": "int32"
          },
          "pcdaAutomaticDeferralHours": {
            "type": "number"
          },
          "isVIP": {
            "type": "boolean"
          },
          "isEnableServiceFee": {
            "type": "boolean"
          },
          "isEnablePlatformFee": {
            "type": "boolean"
          },
          "isVirtualClient": {
            "type": "integer",
            "format": "int32"
          },
          "isConfirmationEmailOptIn": {
            "type": "boolean"
          },
          "isUsesClientPortal": {
            "type": "boolean"
          },
          "isBypassManagerToDoList": {
            "type": "boolean"
          },
          "isInvoiceApprovalActive": {
            "type": "boolean"
          },
          "isInHouseInvoiceProcess": {
            "type": "boolean"
          },
          "isInHouseInvoiceServiceFeeTaxable": {
            "type": "boolean"
          },
          "isPassThroughInvoiceProcess": {
            "type": "boolean"
          },
          "isPassThroughInvoiceServiceFeeTaxable": {
            "type": "boolean"
          },
          "isConfigDueDate": {
            "type": "boolean"
          },
          "isInvoiceDiscount": {
            "type": "boolean"
          },
          "isEnableTemperaturePriorityConfig": {
            "type": "boolean"
          },
          "isEnableOneRecommendedAffiliate": {
            "type": "boolean"
          },
          "isEnablePendingClientDispatchApproval": {
            "type": "boolean"
          },
          "isEnablePriorityExcludeNonWorkingTime": {
            "type": "boolean"
          },
          "isEnabledServiceRequest": {
            "type": "boolean"
          },
          "isEnableTurnRehabCapitalProject": {
            "type": "boolean"
          },
          "isEnabledPreDispatch": {
            "type": "boolean"
          },
          "replyRPANeedCCUserType": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableUnderWarranty": {
            "type": "boolean"
          }
        }
      },
      "ContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneExt": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          }
        }
      },
      "CustomerTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "businessType": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GpsDto": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LocationDetailDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "smsNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "locationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "locationTypeName": {
            "type": "string"
          },
          "openDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          },
          "gps": {
            "$ref": "#/components/schemas/GpsDto"
          },
          "district": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "locationPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "relocationDate": {
            "type": "string",
            "format": "date-time"
          },
          "division": {
            "type": "string"
          },
          "assetManagementExecutive": {
            "type": "string"
          },
          "legacyLocationNumber": {
            "type": "string"
          },
          "classificationId": {
            "type": "integer",
            "format": "int32"
          },
          "closeDate": {
            "type": "string",
            "format": "date"
          },
          "ttsqft": {
            "type": "number"
          },
          "gateCode": {
            "type": "string"
          },
          "locationSubTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "locationServiceProvider": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "is24HR": {
            "type": "boolean"
          },
          "isAutoRFI": {
            "type": "boolean"
          },
          "isHOA": {
            "type": "boolean"
          },
          "isHighRisk": {
            "type": "boolean"
          }
        }
      },
      "LocationInfoDto": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/LocationDetailDto"
          },
          "client": {
            "$ref": "#/components/schemas/ClientProfileDto"
          },
          "storeManagerName": {
            "type": "string"
          },
          "retailer": {
            "type": "string"
          },
          "dm": {
            "type": "string"
          },
          "rvp": {
            "type": "string"
          },
          "gvp": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "addressLine2": {
            "type": "string"
          },
          "monthlyBudget": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyBudgetDto"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "isSmartHome": {
            "type": "boolean"
          }
        }
      },
      "MonthlyBudgetDto": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "smsNumber": {
            "type": "string"
          },
          "fiscalMonth": {
            "type": "string",
            "format": "date-time"
          },
          "fiscalStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "fiscalEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          }
        }
      },
      "ResponseLocationInfoDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationInfoDto"
          }
        }
      },
      "ClientLocationDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "smsNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "is24hr": {
            "type": "integer",
            "format": "int32"
          },
          "locationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "openDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          },
          "district": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "locationPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "relocationDate": {
            "type": "string",
            "format": "date-time"
          },
          "division": {
            "type": "string"
          },
          "assetManagementExecutive": {
            "type": "string"
          },
          "legacyLocationNumber": {
            "type": "string"
          },
          "isAutoRfi": {
            "type": "integer",
            "format": "int32"
          },
          "classificationId": {
            "type": "integer",
            "format": "int32"
          },
          "closeDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClientLocationListDto": {
        "type": "object",
        "properties": {
          "clientLocationDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientLocationDto"
            }
          }
        }
      },
      "ResponseClientLocationListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientLocationListDto"
          }
        }
      },
      "ResponseInteger": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseClientLocationDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientLocationDto"
          }
        }
      },
      "UpdateLocationRequest": {
        "required": [
          "currentUserId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "is24hr": {
            "type": "string"
          },
          "openDate": {
            "type": "string",
            "format": "date"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "locationPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          },
          "district": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "isAutoRfi": {
            "type": "integer",
            "format": "int32"
          },
          "classificationId": {
            "type": "integer",
            "format": "int32"
          },
          "closeDate": {
            "type": "string",
            "format": "date"
          },
          "phone": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "isActive": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateLocationRequest": {
        "required": [
          "addressLine1",
          "clientId",
          "country",
          "createUserId",
          "isCreatingAccount",
          "lat",
          "lng",
          "phone",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "locationNumber": {
            "type": "string"
          },
          "smsNumber": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "is24hr": {
            "type": "integer",
            "format": "int32"
          },
          "locationTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "locationPriorityId": {
            "type": "integer",
            "format": "int32"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          },
          "district": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "relocationDate": {
            "type": "string",
            "format": "date-time"
          },
          "division": {
            "type": "string"
          },
          "assetManagementExecutive": {
            "type": "string"
          },
          "legacyLocationNumber": {
            "type": "string"
          },
          "isAutoRfi": {
            "type": "integer",
            "format": "int32"
          },
          "classificationId": {
            "type": "integer",
            "format": "int32"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "addressLine1": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "isCreatingAccount": {
            "type": "boolean"
          }
        }
      },
      "CreateLocationDto": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "smsNumber": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ResponseCreateLocationDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CreateLocationDto"
          }
        }
      },
      "LocationLandlordPageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "landlordName": {
            "type": "string"
          },
          "landlordCode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zippostal": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "fax": {
            "type": "string"
          },
          "houseOwnerId": {
            "type": "string"
          },
          "locationEntity": {
            "$ref": "#/components/schemas/LocationDetailDto"
          }
        }
      },
      "PageLocationLandlordPageDto": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationLandlordPageDto"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "current": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "optimizeCountSql": {
            "type": "boolean"
          },
          "hitCount": {
            "type": "boolean"
          },
          "desc": {
            "$ref": "#/components/schemas/PageLocationLandlordPageDto"
          },
          "ascs": {
            "$ref": "#/components/schemas/PageLocationLandlordPageDto"
          },
          "searchCount": {
            "type": "boolean"
          },
          "descs": {
            "$ref": "#/components/schemas/PageLocationLandlordPageDto"
          },
          "asc": {
            "$ref": "#/components/schemas/PageLocationLandlordPageDto"
          },
          "pages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponsePageLocationLandlordPageDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageLocationLandlordPageDto"
          }
        }
      },
      "LocationLandlordDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "landlordName": {
            "type": "string"
          },
          "landlordCode": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zippostal": {
            "type": "string"
          },
          "contact": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseLocationLandlordDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationLandlordDto"
          }
        }
      },
      "UpdateLocationLandlordRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "landlordName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zippostal": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "CreateLocationLandlordRequest": {
        "required": [
          "createUserId",
          "landlordName",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "landlordName": {
            "type": "string"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zippostal": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "UpdateLocationManagerRequest": {
        "required": [
          "currentUserId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "storeManager": {
            "type": "string"
          },
          "dm": {
            "type": "string"
          },
          "rvp": {
            "type": "string"
          },
          "gvp": {
            "type": "string"
          }
        }
      },
      "LocationMirDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "certificationEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "financialStableDate": {
            "type": "string",
            "format": "date-time"
          },
          "newBuildWarrantyEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "unitHmy": {
            "type": "integer",
            "format": "int32"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "firstMIRDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentMIRVendor": {
            "type": "string"
          },
          "currentMIRDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentMIRType": {
            "type": "string"
          }
        }
      },
      "ResponseLocationMirDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationMirDto"
          }
        }
      },
      "InsertOrUpdateLocationMirRequest": {
        "required": [
          "currentUserId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "firstMirDate": {
            "type": "string",
            "format": "date"
          },
          "certificationEndDate": {
            "type": "string",
            "format": "date"
          },
          "currentMirVendor": {
            "type": "string"
          },
          "financialStableDate": {
            "type": "string",
            "format": "date"
          },
          "newBuildWarrantyEndDate": {
            "type": "string",
            "format": "date"
          },
          "currentMirDate": {
            "type": "string",
            "format": "date"
          },
          "currentMirType": {
            "type": "string"
          },
          "unitHmy": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LocationMonthlyBudgetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "fiscalMonthId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "capitalType": {
            "type": "integer",
            "format": "int32"
          },
          "glCode": {
            "type": "string"
          }
        }
      },
      "ResponseLocationMonthlyBudgetDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationMonthlyBudgetDto"
          }
        }
      },
      "LocationResidentialDto": {
        "type": "object",
        "properties": {
          "residentId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "residentialNum": {
            "type": "string"
          },
          "dwellingStatus": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "moveInDate": {
            "type": "string",
            "format": "date-time"
          },
          "moveOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "leaseStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "leaseEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "isReceiveSmsAlert": {
            "type": "integer",
            "format": "int32"
          },
          "phoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneDto"
            }
          },
          "additionalPhoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneDto"
            }
          }
        }
      },
      "PhoneDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "phoneType": {
            "type": "integer",
            "format": "int32"
          },
          "isPrimaryPhone": {
            "type": "boolean"
          },
          "isTextMessagingApproved": {
            "type": "boolean"
          }
        }
      },
      "ResponseLocationResidentialDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LocationResidentialDto"
          }
        }
      },
      "PhoneRequest": {
        "required": [
          "phoneType"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "phoneType": {
            "type": "integer",
            "format": "int32"
          },
          "isPrimaryPhone": {
            "type": "boolean"
          },
          "isTextMessagingApproved": {
            "type": "boolean"
          }
        }
      },
      "UpdateLocationResidentialRequest": {
        "required": [
          "createUserId",
          "locationId",
          "name",
          "residentId"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneRequest"
            }
          },
          "additionalPhoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneRequest"
            }
          },
          "residentId": {
            "type": "integer",
            "format": "int32"
          },
          "moveInDate": {
            "type": "string",
            "format": "date-time"
          },
          "moveOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "leaseStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "leaseEndDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateLocationResidentialRequest": {
        "required": [
          "createUserId",
          "locationId",
          "name"
        ],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneRequest"
            }
          },
          "additionalPhoneList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneRequest"
            }
          },
          "moveInDate": {
            "type": "string",
            "format": "date"
          },
          "moveOutDate": {
            "type": "string",
            "format": "date"
          },
          "leaseStartDate": {
            "type": "string",
            "format": "date"
          },
          "leaseEndDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "LocationTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseListLocationTypeDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationTypeDto"
            }
          }
        }
      },
      "CheckinMileageConfigListDto": {
        "type": "object",
        "properties": {
          "checkInMileageDesignations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckinMileageDto"
            }
          }
        }
      },
      "CheckinMileageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "restrictionType": {
            "type": "integer",
            "format": "int32"
          },
          "mileage": {
            "type": "integer",
            "format": "int32"
          },
          "checkinType": {
            "type": "integer",
            "format": "int32"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseCheckinMileageConfigListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CheckinMileageConfigListDto"
          }
        }
      },
      "UpdateCheckinMileageRequest": {
        "required": [
          "modifyUserId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "restrictionType": {
            "type": "integer",
            "format": "int32"
          },
          "mileage": {
            "type": "integer",
            "format": "int32"
          },
          "checkinType": {
            "type": "integer",
            "format": "int32"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddCheckinMileageDto": {
        "required": [
          "checkinType",
          "clientId",
          "createUserId",
          "departmentId",
          "mileage",
          "restrictionType"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "departmentId": {
            "type": "integer",
            "format": "int32"
          },
          "restrictionType": {
            "type": "integer",
            "format": "int32"
          },
          "mileage": {
            "type": "integer",
            "format": "int32"
          },
          "checkinType": {
            "type": "integer",
            "format": "int32"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseCheckinMileageDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/CheckinMileageDto"
          }
        }
      },
      "PhotoLabelsSelectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PhotoLabelsSelectListDto": {
        "type": "object",
        "properties": {
          "photoLabelsSelectDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhotoLabelsSelectDto"
            }
          }
        }
      },
      "ResponsePhotoLabelsSelectListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PhotoLabelsSelectListDto"
          }
        }
      },
      "PhotoLabelsDto": {
        "type": "object",
        "properties": {
          "isEnableBeforeAndAfterService": {
            "type": "integer",
            "format": "int32"
          },
          "checkInRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkInOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beforeServiceRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beforeServiceOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "afterServiceRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "afterServiceOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkOutRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkOutOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResponsePhotoLabelsDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PhotoLabelsDto"
          }
        }
      },
      "UpdatePhotoLabelStatusRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "status",
          "type"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "0:ServiceCategory;1:ServiceType;2:ServiceCode;3:Client",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "0:Inherit;1:Enabled;2:Disabled",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreatePhotoLabelRequest": {
        "required": [
          "clientId",
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "0:Service Category;1:Service Type;2:Service Code",
            "format": "int32"
          },
          "checkInRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkInOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkOutRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkOutOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beforeServiceRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beforeServiceOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "afterServiceRequired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "afterServiceOptional": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SwapRankRequest": {
        "required": [
          "currentUserId",
          "refType",
          "sourceQuestionId",
          "targetQuestionId"
        ],
        "type": "object",
        "properties": {
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceQuestionId": {
            "type": "string"
          },
          "targetQuestionId": {
            "type": "string"
          }
        }
      },
      "UpdateQuestionOptionRequest": {
        "required": [
          "currentUserId",
          "optionId",
          "questionId",
          "refType"
        ],
        "type": "object",
        "properties": {
          "questionId": {
            "type": "string"
          },
          "optionId": {
            "type": "string"
          },
          "isHide": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "woTagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateQuestionOptionRequest": {
        "required": [
          "currentUserId",
          "name",
          "questionId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "subQuestionId": {
            "type": "string"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "woTagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "string"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "modifyUserId": {
            "type": "string"
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "questionId": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IdNameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ResponseIdNameDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/IdNameDto"
          }
        }
      },
      "LogicRequest": {
        "type": "object",
        "properties": {
          "optionId": {
            "type": "string"
          },
          "subQuestionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateQuestionRulesRequest": {
        "required": [
          "currentUserId",
          "id",
          "refType"
        ],
        "type": "object",
        "properties": {
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "logicList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogicRequest"
            }
          }
        }
      },
      "QueryQuestionAndFeelsLikeDto": {
        "type": "object",
        "properties": {
          "woTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdNameDto"
            }
          },
          "priorityList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdNameDto"
            }
          },
          "woTagList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdNameDto"
            }
          },
          "clientCustomerTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "feelsLikeIsActive": {
            "type": "boolean"
          }
        }
      },
      "ResponseQueryQuestionAndFeelsLikeDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/QueryQuestionAndFeelsLikeDto"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "string"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "questionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "string"
          },
          "subQuestionId": {
            "type": "string"
          },
          "subQuestionRank": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "questionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionOptions"
            }
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "string"
          }
        }
      },
      "QuestionOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "subQuestionId": {
            "type": "string"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "woTagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "string"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "string"
          }
        }
      },
      "ResponseQuestion": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Question"
          }
        }
      },
      "CopyQuestionRequest": {
        "required": [
          "currentUserId",
          "questionId",
          "refType"
        ],
        "type": "object",
        "properties": {
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "questionId": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseStringIdDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/StringIdDto"
          }
        }
      },
      "StringIdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateQuestionMultiOptionRequest": {
        "required": [
          "currentUserId",
          "optionNames",
          "questionId",
          "refType"
        ],
        "type": "object",
        "properties": {
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "questionId": {
            "type": "string"
          },
          "optionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseListIdNameDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdNameDto"
            }
          }
        }
      },
      "LogicDto": {
        "type": "object",
        "properties": {
          "optionId": {
            "type": "string"
          },
          "questionId": {
            "type": "string"
          }
        }
      },
      "QuestionDto": {
        "type": "object",
        "properties": {
          "questionNum": {
            "type": "integer",
            "format": "int32"
          },
          "logics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogicDto"
            }
          },
          "id": {
            "type": "string"
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "string"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "questionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "string"
          },
          "subQuestionId": {
            "type": "string"
          },
          "subQuestionRank": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "format": {
            "type": "string"
          },
          "questionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionOptionsDto"
            }
          }
        }
      },
      "QuestionListDto": {
        "type": "object",
        "properties": {
          "questionDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionDto"
            }
          }
        }
      },
      "QuestionOptionsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "subQuestionId": {
            "type": "string"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "woTagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "woTagId": {
            "type": "integer",
            "format": "int32"
          },
          "questionId": {
            "type": "string"
          }
        }
      },
      "ResponseQuestionListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/QuestionListDto"
          }
        }
      },
      "UpdateQuestionRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "id",
          "refType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "string"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "questionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "isHide": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateQuestionRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "name",
          "refType"
        ],
        "type": "object",
        "properties": {
          "refType": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "string"
          },
          "businessUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "questionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isMandatory": {
            "type": "boolean"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "string"
          },
          "subQuestionId": {
            "type": "string"
          },
          "subQuestionRank": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "string"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "questionOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionOptionsRequest"
            }
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QuestionOptionsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "subQuestionId": {
            "type": "string"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "string"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isHide": {
            "type": "boolean"
          },
          "woTagIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "string"
          }
        }
      },
      "ClientServiceCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "integer",
            "format": "int32"
          },
          "clientName": {
            "type": "string"
          }
        }
      },
      "PageClientServiceCategoryDto": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientServiceCategoryDto"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "current": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "optimizeCountSql": {
            "type": "boolean"
          },
          "hitCount": {
            "type": "boolean"
          },
          "desc": {
            "$ref": "#/components/schemas/PageClientServiceCategoryDto"
          },
          "ascs": {
            "$ref": "#/components/schemas/PageClientServiceCategoryDto"
          },
          "searchCount": {
            "type": "boolean"
          },
          "descs": {
            "$ref": "#/components/schemas/PageClientServiceCategoryDto"
          },
          "asc": {
            "$ref": "#/components/schemas/PageClientServiceCategoryDto"
          },
          "pages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponsePageClientServiceCategoryDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageClientServiceCategoryDto"
          }
        }
      },
      "ServiceDetailRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "id",
          "isChecked",
          "isPersonal",
          "level"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "0:ServiceCategory, 1:ServiceType, 2:ServiceCode",
            "format": "int32"
          },
          "isChecked": {
            "type": "boolean"
          },
          "isPersonal": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseServiceNteIsEnableDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ServiceNteIsEnableDto"
          }
        }
      },
      "ServiceNteIsEnableDto": {
        "type": "object",
        "properties": {
          "isEnableChargeBack": {
            "type": "boolean"
          }
        }
      },
      "UpdateIsEnableChargeBackRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isEnableChargeBack",
          "serviceCodeId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnableChargeBack": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseServiceNteDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ServiceNteDto"
          }
        }
      },
      "ServiceNteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "clientNte": {
            "type": "number"
          },
          "affiliateNte": {
            "type": "number"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "isContract": {
            "type": "boolean"
          },
          "isHiddenForClient": {
            "type": "boolean"
          },
          "isFacilityServiceCode": {
            "type": "boolean"
          },
          "isRecurringBilling": {
            "type": "boolean"
          }
        }
      },
      "UpdateServiceNteRequest": {
        "required": [
          "affiliateNte",
          "clientId",
          "clientNte",
          "currentUserId",
          "isHiddenForClient",
          "isRecurringBilling",
          "serviceCodeId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "clientNte": {
            "type": "number"
          },
          "affiliateNte": {
            "type": "number"
          },
          "isContract": {
            "type": "boolean"
          },
          "isHiddenForClient": {
            "type": "boolean"
          },
          "isRecurringBilling": {
            "type": "boolean"
          },
          "serviceTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseServicePriorityListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ServicePriorityListDto"
          }
        }
      },
      "ServicePriorityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "abbrName": {
            "type": "string"
          },
          "checked": {
            "type": "boolean"
          }
        }
      },
      "ServicePriorityListDto": {
        "type": "object",
        "properties": {
          "servicePriorityDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePriorityDto"
            }
          }
        }
      },
      "ServiceCodePriorityRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "priorityId",
          "serviceCodeId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServicePriorityRequest": {
        "required": [
          "clientId",
          "currentUserId",
          "isChecked",
          "name",
          "priorityId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "priorityId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "isChecked": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseServiceSowListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ServiceSowListDto"
          }
        }
      },
      "ServiceSowDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "scopeOfWorkTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "isVisible": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServiceSowListDto": {
        "type": "object",
        "properties": {
          "serviceSowDtoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSowDto"
            }
          }
        }
      },
      "ServiceSowRequest": {
        "required": [
          "clientId",
          "contentType",
          "currentUserId",
          "fileName",
          "filePath",
          "isVisible",
          "scopeOfWorkTypeId",
          "serviceCodeId"
        ],
        "type": "object",
        "properties": {
          "scopeOfWorkTypeId": {
            "type": "integer",
            "description": "1:ClientSOW, 2:AffiliateSOW",
            "format": "int32"
          },
          "clientId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "contentType": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "isVisible": {
            "type": "boolean"
          },
          "serviceCodeId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseServiceSowDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ServiceSowDto"
          }
        }
      },
      "ClientThemeDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "fontName": {
            "type": "string"
          },
          "font": {
            "type": "string"
          },
          "primaryColor": {
            "type": "string"
          },
          "secondColor": {
            "type": "string"
          },
          "widgetColor": {
            "type": "string"
          },
          "loginColor": {
            "type": "string"
          },
          "loginEffect": {
            "type": "string"
          },
          "loginLogo": {
            "type": "string"
          },
          "baseLogo": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "banner": {
            "type": "string"
          }
        }
      },
      "ResponseClientThemeDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientThemeDto"
          }
        }
      },
      "ClientTheme": {
        "type": "object",
        "properties": {
          "ClientId": {
            "type": "string"
          },
          "FontName": {
            "type": "string"
          },
          "FontUrl": {
            "type": "string"
          },
          "FontKey": {
            "type": "string"
          },
          "FontPath": {
            "type": "string"
          },
          "FontSrc": {
            "type": "string"
          },
          "PrimaryColor": {
            "type": "string"
          },
          "SecondColor": {
            "type": "string"
          },
          "WidgetColor": {
            "type": "string"
          },
          "LoginColor": {
            "type": "string"
          },
          "LoginEffect": {
            "type": "string"
          },
          "LoginLogoUrl": {
            "type": "string"
          },
          "LoginLogoKey": {
            "type": "string"
          },
          "LoginLogoPath": {
            "type": "string"
          },
          "BaseLogoUrl": {
            "type": "string"
          },
          "BaseLogoKey": {
            "type": "string"
          },
          "BaseLogoPath": {
            "type": "string"
          },
          "AvatarUrl": {
            "type": "string"
          },
          "AvatarKey": {
            "type": "string"
          },
          "AvatarPath": {
            "type": "string"
          },
          "BannerUrl": {
            "type": "string"
          },
          "BannerKey": {
            "type": "string"
          },
          "BannerPath": {
            "type": "string"
          },
          "MenuCssUrl": {
            "type": "string"
          },
          "MenuCssKey": {
            "type": "string"
          },
          "MenuCssPath": {
            "type": "string"
          },
          "SignInCssUrl": {
            "type": "string"
          },
          "SignInCssKey": {
            "type": "string"
          },
          "SignInCssPath": {
            "type": "string"
          },
          "FontEotKey": {
            "type": "string"
          },
          "FontWoffKey": {
            "type": "string"
          },
          "FontTtfKey": {
            "type": "string"
          },
          "FontSvgKey": {
            "type": "string"
          }
        }
      },
      "UpdateClientThemeRequest": {
        "required": [
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "clientTheme": {
            "$ref": "#/components/schemas/ClientTheme"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientRspThemeDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "loginColor": {
            "type": "string"
          },
          "loginLogo": {
            "type": "string"
          }
        }
      },
      "ResponseClientRspThemeDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientRspThemeDto"
          }
        }
      },
      "UpdateClientRspThemeRequest": {
        "required": [
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "loginColor": {
            "type": "string"
          },
          "loginLogo": {
            "type": "string"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateUrlCustomizationRequest": {
        "required": [
          "currentUserId",
          "domain"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientDomainDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "isOperable": {
            "type": "boolean"
          },
          "isAgree": {
            "type": "boolean"
          },
          "replyTime": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "ResponseClientDomainDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientDomainDto"
          }
        }
      },
      "UpdateWoRequestRequest": {
        "required": [
          "clientId",
          "currentUserId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "affiliateId": {
            "type": "integer",
            "format": "int32"
          },
          "affiliateName": {
            "type": "string"
          },
          "byPassSms": {
            "type": "boolean"
          },
          "requestStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseUpdateWoRequestDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UpdateWoRequestDto"
          }
        }
      },
      "UpdateWoRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "affiliateId": {
            "type": "integer",
            "format": "int32"
          },
          "affiliateName": {
            "type": "string"
          },
          "byPassSms": {
            "type": "boolean"
          },
          "requestStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          },
          "isEnable": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createUserId": {
            "type": "integer",
            "format": "int32"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifyUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientWoTypeListDto": {
        "type": "object",
        "properties": {
          "reactiveWoTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WoTypeDto"
            }
          },
          "recurringWoTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WoTypeDto"
            }
          },
          "enableWoTypeList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ResponseClientWoTypeListDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ClientWoTypeListDto"
          }
        }
      },
      "WoTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "recurrent": {
            "type": "boolean"
          },
          "reactive": {
            "type": "boolean"
          }
        }
      },
      "UpdateClientWoTypeRequest": {
        "required": [
          "currentUserId",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int32"
          },
          "woTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "integer",
            "format": "int32"
          },
          "currentUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}