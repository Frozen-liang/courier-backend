{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Moon.Web.Client"
  },
  "host": "client-onedev.smsassist.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ABModule/HasABModulePermissionByLocation": {
      "post": {
        "tags": [
          "ABModule"
        ],
        "summary": "Has ABModule permission by location",
        "operationId": "ABModule_HasABModulePermissionByLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "abModule",
            "in": "body",
            "description": "abModule",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                15,
                16,
                18,
                19,
                20,
                21,
                22,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                35,
                36,
                38,
                39,
                42,
                43,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                55,
                56,
                57,
                59,
                60,
                61,
                62,
                63
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Account/RedirectReportPortal": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_RedirectReportPortal",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Login",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/LoginCss": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Login Css",
        "operationId": "Account_LoginCss",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.LoginCSSModel"
            }
          }
        }
      }
    },
    "/Account/LoginSSO": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "LoginSSO",
        "operationId": "Account_LoginSSO",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/RWLogin": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_RWLogin",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/OneSingleSignOn": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "One Single Sign On",
        "operationId": "Account_OneSingleSignOn",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/CheckLogin": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CheckLogin",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "returnUrl",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/JpmcSSOFailed": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_JpmcSSOFailed",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/JpmcNoneFLUser": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_JpmcNoneFLUser",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/JpmcSSOInvalidLocation": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_JpmcSSOInvalidLocation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/JpmcAppSSOSuccess": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_JpmcAppSSOSuccess",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/ServiceMeshToken": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ServiceMeshToken",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/Account/TokenLogin": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Token Login",
        "operationId": "Account_TokenLogin",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "utcOffSet",
            "in": "query",
            "description": "utcOffSet",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isSupportDST",
            "in": "query",
            "description": "isSupportDST",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "returnUrl",
            "in": "query",
            "description": "returnUrl",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.ActionResultViewModel"
            }
          }
        }
      }
    },
    "/Account/CheckExistEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CheckExistEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/LogOff": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "LogOff",
        "operationId": "Account_LogOff",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/CheckUpdateUserEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CheckUpdateUserEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/ForgotPwd": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ForgotPwd",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "resetUserNamePwd",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/ResetPwd": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Reset Pwd",
        "operationId": "Account_ResetPwd",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.ResetPasswordViewModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ResetPwd",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/ResetPasswordConfirmation": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ResetPasswordConfirmation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/MyEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_MyEmail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/Dump": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Dump",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/MyProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "My profile",
        "operationId": "Account_MyProfile",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserProfileModel"
            }
          }
        }
      }
    },
    "/Account/MyProfileForInteractionLog": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "My profile for interaction log",
        "operationId": "Account_MyProfileForInteractionLog",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ProfileForInteractionLogModel"
            }
          }
        }
      }
    },
    "/Account/MyLogo": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_MyLogo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UpdateProfile",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "phone",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneExt",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReceiveEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isReceiveSMSAlert",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "cellPhone",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/UserProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "User Profile",
        "operationId": "Account_UserProfile",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/ExportRequests": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ExportRequests",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/UpdatePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UpdatePassword",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "oldPassword",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newPassword",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/UpdatePasswordByFirst": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UpdatePasswordByFirst",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "newPassword",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/IsPasswordChange": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_IsPasswordChange",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/CancelCreateNewPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CancelCreateNewPassword",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/CheckPwd": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CheckPwd",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "oldPassword",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/GetOnlineUsers": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Get online users",
        "operationId": "Account_GetOnlineUsers",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userIds",
            "in": "body",
            "description": "userIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserOnlineModel"
              }
            }
          }
        }
      }
    },
    "/Account/IsUserTermsAccepted": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Is user terms accepted",
        "operationId": "Account_IsUserTermsAccepted",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserTerms"
            }
          }
        }
      }
    },
    "/Account/GetUnAcceptedUserTerms": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetUnAcceptedUserTerms",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/AcceptTerms": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_AcceptTerms",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Account/ExternLoginKey": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ExternLoginKey",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "expires",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/Login2": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Login2",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expires",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/GetTextMessageDisplay": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetTextMessageDisplay",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/GetTipLog": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetTipLog",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/GetCoverUserDataList": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetCoverUserDataList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/CreateUserCover": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CreateUserCover",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserCoverEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/Account/CreateUserCoverForYou": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CreateUserCoverForYou",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/Account/DeleteUserCover": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_DeleteUserCover",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Account/UpdateUserCover": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UpdateUserCover",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userCoverEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserCoverEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Account/GetUserCover": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetUserCover",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userCoverQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserCoverQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/GetMenuAllData": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Get menu all data",
        "operationId": "Account_GetMenuAllData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userCoverQueryModel",
            "in": "body",
            "description": "userCoverQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserCoverQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.CoverUserModel"
            }
          }
        }
      }
    },
    "/Account/CoverSignInAsync": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CoverSignInAsync",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "coverUserId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Account/CancelCoverSignInAsync": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CancelCoverSignInAsync",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Account/GetClientPhone": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Get client phone",
        "operationId": "Account_GetClientPhone",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Account/GetUserNewFeatureTips": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Get user new feature tips",
        "operationId": "Account_GetUserNewFeatureTips",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "code",
            "in": "body",
            "description": "code",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                100
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Account/Reset": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Reset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/UserLogin": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UserLogin",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.LoginViewModel"
            }
          },
          {
            "name": "returnUrl",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Account/ResetPwdEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ResetPwdEmail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ChangePassword",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/PropertyManagerList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_PropertyManagerList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AllWoType": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AllWoType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AllServiceCategory": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AllInHouseServiceRegion": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AllInHouseServiceRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AllOwnership": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AllOwnership",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/KeyPerformanceIndicators": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_KeyPerformanceIndicators",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetKpi": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetKpi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Client.FinancialOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetServiceCategoryKpis": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetServiceCategoryKpis",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Client.FinancialOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportWoListExcel": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportWoListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/OpenWOStatusAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_OpenWOStatusAging",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetTableauToken": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetTableauToken",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/AdvancedReport/TableauTestView": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "summary": "Tableau Test View",
        "operationId": "AdvancedReport_TableauTestView",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "viewPath",
            "in": "body",
            "description": "viewPath",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetAllListDatas": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetOpenWOStatusAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetOpenWOStatusAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AllServiceGroup": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AllServiceGroup",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetDistrictKpis": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetDistrictKpis",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Client.FinancialOverviewQueryModel"
            }
          },
          {
            "name": "compareDistricts",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/BudgetTracking": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_BudgetTracking",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/ReactiveTotalSpend": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ReactiveTotalSpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/RecurringTotalSpend": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_RecurringTotalSpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ServiceFrequency": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ServiceFrequency",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/MetricsByMarket": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_MetricsByMarket",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetMetricsByMarket": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetMetricsByMarket",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.JPMCMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportExcelMetricsByMarket": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportExcelMetricsByMarket",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportPdfMetricsByMarket": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportPdfMetricsByMarket",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/MetricsByServiceCode": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_MetricsByServiceCode",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetMetricsByServiceCode": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetMetricsByServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.JPMCMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportExcelMetricsByCategory": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportExcelMetricsByCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportPdfMetricsByCategory": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportPdfMetricsByCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/Trends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_Trends",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallCenterTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallCenterTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallsBySubIssueTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallsBySubIssueTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetWorkOrderSatisfactionTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetWorkOrderSatisfactionTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetScheduleAdherenceRLMTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetScheduleAdherenceRLMTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetMilestonesTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetMilestonesTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/MonthlyPropertyFinancialReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_MonthlyPropertyFinancialReport",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetMonthlyPropertyFinancialReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetMonthlyPropertyFinancialReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.MonthlyPropertyFinancialReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetResidentialWoTypes": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetResidentialWoTypes",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/BudgetTrackingBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_BudgetTrackingBI",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetBudgetBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetBudgetBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/TotalSpend": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_TotalSpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AveragePerProperty": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AveragePerProperty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AveragePerWorkOrder": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AveragePerWorkOrder",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/DaysToComplete": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_DaysToComplete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/CallsPerProperty": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_CallsPerProperty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/woPrint": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_woPrint",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64String",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/TrendsToPdf": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_TrendsToPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64String",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/Metrics": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_Metrics",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/OpenWoCount": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_OpenWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/CompletedWoCount": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_CompletedWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/SmsVendorOpenWoAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_SmsVendorOpenWoAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/InHouseTechniciansOpenWoAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_InHouseTechniciansOpenWoAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/OpenWoByPriority": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_OpenWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/CompletedWoByPriority": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_CompletedWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/MetricsByCategory": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_MetricsByCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetMetricsByCategory": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetMetricsByCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportOpenWoListExcel": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportOpenWoListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportCompletedWoListExcel": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportCompletedWoListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportExcelDynamicPropertyList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportExcelDynamicPropertyList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportCounty": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportCounty",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportPdfLeaderBoard": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportPdfLeaderBoard",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LeaderBoardQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportExcelLeaderBoard": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportExcelLeaderBoard",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LeaderBoardQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/LeaderBoard": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_LeaderBoard",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/LocationsWithThreeOpenReactiveWos": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_LocationsWithThreeOpenReactiveWos",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/LocationsWithThreeOpenReactiveWosBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_LocationsWithThreeOpenReactiveWosBI",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetLocationWithOpenReactiveWoBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetLocationWithOpenReactiveWoBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/AverageWorkOrderStatusAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_AverageWorkOrderStatusAging",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetLeaderBoardList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetLeaderBoardList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LeaderBoardQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/TrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_TrendsBI",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallSourceTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallSourceTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallSourceTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallSourceTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallAssignmentAndAvoidanceTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallAssignmentAndAvoidanceTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCallAssignmentAndAvoidanceTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCallAssignmentAndAvoidanceTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCompletionRatioTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCompletionRatioTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCompletionRatioTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCompletionRatioTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetPostMoveInCallTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetPostMoveInCallTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetPostMoveInCallTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetPostMoveInCallTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetPostMoveInCallTrendByTypeTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetPostMoveInCallTrendByTypeTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetPostMoveInCallTrendByTypeTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetPostMoveInCallTrendByTypeTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetWorkOrderVolumebyMonthTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetWorkOrderVolumebyMonthTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetWorkOrderVolumebyMonthTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetWorkOrderVolumebyMonthTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCostbyVintageTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCostbyVintageTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCostbyVintageTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCostbyVintageTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetAverageWorkOrderCostbyTypeTrends": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetAverageWorkOrderCostbyTypeTrends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TrendsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetAverageWorkOrderCostbyTypeTrendsBI": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetAverageWorkOrderCostbyTypeTrendsBI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/DynamicPropertyList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_DynamicPropertyList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetDynamicPropertyList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetDynamicPropertyList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.DynamicPropertyListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/SavingsPerPeriod": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_SavingsPerPeriod",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSavingsPerPeriod": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSavingsPerPeriod",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SavingsPerPeriodQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSavingsPerPeriodChartData": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSavingsPerPeriodChartData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SavingsPerPeriodQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSavingsPerPeriodTrendsData": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSavingsPerPeriodTrendsData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SavingsPerPeriodQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/FinancialOverviewByOverall": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_FinancialOverviewByOverall",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/FinancialOverviewByDistrict": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_FinancialOverviewByDistrict",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/FinancialOverviewByRegion": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_FinancialOverviewByRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/FinancialOverviewByStore": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_FinancialOverviewByStore",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/YTDTotalSpend": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_YTDTotalSpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/MTDTotalSpend": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_MTDTotalSpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialAdvReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/Accrual": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_Accrual",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetAccrualReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetAccrualReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AccrualReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportBudgetWoList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportBudgetWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RetailReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportAccrualWoList": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportAccrualWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RetailReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportFinancialOverallDistrictData": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportFinancialOverallDistrictData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportTechnicianActivityReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportTechnicianActivityReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianActivityReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/Export7ElevenKPIMetricsReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_Export7ElevenKPIMetricsReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ExportMetrics": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ExportMetrics",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RetailMetricsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetFinancialBudgetOverviewByLocation": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetFinancialBudgetOverviewByLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetFinancialBudgetOverviewByDistrict": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetFinancialBudgetOverviewByDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetFinancialBudgetOverviewByRegion": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetFinancialBudgetOverviewByRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetFinancialBudgetOverviewByOverall": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetFinancialBudgetOverviewByOverall",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetFinancialBudgetByDistrict": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetFinancialBudgetByDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetWOListForFinancialDashboardLocation": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetWOListForFinancialDashboardLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/AdvancedReport/TechnicianActivityReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_TechnicianActivityReport",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetTechnicianActivityReport": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetTechnicianActivityReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianActivityReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/SLAPerformance": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_SLAPerformance",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/SLAReports": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_SLAReports",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/SLAAging": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_SLAAging",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSLAPerformanceByDistrict": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSLAPerformanceByDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSLAPerformanceByRegion": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSLAPerformanceByRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSLAPerformanceByRegionTotal": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSLAPerformanceByRegionTotal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetSLAPerformanceByDistrictTotal": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetSLAPerformanceByDistrictTotal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ComplianceByServiceProvider": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ComplianceByServiceProvider",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetComplianceByServiceProvider": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetComplianceByServiceProvider",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetPagedComplianceByServiceProvider": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetPagedComplianceByServiceProvider",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BI7ElevenKPIMetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/ViewToPdf": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_ViewToPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64String",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReport/GetCurrentFiscalMonth": {
      "post": {
        "tags": [
          "AdvancedReport"
        ],
        "operationId": "AdvancedReport_GetCurrentFiscalMonth",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/AdvancedReportApi/GetFinancialOverViewByStoreWOListApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetFinancialOverViewByStoreWOListApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/ExportFinancialDashboardStoreWOList": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_ExportFinancialDashboardStoreWOList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetFinancialOverviewByStoreWOListData": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetFinancialOverviewByStoreWOListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardWoListViewModel]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetFiscalMonthByCalendarDate": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetFiscalMonthByCalendarDate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createMonth",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.AdvancedReportApiController.ClientFiscalMonthQueryResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetDataServiceCode": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetDataServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ServiceCodeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.DataServiceCodeResult]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportOpenWorkOrderCountApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportOpenWorkOrderCountApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportOpenWorkOrderCount": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportOpenWorkOrderCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderCountModel]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportCompletedWorkOrderCountApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportCompletedWorkOrderCountApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportCompletedWorkOrderCount": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportCompletedWorkOrderCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderCountModel]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportSmsVendorOpenWoAgingApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportSmsVendorOpenWoAgingApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportSmsVendorOpenWoAging": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportSmsVendorOpenWoAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderAgingCountModel]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportCompletedWoByPriorityApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportCompletedWoByPriorityApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportCompletedWoByPriority": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportCompletedWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.WebService.Client.Controllers.MetricsReport.WorkOrderByPriorityModel]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportOpenWoByPriorityApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportOpenWoByPriorityApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportOpenWoByPriority": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportOpenWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.WebService.Client.Controllers.MetricsReport.WorkOrderByPriorityModel]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/ExportOpenWoListExcel": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_ExportOpenWoListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetExportOpenWoListData": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetExportOpenWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.MertricsReportWoExportModel]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/ExportCompletedWoListExcel": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_ExportCompletedWoListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetExportCompletedWoListData": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetExportCompletedWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.MertricsReportWoExportModel]]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportInHouseTechniciansOpenWorkOrderAgingApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportInHouseTechniciansOpenWorkOrderAgingApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetMetricsReportInHouseTechniciansOpenWorkOrderAging": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetMetricsReportInHouseTechniciansOpenWorkOrderAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderAgingCountModel]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetSLAOpenAgingReportApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetSLAOpenAgingReportApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.SLAAgingReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/AdvancedReportApi/GetSLACompletedAgingReportApi": {
      "post": {
        "tags": [
          "AdvancedReportApi"
        ],
        "operationId": "AdvancedReportApi_GetSLACompletedAgingReportApi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.SLAAgingReportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AssetDetails": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AssetDetails",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Asset/AssetRestaurantIndex": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AssetRestaurantIndex",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Asset/List": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AllAsset": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "All asset",
        "operationId": "Asset_AllAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AssetEntity"
              }
            }
          }
        }
      }
    },
    "/Asset/AllAssetManufacturer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AllAssetManufacturer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AllAssetEquipmentType": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AllAssetEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AllPartManufacturer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AllPartManufacturer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AllPartEquipmentType": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AllPartEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/Create": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_Create",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/Delete": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/CreatePart": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_CreatePart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetPartEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/CreateAsset": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_CreateAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "asset",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/Drop": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_Drop",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AssetList": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Asset list",
        "operationId": "Asset_AssetList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AssetData": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AssetData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/UpdateAssetData": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_UpdateAssetData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetEntity"
            }
          },
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Asset/UpdatePart": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_UpdatePart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetPartEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Asset/DeletePart": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_DeletePart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Asset/AssetQuestion": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AssetQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/PartQuestion": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_PartQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AssetAnswer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_AssetAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/PartAnswer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_PartAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "partId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/SaveAssetAnswer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_SaveAssetAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answers",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/SavePartAnswer": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_SavePartAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "partId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answers",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/AllServiceCategory": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "All service category",
        "operationId": "Asset_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/Asset/GetLocation": {
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "Asset_GetLocation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Asset/GetAssmagement": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Get Assmagement",
        "operationId": "Asset_GetAssmagement",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "body",
            "description": "Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetEntity"
            }
          }
        }
      }
    },
    "/Attachment/Upload": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_Upload",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Attachment/UploadOne": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_UploadOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "attachment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AttachmentEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Attachment/Delete": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Attachment/DeleteOne": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Attachment/All": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "All",
        "operationId": "Attachment_All",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "description": "refId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "description": "refType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "isCamelCase",
            "in": "body",
            "description": "isCamelCase",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/Attachment/EmptyArray": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_EmptyArray",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonResult"
            }
          }
        }
      }
    },
    "/Attachment/GetOnSiteTime": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get On Site Time",
        "operationId": "Attachment_GetOnSiteTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "description": "refType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Attachment/GetAttachments": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Get Attachments",
        "operationId": "Attachment_GetAttachments",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "refType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "refId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRecycle",
            "in": "body",
            "description": "isRecycle",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.AttachmentModel"
            }
          }
        }
      }
    },
    "/Attachment/Create": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Create and save attachment info",
        "operationId": "Attachment_Create",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "refType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "refId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entitys",
            "in": "body",
            "description": "entitys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/Attachment/DeleteAttachment": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "operationId": "Attachment_DeleteAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "attachments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/clientapi/auth/token": {
      "get": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Authenticates user and returns token with expiry.",
        "operationId": "Authenticate_Authenticate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/AutoComplete/CoverForYouByLocation": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete cover for you by location",
        "operationId": "AutoComplete_CoverForYouByLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "location info",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CoverForLocationKeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/RecurrentWoNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete recurrent WO number",
        "operationId": "AutoComplete_RecurrentWoNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveWoNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive WO number",
        "operationId": "AutoComplete_ReactiveWoNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveWoNumberWorkOrderCreateByMe": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive WO number WO create by me",
        "operationId": "AutoComplete_ReactiveWoNumberWorkOrderCreateByMe",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/TaskReactiveWoNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete task reactive WO number",
        "operationId": "AutoComplete_TaskReactiveWoNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveWoNumberForProjectId": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive WO number for project id",
        "operationId": "AutoComplete_ReactiveWoNumberForProjectId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveReferWoNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive refer WO number",
        "operationId": "AutoComplete_ReactiveReferWoNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchCallRefNum": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete call ref number",
        "operationId": "AutoComplete_SearchCallRefNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "call ref number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SimWoNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete sim WO number",
        "operationId": "AutoComplete_SimWoNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WO number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SMSLocationNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete SMS location number",
        "operationId": "AutoComplete_SMSLocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "SMS location number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SurveyLocationNumberAndAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete survey location number address",
        "operationId": "AutoComplete_SurveyLocationNumberAndAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location name",
        "operationId": "AutoComplete_LocationName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/AutoComplete/LocationNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location number",
        "operationId": "AutoComplete_LocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationNumberWorkOrderCreateByMe": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location number workOrder create by me",
        "operationId": "AutoComplete_LocationNumberWorkOrderCreateByMe",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/GetLocationNumberWorkOrderCreateByMeData": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location number WO create by me data",
        "operationId": "AutoComplete_GetLocationNumberWorkOrderCreateByMeData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationNumberWithAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location number with address",
        "operationId": "AutoComplete_LocationNumberWithAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location name or Location number or SMS number or Address line",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AddressWithLocationNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete address with location number",
        "operationId": "AutoComplete_AddressWithLocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location address by query",
        "operationId": "AutoComplete_LocationAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1 or Address line2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationCity": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location city by query",
        "operationId": "AutoComplete_LocationCity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "City",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationCityWorkOrderCreateByMe": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location city WO create by me",
        "operationId": "AutoComplete_LocationCityWorkOrderCreateByMe",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "City",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationState": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location state",
        "operationId": "AutoComplete_LocationState",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location State",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AffiliateCode": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete affiliate code",
        "operationId": "AutoComplete_AffiliateCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Affilaite code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AffiliateName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete affiliate name",
        "operationId": "AutoComplete_AffiliateName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Affiliate name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationDistrict": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location district",
        "operationId": "AutoComplete_LocationDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location district",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationRegion": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location region",
        "operationId": "AutoComplete_LocationRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationGroup": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location group",
        "operationId": "AutoComplete_LocationGroup",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/TurnLocationDistrict": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete turn location district",
        "operationId": "AutoComplete_TurnLocationDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "District",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/TurnLocationRegion": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete turn location region",
        "operationId": "AutoComplete_TurnLocationRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/TurnLocationGroup": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete turn location group",
        "operationId": "AutoComplete_TurnLocationGroup",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ZipCode": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete zipCode",
        "operationId": "AutoComplete_ZipCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ZipCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/CallNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete call number",
        "operationId": "AutoComplete_CallNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Call number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ClientName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete client name",
        "operationId": "AutoComplete_ClientName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Client name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/Manufacturer": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete manufacturer",
        "operationId": "AutoComplete_Manufacturer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Asset manufacturer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/EquipmentType": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete equipment type",
        "operationId": "AutoComplete_EquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Asset equipment type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/PartManufacturer": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete part manufacturer",
        "operationId": "AutoComplete_PartManufacturer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Part manufacturer",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/PartEquipmentType": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete part equipment type",
        "operationId": "AutoComplete_PartEquipmentType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Part EquipmentType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ClientAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete client address",
        "operationId": "AutoComplete_ClientAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1 or Address line2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ClientFullAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete get client full address by query",
        "operationId": "AutoComplete_ClientFullAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1 or Address line2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ClientRegion": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete client region",
        "operationId": "AutoComplete_ClientRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ClientDistrict": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete client district",
        "operationId": "AutoComplete_ClientDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "District",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationComplex": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location complex address",
        "operationId": "AutoComplete_LocationComplex",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1 or Address line2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationComplexForCreateWO": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location complex for create WO",
        "operationId": "AutoComplete_LocationComplexForCreateWO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address line1 or Address line2",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CoverForLocationKeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationComplexForSearch": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location complex address",
        "operationId": "AutoComplete_LocationComplexForSearch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationComplexForSearchActive": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete active location complex address",
        "operationId": "AutoComplete_LocationComplexForSearchActive",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.APIs.ActiveLocationComplexModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ProjectName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete project name",
        "operationId": "AutoComplete_ProjectName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/PendingChangeOrdersProjectName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete pending change orders project name",
        "operationId": "AutoComplete_PendingChangeOrdersProjectName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/UserFullName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete user full name",
        "operationId": "AutoComplete_UserFullName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "User info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/UserFullIdName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete user full id name",
        "operationId": "AutoComplete_UserFullIdName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "User info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/UserPMFullName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete user PM full name",
        "operationId": "AutoComplete_UserPMFullName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "User info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/UserFullNameByClient": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete user full name by client",
        "operationId": "AutoComplete_UserFullNameByClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Client name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/CoverFullName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete cover full name",
        "operationId": "AutoComplete_CoverFullName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/QuickSearch": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete quick address search eg:Call,ReactiveWo,Recurrent,Location",
        "operationId": "AutoComplete_QuickSearch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "searchValue",
            "in": "body",
            "description": "Quick info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Infrastructure.ActionResultViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/QuickAddressSearch": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete quick address search",
        "operationId": "AutoComplete_QuickAddressSearch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "searchValue",
            "in": "body",
            "description": "Quick info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Infrastructure.ActionResultViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchHouseOwnerUserFullName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete search house owner user full name",
        "operationId": "AutoComplete_SearchHouseOwnerUserFullName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/BISMSNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete BI SMS number",
        "operationId": "AutoComplete_BISMSNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BI SMS number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SurveyLocationNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete survey location number",
        "operationId": "AutoComplete_SurveyLocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "location info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/LocationSurvayAddress": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete location survay address",
        "operationId": "AutoComplete_LocationSurvayAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/InspectionName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete inspection name",
        "operationId": "AutoComplete_InspectionName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Inspection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchHouseOwners": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete house owners",
        "operationId": "AutoComplete_SearchHouseOwners",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "House owner",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "districts",
            "in": "body",
            "description": "Districts",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerUserModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchHouseOwnersByPhone": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete search house owners by phone",
        "operationId": "AutoComplete_SearchHouseOwnersByPhone",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "districts",
            "in": "body",
            "description": "Districts",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerUserModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AllRegion": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete all region by current user.",
        "operationId": "AutoComplete_AllRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/Technician": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete technician",
        "operationId": "AutoComplete_Technician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AssetQRCode": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete asset QR code",
        "operationId": "AutoComplete_AssetQRCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.IdNameModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/AllAssetQRCode": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete all asset QR code",
        "operationId": "AutoComplete_AllAssetQRCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "QR code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.IdNameModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchCreatorName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete search creator name",
        "operationId": "AutoComplete_SearchCreatorName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Creator name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.IdNameModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveWoCalendarNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive WO calendar number",
        "operationId": "AutoComplete_ReactiveWoCalendarNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/ReactiveWoNumberByLocationId": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete reactive WO number by location id",
        "operationId": "AutoComplete_ReactiveWoNumberByLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SearchSurveyNum": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete search survey number",
        "operationId": "AutoComplete_SearchSurveyNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Survey number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "page size, default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/TurnProjectNumber": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Auto complete turn project number",
        "operationId": "AutoComplete_TurnProjectNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SmartReplyAffiliateCode": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Search affilicate code for SmartReply",
        "operationId": "AutoComplete_SmartReplyAffiliateCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/AutoComplete/SmartReplyAffiliateName": {
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "Get affiliate name for SmartReply",
        "operationId": "AutoComplete_SmartReplyAffiliateName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/Autotest/Index": {
      "post": {
        "tags": [
          "Autotest"
        ],
        "operationId": "Autotest_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Calendar/Index": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Calendar/LocationAddress": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_LocationAddress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonResult]"
            }
          }
        }
      }
    },
    "/Calendar/Region": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_Region",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonResult]"
            }
          }
        }
      }
    },
    "/Calendar/District": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_District",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonResult]"
            }
          }
        }
      }
    },
    "/Calendar/GetAfiiliateIdNameByClientId": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "operationId": "Calendar_GetAfiiliateIdNameByClientId",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CalendarManagement/Index": {
      "post": {
        "tags": [
          "CalendarManagement"
        ],
        "operationId": "CalendarManagement_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CallCenter/Index": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CallCenter/Create": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_Create",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CallCenter/List": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Call List",
        "operationId": "CallCenter_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "CallQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[System.Object]"
            }
          }
        }
      }
    },
    "/CallCenter/CallCategory": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Call Category",
        "operationId": "CallCenter_CallCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "service category Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataCallCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/CallStatus": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Call Status",
        "operationId": "CallCenter_CallStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/AllStatus": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get all Status",
        "operationId": "CallCenter_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/AllCategory": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get all Category",
        "operationId": "CallCenter_AllCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataCallCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/GetAllListDatas": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get all list datas",
        "operationId": "CallCenter_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataCallCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/CallerType": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_CallerType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/CallPriority": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get CallPriority List",
        "operationId": "CallCenter_CallPriority",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/CallScope": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get CallScopre List",
        "operationId": "CallCenter_CallScope",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/LocationOne": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Location",
        "operationId": "CallCenter_LocationOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRecommendResult"
            }
          }
        }
      }
    },
    "/CallCenter/ClientServiceCategory": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_ClientServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/ClientServiceType": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Client Service Type List by Filter current client Id service category Id",
        "operationId": "CallCenter_ClientServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "service category Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/GetOpenWorkOrderListCount": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_GetOpenWorkOrderListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/GetOpenWorkOrderList": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_GetOpenWorkOrderList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/ClientServiceCode": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Client Service Code List by Filter current client Id service type Id",
        "operationId": "CallCenter_ClientServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeFilterModel"
              }
            }
          }
        }
      }
    },
    "/CallCenter/CallSubIssue": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get Call Sub Issue List",
        "operationId": "CallCenter_CallSubIssue",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataCallSubIssueEntity"
              }
            }
          }
        }
      }
    },
    "/CallCenter/GetClientById": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_GetClientById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/CreateNewCall": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_CreateNewCall",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/Details": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CallCenter/CallInfo": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_CallInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CallCenter/Ovw": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "summary": "Get some thing union select",
        "operationId": "CallCenter_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "description": "call Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.CallCenter.OpenVisitWatcherViewModel"
            }
          }
        }
      }
    },
    "/CallCenter/AddWatch": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/CallCenter/RemoveWatch": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/CallCenter/WoEventLogs": {
      "post": {
        "tags": [
          "CallCenter"
        ],
        "operationId": "CallCenter_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Chat/Token": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_Token",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Chat/EnsureTargetUserCreated": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_EnsureTargetUserCreated",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "targetUserId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Chat/GetUserInfo": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_GetUserInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Chat/DeleteChannel": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_DeleteChannel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "channelSid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Chat/CreateSession": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_CreateSession",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Chat/CreateLiveChatMessage": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_CreateLiveChatMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sessionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "contentType",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Chat/getSession": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_getSession",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Chat/GetLiveChatMessages": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "Chat_GetLiveChatMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sessionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/CreateWO": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_CreateWO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requests",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.ReactiveWOCreationApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/CreateWoForResidentialClient": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_CreateWoForResidentialClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentialWoCreateModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.ResidentialReactiveWoCreateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/CreateProcareFridgeListWo": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "summary": "Create procare fridge list item(subtask) in Residential App. This logic comes from RSP procare.",
        "operationId": "ClientForMobileApi_CreateProcareFridgeListWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "additionalDetail",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleResult",
            "in": "body",
            "description": "It's null in the subtask creation request in RSP portal.But for the exception, we remain this parameter in case of some conditions that use this parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/BindAttachmentsToSubtask": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_BindAttachmentsToSubtask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "subtaskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listItemAttachmentRequestModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.FridgeListItemAttachmentRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/DeleteFridgeListItemAttachments": {
      "delete": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_DeleteFridgeListItemAttachments",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachmentIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/CancelWO": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_CancelWO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/GetFridgeListItemRescheduleRecommendTechnicians": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_GetFridgeListItemRescheduleRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "rescheduleRecommendRequestModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.SubtaskRescheduleRecommendRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/RescheduleProcareFridgeListItem": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_RescheduleProcareFridgeListItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "rescheduleModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.FridgeListItemRescheduleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/GetProcareProjectRescheduleRecommendTechnicians": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "operationId": "ClientForMobileApi_GetProcareProjectRescheduleRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "startTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "canScheduleInWeekend",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ClientForMobileApi/ScheduleProcare": {
      "post": {
        "tags": [
          "ClientForMobileApi"
        ],
        "summary": "Reschedule/Schedule ProCare Project (Comes from RSP Procare project reschedule)",
        "operationId": "ClientForMobileApi_ScheduleProcare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareProjectId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoScheduleRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Communication/GetMessagesQuery": {
      "post": {
        "tags": [
          "Communication"
        ],
        "summary": "Get Messages Query",
        "operationId": "Communication_GetMessagesQuery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "Message Reference Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "description": "Messages Filter Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "ref id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.MessageQueryModel"
            }
          }
        }
      }
    },
    "/CommunicationBase/IsDevTestEnvironment": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_IsDevTestEnvironment",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/CommunicationBase/SendRemoveRFIMessage": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendRemoveRFIMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "smartMenuId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                100,
                101,
                102,
                103,
                104,
                105,
                106
              ],
              "type": "integer"
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetSmartReplyRecipient": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetSmartReplyRecipient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetContactRoles": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetContactRoles",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.MessageContactGroupModel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetContactUsers": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetContactUsers",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userRefId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageUserExtensionViewModel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetAssignee": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetAssignee",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetAssigneeAndOwner": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetAssigneeAndOwner",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userRefId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.CommounicationSearchUserViewModel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetCurrentAffiliateId": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetCurrentAffiliateId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetSmartReplyMenuClickCount": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetSmartReplyMenuClickCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOReactiveSmartReplyClickLogQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetUserClientType": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetUserClientType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Int16]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetWoClientType": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetWoClientType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Int16]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetDetailMessages": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetDetailMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetMessagesData": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetMessagesData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IList[M2.Entity.MessageEntity]]"
            }
          }
        }
      }
    },
    "/CommunicationBase/GetMessages": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.CommentMessageViewmodel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetComboMessage": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetComboMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "enum": [
                  1,
                  2,
                  3
                ],
                "type": "integer"
              }
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.ComboMessageViewModel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetNoteMessages": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetNoteMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CommunicationBase/SendCommunication": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendCommunication",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessagePostViewModel"
            }
          },
          {
            "name": "needLog",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/CommunicationBase/SendCommunicationToSmartReplyRecipient": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendCommunicationToSmartReplyRecipient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessagePostViewModel"
            }
          },
          {
            "name": "needLog",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/CommunicationBase/SendCommunicationBySmart": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendCommunicationBySmart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.SmartMessagePostViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.MessageResultModel"
            }
          }
        }
      }
    },
    "/CommunicationBase/SendComment": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.CommentPostViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/CommunicationBase/Reply": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_Reply",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageReplyViewModel"
            }
          },
          {
            "name": "isReplyAll",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
            }
          }
        }
      }
    },
    "/CommunicationBase/MarkAsRead": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_MarkAsRead",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isChecked",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.MessageRecipient"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/GetPushMessages": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetPushMessages",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/CommunicationBase/GetPushMessage": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_GetPushMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
            }
          }
        }
      }
    },
    "/CommunicationBase/RemoveMessage": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_RemoveMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/CommunicationBase/CommounicationSearchUsre": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_CommounicationSearchUsre",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userRefId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.CommounicationSearchUserViewModel"
              }
            }
          }
        }
      }
    },
    "/CommunicationBase/SendReactiveWoMessages": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_SendReactiveWoMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/CommunicationBase/FormateMessage": {
      "post": {
        "tags": [
          "CommunicationBase"
        ],
        "operationId": "CommunicationBase_FormateMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "source",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.MessageEntity"
              }
            }
          },
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentRole",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
            }
          },
          {
            "name": "filterType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.IList[Moon.Web.Initializer.ViewModels.MessageWrapperViewModel]]"
            }
          }
        }
      }
    },
    "/Confirm/GetConfirm": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Get Confirm",
        "operationId": "Confirm_GetConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "Confirm Reference Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                -1
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ConfirmViewModel"
            }
          }
        }
      }
    },
    "/Confirm/GetConfirmNew": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Gets the confirm new.",
        "operationId": "Confirm_GetConfirmNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "The type.",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                -1
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ConfirmViewModel"
            }
          }
        }
      }
    },
    "/Confirm/UpdateConfirm": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Updates the confirm.",
        "operationId": "Confirm_UpdateConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "The type.",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                -1
              ],
              "type": "integer"
            }
          },
          {
            "name": "vm",
            "in": "body",
            "description": "The vm.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Confirm/CreateConfirm": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Creates the confirm.",
        "operationId": "Confirm_CreateConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "description": "The vm.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/Confirm/CreateConfirmNew": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Create Confirm New",
        "operationId": "Confirm_CreateConfirmNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/Confirm/GetConfirmLog": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Get Confirm Log",
        "operationId": "Confirm_GetConfirmLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                -1
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.ConfirmViewModel"
              }
            }
          }
        }
      }
    },
    "/Confirm/GetConfirmLogNew": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Get Confirm Log New",
        "operationId": "Confirm_GetConfirmLogNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                -1
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.ConfirmViewModel"
              }
            }
          }
        }
      }
    },
    "/Confirm/GetConfirmLogManager": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Get Confirm Log Manager",
        "operationId": "Confirm_GetConfirmLogManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "confirmLogList",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ConfirmLogEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.ConfirmViewModel"
              }
            }
          }
        }
      }
    },
    "/Confirm/AllConfirmationTypes": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "summary": "Alls the confirmation types.",
        "operationId": "Confirm_AllConfirmationTypes",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataConfirmTypeEntity"
              }
            }
          }
        }
      }
    },
    "/Confirm/Rating": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "operationId": "Confirm_Rating",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Confirm/Confirm": {
      "post": {
        "tags": [
          "Confirm"
        ],
        "operationId": "Confirm_Confirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/ConfirmDetail": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Confirm detail view",
        "operationId": "ConfirmWoByEmail_ConfirmDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/ConfirmRatingDetail": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Confirm rating detail",
        "operationId": "ConfirmWoByEmail_ConfirmRatingDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/CanConfirmRate": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Can confirm rate",
        "operationId": "ConfirmWoByEmail_CanConfirmRate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetCommentsRateReason": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get comments rate reason",
        "operationId": "ConfirmWoByEmail_GetCommentsRateReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.CommentRateReasonViewModel"
              }
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/CanConfirmRateByEmail": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Can confirm rate by email",
        "operationId": "ConfirmWoByEmail_CanConfirmRateByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ConfirmRateStatusModel"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/CompleteRate": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Complete rate",
        "operationId": "ConfirmWoByEmail_CompleteRate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rate",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "multipleSelectRatingReasonNotesModels",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Shared.Confirm.MultipleSelectRatingReasonNotesModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetMultipSelectRatingReasonList": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get multip select rating reason list",
        "operationId": "ConfirmWoByEmail_GetMultipSelectRatingReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
              }
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetJPMCServiceConfirmInfo": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get JPMC service confirm info",
        "operationId": "ConfirmWoByEmail_GetJPMCServiceConfirmInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Shared.Confirm.ServiceConfirmModel"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/CompleteRateByEmail": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Excute complete rate by email",
        "operationId": "ConfirmWoByEmail_CompleteRateByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/ExcuteCompleteRateByEmail": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Excute complete rate by email",
        "operationId": "ConfirmWoByEmail_ExcuteCompleteRateByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GoodResult": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Good result",
        "operationId": "ConfirmWoByEmail_GoodResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/RatingGoodResult": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Rating good result",
        "operationId": "ConfirmWoByEmail_RatingGoodResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/BadResult": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Bad result",
        "operationId": "ConfirmWoByEmail_BadResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/RatingBadResult": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Rating bad result",
        "operationId": "ConfirmWoByEmail_RatingBadResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetConfirmOnSiteRateReasonList": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get Confirm OnSite Rate Reason List",
        "operationId": "ConfirmWoByEmail_GetConfirmOnSiteRateReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "wo department id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "is reactive wo",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetConfirmContactCenterRateReasonList": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get Confirm Contact Center Rate Reason List",
        "operationId": "ConfirmWoByEmail_GetConfirmContactCenterRateReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "wo department id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "is reactive wo",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ConfirmWoByEmail/GetConfirmWoNotCompletedReasonList": {
      "post": {
        "tags": [
          "ConfirmWoByEmail"
        ],
        "summary": "Get Confirm WoNot Completed Reason List",
        "operationId": "ConfirmWoByEmail_GetConfirmWoNotCompletedReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/Contact/SelectLocation": {
      "post": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_SelectLocation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Contact/ChooseWO": {
      "post": {
        "tags": [
          "Contact"
        ],
        "operationId": "Contact_ChooseWO",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CoverForYou/Branches": {
      "post": {
        "tags": [
          "CoverForYou"
        ],
        "operationId": "CoverForYou_Branches",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CoverForYou/Create": {
      "post": {
        "tags": [
          "CoverForYou"
        ],
        "operationId": "CoverForYou_Create",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/CriticalEventApi/GetClientReason": {
      "post": {
        "tags": [
          "CriticalEventApi"
        ],
        "operationId": "CriticalEventApi_GetClientReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "criticalEventTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ClientReasonViewModel"
              }
            }
          }
        }
      }
    },
    "/CriticalEventApi/GetReason": {
      "post": {
        "tags": [
          "CriticalEventApi"
        ],
        "operationId": "CriticalEventApi_GetReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sysEnumTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Customization/GetThemeFile": {
      "get": {
        "tags": [
          "Customization"
        ],
        "summary": "Get theme file url based on key",
        "operationId": "Customization_GetThemeFile",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "file key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Customization/GetThemeFileStream": {
      "get": {
        "tags": [
          "Customization"
        ],
        "summary": "Get theme file stream based on key",
        "operationId": "Customization_GetThemeFileStream",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "file key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/Dashboard/Index": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get index html",
        "operationId": "Dashboard_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Dashboard/PermissionDashboard": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get permission dashboard",
        "operationId": "Dashboard_PermissionDashboard",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Dashboard/ScheduledServicesWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ScheduledServicesWoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/CompletedServicesWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_CompletedServicesWoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/GetScheduledServicesList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetScheduledServicesList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetCompletedServicesList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCompletedServicesList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportScheduledServicesByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportScheduledServicesByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportScheduledServicesBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportScheduledServicesBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportCompletedServicesByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportCompletedServicesByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportCompletedServicesBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportCompletedServicesBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllLocationMini": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllLocationMini",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ClientRegionList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current client region",
        "operationId": "Dashboard_ClientRegionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "description": "groups",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Dashboard/GetCoverForYouInfo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCoverForYouInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetMyBranchInfo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetMyBranchInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ClientGroupList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current client group",
        "operationId": "Dashboard_ClientGroupList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Dashboard/AllState": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get all state",
        "operationId": "Dashboard_AllState",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataStateAbbrEntity"
              }
            }
          }
        }
      }
    },
    "/Dashboard/ClientDistrictList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ClientDistrictList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "regions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ClosedStoreCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ClosedStoreCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ClosedStoreList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get closed store wo List",
        "operationId": "Dashboard_ClosedStoreList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.RetailStopFoodDeliveryWoModel]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportClosedStoreExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportClosedStoreExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportClosedStoreExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportClosedStoreExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWoByTrade": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWoByTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWoByTradeRecurrent": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWoByTradeRecurrent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWoByServiceCategory": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWoByServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWoByPriority": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MonthToDaySpend": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MonthToDaySpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/FinancialOverview": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_FinancialOverview",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.Client.FinancialOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ScheduledWOByTrade": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ScheduledWOByTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/CompleteWOByTrade": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_CompleteWOByTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/DateSinceLastService": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DateSinceLastService",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/UserWatchedWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_UserWatchedWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportUserWatchedWoExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportUserWatchedWoExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportUserWatchedWoExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportUserWatchedWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/UserWatchedWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get user watched wo count",
        "operationId": "Dashboard_UserWatchedWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetUserWatchedRecurrentWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetUserWatchedRecurrentWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportUserWatchedRecurrentWoExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportUserWatchedRecurrentWoExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportUserWatchedRecurrentWoExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportUserWatchedRecurrentWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetUserWatchedRecurrentWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetUserWatchedRecurrentWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/DailyServiceNteList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DailyServiceNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/DailyServicePriceList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DailyServicePriceList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/QuotesWaitingApprovalPie": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_QuotesWaitingApprovalPie",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/QuotesWaitingApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get quotes waiting approval list",
        "operationId": "Dashboard_QuotesWaitingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "description": "week",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalViewModel]"
            }
          }
        }
      }
    },
    "/Dashboard/GetQuoteWaitingApprovalMaxProposalAmount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get quote waiting approval max proposal amount",
        "operationId": "Dashboard_GetQuoteWaitingApprovalMaxProposalAmount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        }
      }
    },
    "/Dashboard/QuotesWaitingApprovalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get quotes waiting approval count",
        "operationId": "Dashboard_QuotesWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/QuotesWaitingApprovalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_QuotesWaitingApprovalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportQuotesWatiingApprovalExcelByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportQuotesWatiingApprovalExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportQuotesWatiingApprovalExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportQuotesWatiingApprovalExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ClientCallCountGroupByCallStatus": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ClientCallCountGroupByCallStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InitCalendarWorkOrders": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InitCalendarWorkOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SimRecurringCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get sim recurring wo count",
        "operationId": "Dashboard_SimRecurringCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/SimRecurringList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get sim recurring wo list",
        "operationId": "Dashboard_SimRecurringList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.SimWoListViewModel]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSimRecurringExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSimRecurringExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSimRecurringExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSimRecurringExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SimReactiveCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get sim reactive wo count",
        "operationId": "Dashboard_SimReactiveCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/SimReactiveList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SimReactiveList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSimReactiveExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSimReactiveExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSimReactiveExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSimReactiveExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SendInviteToAffiliateEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SendInviteToAffiliateEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "eamilAddress",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Dashboard/GetReactiveWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get reactive wo count",
        "operationId": "Dashboard_GetReactiveWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetRecurrentWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get recurrent wo count",
        "operationId": "Dashboard_GetRecurrentWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetCriticalEventWidgetCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get critical event widget count",
        "operationId": "Dashboard_GetCriticalEventWidgetCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetCriticalEventWidgetList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCriticalEventWidgetList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetCriticalEventWidgetExport": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCriticalEventWidgetExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetCriticalEventWidgetExportSendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCriticalEventWidgetExportSendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPurchaseOrderExceptionWorkOrdersCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPurchaseOrderExceptionWorkOrdersCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPurchaseOrderExceptionWorkOrdersList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPurchaseOrderExceptionWorkOrdersList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetAtRiskCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetAtRiskCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetAtRiskABModule": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get atRisk abModule",
        "operationId": "Dashboard_GetAtRiskABModule",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Dashboard/GetAtRiskList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetAtRiskList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/List": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPurchaseOrderExceptionWorkOrdersExport": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPurchaseOrderExceptionWorkOrdersExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPurchaseOrderExceptionWorkOrdersExportSendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPurchaseOrderExceptionWorkOrdersExportSendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetConfig": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get config",
        "operationId": "Dashboard_GetConfig",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "body",
            "description": "roleId Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RoleCommunicationConfigEntity"
            }
          }
        }
      }
    },
    "/Dashboard/GetConfigByUser": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetConfigByUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PurchaseOrderResumit": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PurchaseOrderResumit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/CurrentMonthMissedDeferredLogRefusalWOsCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current month miissed deferred log refusal wos count",
        "operationId": "Dashboard_CurrentMonthMissedDeferredLogRefusalWOsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[M2.Entity.DataKeyValueEntity,System.Int32]"
              }
            }
          }
        }
      }
    },
    "/Dashboard/CurrentMonthMissedDeferredLogRefusalWOsList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_CurrentMonthMissedDeferredLogRefusalWOsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportCurrentMonthMissedDeferredLogRefusalWOsList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportCurrentMonthMissedDeferredLogRefusalWOsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/EstimatedCurrentMonthlySpendingCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_EstimatedCurrentMonthlySpendingCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/EstimatedCurrentMonthlySpendingList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_EstimatedCurrentMonthlySpendingList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportEstimatedCurrentMonthlySpendingList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportEstimatedCurrentMonthlySpendingList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetUserApproveLimit": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetUserApproveLimit",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetGroupListForLazySelect": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetGroupListForLazySelect",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OnSiteProposalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get on site proposal count",
        "operationId": "Dashboard_OnSiteProposalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/OnSiteProposalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OnSiteProposalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OnSiteProposalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OnSiteProposalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OnSiteProposalExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OnSiteProposalExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HighPriorityLocationWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HighPriorityLocationWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HighPriorityLocationWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HighPriorityLocationWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportHighPriorityLocationWoExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportHighPriorityLocationWoExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportHighPriorityLocationWoExcelSendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportHighPriorityLocationWoExcelSendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InspectionCodeIssueCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InspectionCodeIssueCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InspectionCodeIssueList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InspectionCodeIssueList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportInspectionCodeIssueExcelByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportInspectionCodeIssueExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportInspectionCodeIssueExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportInspectionCodeIssueExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InspectionCodeIssueExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InspectionCodeIssueExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPCDACount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPCDACount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPCDAList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get pcda list",
        "operationId": "Dashboard_GetPCDAList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPCDAPendingModel]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPastPCDAList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPastPCDAList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPCDAExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPCDAExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPCDAExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPCDAExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPastPCDAExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPastPCDAExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetAllWOType": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current client wo type",
        "operationId": "Dashboard_GetAllWOType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
              }
            }
          }
        }
      }
    },
    "/Dashboard/WorkOrdersCreatedByMeExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_WorkOrdersCreatedByMeExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WorkOrdersCreatedByMeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/WorkOrdersCreatedByMeExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_WorkOrdersCreatedByMeExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WorkOrdersCreatedByMeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetReactiveWoStatusEntityListByCustomerOpenWoStatus": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get reactive wo status list by customer open wo status",
        "operationId": "Dashboard_GetReactiveWoStatusEntityListByCustomerOpenWoStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
              }
            }
          }
        }
      }
    },
    "/Dashboard/GetProCareToBeScheduleList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetProCareToBeScheduleList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/IndexList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_IndexList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/ListContext": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ListContext",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/AllGroup": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllGroup",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllRegion": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllDistrict": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "regions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllServiceCategory": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/RequestForInformationList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_RequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/RequestForInformationCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_RequestForInformationCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/RequestForInformationExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_RequestForInformationExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastRequestForInformationList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastRequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastRequestForInformationCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastRequestForInformationCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastRequestForInformationExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastRequestForInformationExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportRfiExcelByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportRfiExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportRfiExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportRfiExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWorkOrderbyTrade": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWorkOrderbyTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MothtoDaySpend": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MothtoDaySpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetMonthbyMonthtotalspending": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetMonthbyMonthtotalspending",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.TotalSpendingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetCurrentMonthlySpendingbyServiceCode": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCurrentMonthlySpendingbyServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.TotalSpendingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SpendingWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SpendingWoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWorkOrderWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWorkOrderWoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/GetSpendingList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetSpendingList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.TotalSpendingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetOpenWorkOrderListTrade": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetOpenWorkOrderListTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSpendingByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSpendingByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TotalSpendingExportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportSpendingBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportSpendingBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TotalSpendingExportQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportOpenWorkOrderByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportOpenWorkOrderByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportOpenWorkOrderBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportOpenWorkOrderBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllAMEs": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllAMEs",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllDivisions": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllDivisions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/CallsBySubIssues": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get calls by subIssues",
        "operationId": "Dashboard_CallsBySubIssues",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "RecurrentWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoEntity"
            }
          }
        }
      }
    },
    "/Dashboard/StoreCallSummary": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_StoreCallSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/CallCenterAging": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_CallCenterAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/IndexTable": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get index table html",
        "operationId": "Dashboard_IndexTable",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/Calendar": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_Calendar",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/InitWorkOrders": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InitWorkOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/EscalatedWo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get escalated wo",
        "operationId": "Dashboard_EscalatedWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.StoreManager.Models.EscalatedWoModel"
              }
            }
          }
        }
      }
    },
    "/Dashboard/GetEscalatedWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get escalated wo count",
        "operationId": "Dashboard_GetEscalatedWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetEscalatedWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get escalated wo list",
        "operationId": "Dashboard_GetEscalatedWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportEscWoExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportEscWoExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportEscWoExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportEscWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get all open wo list",
        "operationId": "Dashboard_OpenWo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.StoreManager.Models.OpenWoModel"
              }
            }
          }
        }
      }
    },
    "/Dashboard/HelpInformation": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HelpInformation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetReactiveStatusList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetReactiveStatusList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetRecurrentStatusList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetRecurrentStatusList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HelpInfo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HelpInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetForecastTimelineData": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetForecastTimelineData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/PhotoGallerys": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PhotoGallerys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetPhotoListByWoId": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetPhotoListByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetIsBypassManagerToDoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get is by pass manager todo list",
        "operationId": "Dashboard_GetIsBypassManagerToDoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Dashboard/IsClientAllowCreateCall": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get is client allow create call",
        "operationId": "Dashboard_IsClientAllowCreateCall",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Dashboard/QuoteWaitingApprovalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get quoteWaitingApproval count",
        "operationId": "Dashboard_QuoteWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/IssuesWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get issuesWo count",
        "operationId": "Dashboard_IssuesWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/EscWoCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get escalateWo count",
        "operationId": "Dashboard_EscWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Dashboard/GetUserInfo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get user info",
        "operationId": "Dashboard_GetUserInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.SOM.Models.UserInfoModel"
            }
          }
        }
      }
    },
    "/Dashboard/GetAddress": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetAddress",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetReactiveMessages": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get reactive messages",
        "operationId": "Dashboard_GetReactiveMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "senderRoleType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[System.Object]"
            }
          }
        }
      }
    },
    "/Dashboard/GetRecurrentMessages": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetRecurrentMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetAncestorMessages": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetAncestorMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageParentId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetIsAcceptStandardNTE": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetIsAcceptStandardNTE",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllPropertyManagerForRW": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllPropertyManagerForRW",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllWoType": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllWoType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllServiceType": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllServiceCode": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllCustomerWoStatusIds": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllCustomerWoStatusIds",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllCommunity": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllCommunity",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllOrigin": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllOrigin",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllServiceRequestCategory": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllServiceRequestCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/QuoteWaitingApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_QuoteWaitingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/QuoteWaitingApprovalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_QuoteWaitingApprovalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HighRiskPropertyList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HighRiskPropertyList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HighRiskPropertyCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HighRiskPropertyCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/HighRiskPropertyExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_HighRiskPropertyExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/IssuesWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_IssuesWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportIssuesWoExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportIssuesWoExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportIssuesWoExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportIssuesWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/EscWoList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_EscWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MissedAppointmentsList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MissedAppointmentsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastMissedAppointmentsList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastMissedAppointmentsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOReactiveMissedAppointmentQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastMissedAppointmentsExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastMissedAppointmentsExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOReactiveMissedAppointmentQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MissedAppointmentsCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MissedAppointmentsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MissedAppointmentsExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MissedAppointmentsExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingDispatchApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingDispatchApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingDispatchApprovalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingDispatchApprovalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingDispatchApprovalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingDispatchApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastPDADecisionsList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastPDADecisionsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOReactiveReasonHistoryQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PastPDADecisionsExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PastPDADecisionsExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOReactiveReasonHistoryQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/TriconPendingDispatchList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_TriconPendingDispatchList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/TriconPendingDispatchListExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_TriconPendingDispatchListExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.TriconPendingDispatchModel]]"
            }
          }
        }
      }
    },
    "/Dashboard/TriconPendingDispatchExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_TriconPendingDispatchExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/TriconPendingDispatchCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_TriconPendingDispatchCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/OpenWoAging": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_OpenWoAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/DailyServiceCountList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DailyServiceCountList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SetPendingDispatchDecline": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SetPendingDispatchDecline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subReason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SetPendingDispatchApprove": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SetPendingDispatchApprove",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/NTEPackage": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_NTEPackage",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/GetServiceCodeNteList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetServiceCodeNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SetNTEPackageAndReceiveOption": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SetNTEPackageAndReceiveOption",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isAccept",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isReceiveEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isReceiveSMSAlert",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Dashboard/GetTriconDispatchAffiliateCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetTriconDispatchAffiliateCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingConfirmationList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingConfirmationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingConfirmationCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingConfirmationCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingConfirmationExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingConfirmationExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingConfirmationExcelByEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingConfirmationExcelByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/UpdateAcceptOrDeclineStandardNTE": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_UpdateAcceptOrDeclineStandardNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceCategoryUserMappingQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Dashboard/AllGroupWithExcludeList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllGroupWithExcludeList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllTechnician": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllTechnicianWithExcludeList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllTechnicianWithExcludeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllRegionWithExcludeList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllRegionWithExcludeList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllDistrictWithExcludeListWithoutDistrictFilter": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllDistrictWithExcludeListWithoutDistrictFilter",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllDistrictWithoutDistrictFilter": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllDistrictWithoutDistrictFilter",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllCountry": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllCountry",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllStoreArea": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_AllStoreArea",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/AllAreasConcatId": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get areas concatId",
        "operationId": "Dashboard_AllAreasConcatId",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
              }
            }
          }
        }
      }
    },
    "/Dashboard/FoodDeliveryCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_FoodDeliveryCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/FoodDeliveryList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_FoodDeliveryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportFoodDeliveryExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportFoodDeliveryExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportFoodDeliveryExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportFoodDeliveryExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportShwaExcelByServer": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportShwaExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportShwaExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportShwaExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SelfHelpWaitingApprovalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SelfHelpWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SelfHelpWaitingApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SelfHelpWaitingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SelfHelpWaitingApprovalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SelfHelpWaitingApprovalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingDisputeWOcount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingDisputeWOcount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InvoicePendingApprovalCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InvoicePendingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/PendingDisputeWOlist": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_PendingDisputeWOlist",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetGOPendingInvoiceApprovalcount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetGOPendingInvoiceApprovalcount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetGOPendingInvoiceApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetGOPendingInvoiceApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/InvoicePendingApprovalList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_InvoicePendingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportInvoicePendingApprovalExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportInvoicePendingApprovalExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportInvoicePendingApprovalExcelSendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportInvoicePendingApprovalExcelSendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MyActionCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MyActionCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MyActionList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MyActionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportMyActionExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportMyActionExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportMyActionExcelBySendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportMyActionExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MyManagerActionCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MyManagerActionCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/MyManagerActionList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_MyManagerActionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportMyManagerActionExcel": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportMyManagerActionExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/ExportMyManagerActionExcelSendEmail": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_ExportMyManagerActionExcelSendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetNTEPackageAndReceiveOption": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetNTEPackageAndReceiveOption",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/SetUserReceiveOption": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_SetUserReceiveOption",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isReceiveEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isReceiveSMSAlert",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Dashboard/DashBoardMaintenanceExpense": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_DashBoardMaintenanceExpense",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetCurrentUserInfo": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCurrentUserInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/Setting": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_Setting",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Dashboard/GetCurrentUser": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetCurrentUser",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/Upload": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_Upload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/UploadUser": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_UploadUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "logo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetDashboardDataCount": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetDashboardDataCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Dashboard/GetHouseOwnerNteOptDateList": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "Dashboard_GetHouseOwnerNteOptDateList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetAverageConfirmationRatings": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetAverageConfirmationRatings",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.AverageConfirmationRatingsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetCompletedServiceList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetCompletedServiceList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.CompletedServicesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetEstimatedCurrentMonthlySpendListForStandardInterior": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetEstimatedCurrentMonthlySpendListForStandardInterior",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.EstimatedCurrentMonthlySpendQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetFinancialOverviewMTD": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetFinancialOverviewMTD",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.FinancialOverviewMTDQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.FinancialOverviewMTDResultModel"
            }
          }
        }
      }
    },
    "/DashboardApi/GetTotalOpenReactiveWorkOrdersCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetTotalOpenReactiveWorkOrdersCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.TotalOpenReactiveWorkOrdersQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetTotalOpenRecurringWorkOrdersCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetTotalOpenRecurringWorkOrdersCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.TotalOpenRecurringWorkOrdersQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOpenWorkOrdersAging": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOpenWorkOrdersAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersAgingResultModel"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOpenWorkOrdersByStatus": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOpenWorkOrdersByStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersByStatusQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersByStatusResultModel"
              }
            }
          }
        }
      }
    },
    "/DashboardApi/GetPerformanceOverviewMTDForCommercial": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPerformanceOverviewMTDForCommercial",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewResultModel"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPerformanceOverviewMTDForStandardInterior": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPerformanceOverviewMTDForStandardInterior",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPerformanceOverviewMTDForResidential": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPerformanceOverviewMTDForResidential",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewResidentialResultModel"
            }
          }
        }
      }
    },
    "/DashboardApi/GetScheduledServiceList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetScheduledServiceList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ScheduledServicesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOpenWOsByStatusByRegionCountList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOpenWOsByStatusByRegionCountList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWOsByStatusByRegionCountQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWOsByStatusByRegionCountResultModel"
              }
            }
          }
        }
      }
    },
    "/DashboardApi/GetCriticalEventCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetCriticalEventCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.CriticalEventQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetCriticalEventList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetCriticalEventList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.CriticalEventQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/Test": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_Test",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetEscalationsCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetEscalationsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.EscalationsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetEscalationsList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetEscalationsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.EscalationsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOnSiteProposalCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOnSiteProposalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OnSiteProposalQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/OpenWoAging": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_OpenWoAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiController.OpenWoAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetQuotesWaitingApprovalList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetQuotesWaitingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.QuotesWaitingApprovalCountQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetQuotesWaitingApprovalCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetQuotesWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.QuotesWaitingApprovalCountQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetRFICount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetRFICount",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/UserWatchedWoList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_UserWatchedWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.UserWatchedWoListQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetUserWatchedWoListViewModel": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetUserWatchedWoListViewModel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "watchList",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.GetUserWatchedWoListResultModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.WebService.Client.DashboardApiController.UserWatchedListViewModel]]"
            }
          }
        }
      }
    },
    "/DashboardApi/UserWatchedWoCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_UserWatchedWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.UserWatchedWoListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPastScheduleCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPastScheduleCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PastScheduleQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPastScheduleList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPastScheduleList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PastScheduleQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.DashboardApiRepo.PastScheduleResultModel]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetProCareAtRiskCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetProCareAtRiskCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ProCareAtRiskCountQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetProCareToBeScheduleCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetProCareToBeScheduleCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ProCareToBeScheduleCountQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetReturnTripNeededWoCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetReturnTripNeededWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetReturnTripNeededWoList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetReturnTripNeededWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededResultModel]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOpenWOList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOpenWOList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetOpenWOCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetOpenWOCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.OpenWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPendingDispatchApprovalList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPendingDispatchApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalResultModel]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetPendingDispatchApprovalCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetPendingDispatchApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardApi/GetRequestAffiliateDispatchCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetRequestAffiliateDispatchCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.RequestAffiliateDispatchQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetShowRADWidgetMock": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetShowRADWidgetMock",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.RequestAffiliateDispatchQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonResult"
            }
          }
        }
      }
    },
    "/DashboardApi/GetWorkOrdersCreatedByMeList": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetWorkOrdersCreatedByMeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.WorkOrdersCreatedByMeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[Moon.WebService.Client.WorkOrdersCreatedByMeViewModel]"
            }
          }
        }
      }
    },
    "/DashboardApi/GetWorkOrdersCreatedByMeCount": {
      "post": {
        "tags": [
          "DashboardApi"
        ],
        "operationId": "DashboardApi_GetWorkOrdersCreatedByMeCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.WorkOrdersCreatedByMeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardCharts/OpenWoByTrade": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get open work orders by trade based on query model",
        "operationId": "DashboardCharts_OpenWoByTrade",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.Report.OpenWoCountModel"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/OpenWoByTradeRecurrent": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get recurrent open work orders by trade based on query model",
        "operationId": "DashboardCharts_OpenWoByTradeRecurrent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.Report.OpenWoCountModel"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/OpenWorkOrdersbyTradeInterior": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_OpenWorkOrdersbyTradeInterior",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardCharts/OpenWoByPriority": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get open work orders by priority based on query model",
        "operationId": "DashboardCharts_OpenWoByPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[M2.Entity.DataKeyValueEntity,System.Int32]"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/MonthToDaySpendInterior": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_MonthToDaySpendInterior",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardCharts/MonthToDaySpend": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get daily service nte list based on query model",
        "operationId": "DashboardCharts_MonthToDaySpend",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.MonthToDaySpendViewModel"
            }
          }
        }
      }
    },
    "/DashboardCharts/DailyServiceNteList": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get daily service nte list based on query model",
        "operationId": "DashboardCharts_DailyServiceNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DailyServiceSpendModel"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/InitCalendarWorkOrders": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get init calendar work orders based on query model",
        "operationId": "DashboardCharts_InitCalendarWorkOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.CalendarViewModel"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/GetMonthbyMonthtotalspending": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_GetMonthbyMonthtotalspending",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.TotalSpendingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardCharts/GetCurrentMonthlySpendingbyServiceCode": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_GetCurrentMonthlySpendingbyServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.TotalSpendingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/DashboardCharts/EstimatedCurrentMonthlySpendingCount": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "summary": "Get estimated current monthly spending count based on query model",
        "operationId": "DashboardCharts_EstimatedCurrentMonthlySpendingCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[M2.Entity.DataKeyValueEntity,System.Decimal]"
              }
            }
          }
        }
      }
    },
    "/DashboardCharts/CallsBySubIssues": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_CallsBySubIssues",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardCharts/StoreCallSummary": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_StoreCallSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardCharts/CallCenterAging": {
      "post": {
        "tags": [
          "DashboardCharts"
        ],
        "operationId": "DashboardCharts_CallCenterAging",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardFilter/AllServiceCategory": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All Service Category",
        "operationId": "DashboardFilter_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllGroup": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All Group",
        "operationId": "DashboardFilter_AllGroup",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllRegion": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All Region",
        "operationId": "DashboardFilter_AllRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "description": "group lish",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllDistrict": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All District",
        "operationId": "DashboardFilter_AllDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "groups",
            "in": "body",
            "description": "group lish",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "regions",
            "in": "body",
            "description": "region list",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllState": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All State",
        "operationId": "DashboardFilter_AllState",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataStateAbbrEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllClassification": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get all areas Concat id",
        "operationId": "DashboardFilter_AllClassification",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataClassificationEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/LocationNumber": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get Location Number List",
        "operationId": "DashboardFilter_LocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationIds",
            "in": "body",
            "description": "location Id List",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "pageSize, Default 5",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationComplexModel"
            }
          }
        }
      }
    },
    "/DashboardFilter/AllAreasConcatId": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get all areas Concat id",
        "operationId": "DashboardFilter_AllAreasConcatId",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllResponsibleEntity": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All Responsible Entity",
        "operationId": "DashboardFilter_AllResponsibleEntity",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllWoType": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All WoType",
        "operationId": "DashboardFilter_AllWoType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllCommunity": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get all community",
        "operationId": "DashboardFilter_AllCommunity",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllCompany": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All Company",
        "operationId": "DashboardFilter_AllCompany",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllServiceRequestCategory": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "summary": "Get All ServiceRequest Category",
        "operationId": "DashboardFilter_AllServiceRequestCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Infrastructure.IdNameQueryResult"
              }
            }
          }
        }
      }
    },
    "/DashboardFilter/AllProjectProcareVisitType": {
      "post": {
        "tags": [
          "DashboardFilter"
        ],
        "operationId": "DashboardFilter_AllProjectProcareVisitType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPcdaCount": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo client signet pcda count",
        "operationId": "DashboardPcda_GetSignetPcdaCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPcdaList": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "operationId": "DashboardPcda_GetSignetPcdaList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPastPcdaList": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "operationId": "DashboardPcda_GetSignetPastPcdaList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPcdaExcel": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "operationId": "DashboardPcda_GetSignetPcdaExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPastPcdaExcel": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "operationId": "DashboardPcda_GetSignetPastPcdaExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetSignetPcdaExcelBySendEmail": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "operationId": "DashboardPcda_GetSignetPcdaExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPcdaCurrentlyPendingList": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo pcda currently pending list",
        "operationId": "DashboardPcda_GetPcdaCurrentlyPendingList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPcdaCurrentlyPendingModel]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPastPcdaDecisionsList": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo past  pcda decisions list",
        "operationId": "DashboardPcda_GetPastPcdaDecisionsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPcdaPastPcdaDecisionsModel]"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPcdaCurrentlyPendingExcel": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo currently pending pcda excel",
        "operationId": "DashboardPcda_GetPcdaCurrentlyPendingExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPastPcdaDecisionsExcel": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo past  pcda decisions excel",
        "operationId": "DashboardPcda_GetPastPcdaDecisionsExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPcdaCurrentlyPendingExcelBySendEmail": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get reactive wo currently pending pcda excel by sendEmail",
        "operationId": "DashboardPcda_GetPcdaCurrentlyPendingExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "exportEmail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPcdaCurrentlyPendingCount": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get the client of the logged-in user'pcda currently pending count",
        "operationId": "DashboardPcda_GetPcdaCurrentlyPendingCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardPcda/GetPcdaPermissions": {
      "post": {
        "tags": [
          "DashboardPcda"
        ],
        "summary": "Get PCDA permission.",
        "operationId": "DashboardPcda_GetPcdaPermissions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.WorkOrderAutomation.PcdaPermissionModel"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetUnreadMessagesCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get unread message count from reactive wo",
        "operationId": "DashboardWidgets_GetUnreadMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "sender Role Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "body",
            "description": "is Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCcToMe",
            "in": "body",
            "description": "is CcToMe",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetRequestforInformationCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get request for information count",
        "operationId": "DashboardWidgets_GetRequestforInformationCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetSimWoCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get sim wo count",
        "operationId": "DashboardWidgets_GetSimWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetEscalationsWoCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get escalate wo count",
        "operationId": "DashboardWidgets_GetEscalationsWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetInspectionCodeIssuesCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get inspection code issues wo count",
        "operationId": "DashboardWidgets_GetInspectionCodeIssuesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetHighPriorityWorkOrdersCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get high priority wo Count",
        "operationId": "DashboardWidgets_GetHighPriorityWorkOrdersCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetQuotesWaitingApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get quote waiting approval wo count",
        "operationId": "DashboardWidgets_GetQuotesWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetOnSiteProposalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get onsite proposal wo count",
        "operationId": "DashboardWidgets_GetOnSiteProposalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetPendingInvoiceApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "operationId": "DashboardWidgets_GetPendingInvoiceApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetGOPendingInvoiceApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "operationId": "DashboardWidgets_GetGOPendingInvoiceApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetUserWatchListCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get user watched wo count",
        "operationId": "DashboardWidgets_GetUserWatchListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetCriticalEventCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get reactive wo critical event count",
        "operationId": "DashboardWidgets_GetCriticalEventCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetClosedStoreCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get closed store reactive wo count",
        "operationId": "DashboardWidgets_GetClosedStoreCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetStoppedFoodDeliveryStoresCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get stop food delivery wo count",
        "operationId": "DashboardWidgets_GetStoppedFoodDeliveryStoresCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetSelfHelpWaitingApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get self help waiting approval wo count",
        "operationId": "DashboardWidgets_GetSelfHelpWaitingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetWORequiringMyReceivedActionCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get wo requiring my received action count",
        "operationId": "DashboardWidgets_GetWORequiringMyReceivedActionCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetWORequiringMyAssignedActionCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get wo requiring my assigned action count",
        "operationId": "DashboardWidgets_GetWORequiringMyAssignedActionCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetPOExceptionWOsCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get purchase order exception wo count",
        "operationId": "DashboardWidgets_GetPOExceptionWOsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetHabitabilityResidentIssuesCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get habitability resident issues wo count",
        "operationId": "DashboardWidgets_GetHabitabilityResidentIssuesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetMissedAppointmentsCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get missed appointments wo count",
        "operationId": "DashboardWidgets_GetMissedAppointmentsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetHighRiskWorkOrdersCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get high risk wo count",
        "operationId": "DashboardWidgets_GetHighRiskWorkOrdersCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetLandlordInvoicePendingApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get invoice pending approval wo count",
        "operationId": "DashboardWidgets_GetLandlordInvoicePendingApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetPendingClientDispatchApprovalCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get pending client dispatch approval wo count",
        "operationId": "DashboardWidgets_GetPendingClientDispatchApprovalCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetOpenWOCount": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get open wo count",
        "operationId": "DashboardWidgets_GetOpenWOCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DashboardWidgets/GetOpenWOList": {
      "post": {
        "tags": [
          "DashboardWidgets"
        ],
        "summary": "Get open wo list",
        "operationId": "DashboardWidgets_GetOpenWOList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.OpenWOListViewModel]"
            }
          }
        }
      }
    },
    "/DataSysEnumApi/GetSysEnumList": {
      "post": {
        "tags": [
          "DataSysEnumApi"
        ],
        "operationId": "DataSysEnumApi_GetSysEnumList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.DataSysEnumQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/DataSysEnumApi/GetStoreManagerSysEnumList": {
      "post": {
        "tags": [
          "DataSysEnumApi"
        ],
        "operationId": "DataSysEnumApi_GetStoreManagerSysEnumList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/Index": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Detail/GetWoDetail": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetRecurrentWoDetail": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetRecurrentWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientProposal": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientProposalItem": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientProposalItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientProposalAttachment": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientProposalAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientInvoice": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientInvoiceItem": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/GetClientInvoiceAttachment": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_GetClientInvoiceAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Detail/RejectProposal": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_RejectProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ProposalEntity"
              }
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "declineNotes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Detail/ApproveClientProposal": {
      "post": {
        "tags": [
          "Detail"
        ],
        "operationId": "Detail_ApproveClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Diagnostics/RefreshCdn": {
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "operationId": "Diagnostics_RefreshCdn",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isPreview",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/EmergencyMessage/GetEmergencyMessage": {
      "get": {
        "tags": [
          "EmergencyMessage"
        ],
        "summary": "Get Emergency Message Banner for current user @Client Portal",
        "operationId": "EmergencyMessage_GetEmergencyMessage",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Employee/Index": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee index view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee index view</p>",
        "operationId": "Employee_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Employee/GetServiceRegions": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Gets the service regions.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee index view</p>",
        "operationId": "Employee_GetServiceRegions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.IdName"
              }
            }
          }
        }
      }
    },
    "/Employee/List": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee list",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee index view</p>",
        "operationId": "Employee_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.AffiliateEmployeeEntity]"
            }
          }
        }
      }
    },
    "/Employee/EmployeeRoles": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Employees the roles.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee index view</p>",
        "operationId": "Employee_EmployeeRoles",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.RoleEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/EmployeeDetial": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Employees the detial.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Detial</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee detial</p>",
        "operationId": "Employee_EmployeeDetial",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
            }
          }
        }
      }
    },
    "/Employee/CheckEmployee": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Checks the employee.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Create Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee id</p>",
        "operationId": "Employee_CheckEmployee",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "employeeId",
            "in": "body",
            "description": "The employee identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Employee/Create": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Creates the specified model.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Create Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employee info</p>",
        "operationId": "Employee_Create",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
            }
          }
        }
      }
    },
    "/Employee/Update": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Updates the specified identifier.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Edit employee all info</p>",
        "operationId": "Employee_Update",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Employee/EmployeeDelete": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Employees the delete.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Delete Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employeeId</p>",
        "operationId": "Employee_EmployeeDelete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "The identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Employee/CreateAccount": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Creates the account.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Create Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Employee user info</p>",
        "operationId": "Employee_CreateAccount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserEntity"
            }
          },
          {
            "name": "employeeId",
            "in": "body",
            "description": "The employee identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isNeededExcutive",
            "in": "body",
            "description": "if set to true [is needed excutive].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Employee/AllServiceCategory": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all service category",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>affiliateId</p>",
        "operationId": "Employee_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/AllCertification": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Alls the certification.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get all certification</p>",
        "operationId": "Employee_AllCertification",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/AllSkillLevel": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Alls the skill level.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get all skill level</p>",
        "operationId": "Employee_AllSkillLevel",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/UserServiceCategory": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "User service category",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_UserServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeSkillEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/TechnicianLaborRateDetial": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Technicians the labor rate detial.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_TechnicianLaborRateDetial",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeSkillEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/CreateOrUpdateLabor": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create labor or update labor",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employeeId</p>",
        "operationId": "Employee_CreateOrUpdateLabor",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "employeeId",
            "in": "body",
            "description": "employee Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "body",
            "description": "TechnicianLaborRate entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianLaborRateEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianLaborRateEntity"
            }
          }
        }
      }
    },
    "/Employee/GetLaborRate": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Gets the labor rate.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>technicianId</p>",
        "operationId": "Employee_GetLaborRate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "The technician identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianLaborRateEntity"
            }
          }
        }
      }
    },
    "/Employee/SaveUserServiceCategory": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Saves the user service category.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId, employeeId, affiliateId and all skill</p>",
        "operationId": "Employee_SaveUserServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "body",
            "description": "All.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeSkillEntity"
              }
            }
          },
          {
            "name": "employeeId",
            "in": "body",
            "description": "The employee identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.HttpStatusCodeResult"
            }
          }
        }
      }
    },
    "/Employee/UserCertification": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Users the certification.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_UserCertification",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeCertificateEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/SaveUserCertification": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Saves the user certification.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId and certificate list</p>",
        "operationId": "Employee_SaveUserCertification",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "body",
            "description": "All.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeCertificateEntity"
              }
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.HttpStatusCodeResult"
            }
          }
        }
      }
    },
    "/Employee/TrainingRequested": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Training requested",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_TrainingRequested",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.EmployeeTrainingRequestEntity]"
            }
          }
        }
      }
    },
    "/Employee/SaveTrainingRequested": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Save training requested",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId,affiliateId and content</p>",
        "operationId": "Employee_SaveTrainingRequested",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "body",
            "description": "content",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.HttpStatusCodeResult"
            }
          }
        }
      }
    },
    "/Employee/IsInHouse": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Determines whether [is in house] [the specified affiliate identifier].",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Edit employee all info</p>",
        "operationId": "Employee_IsInHouse",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Employee/AreaGroups": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Areas the groups.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Area groups</p>",
        "operationId": "Employee_AreaGroups",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Employee/GetCorrespondingGroupListForTechnician": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Get a list of relevant groups for technician",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>affiliateId</p>",
        "operationId": "Employee_GetCorrespondingGroupListForTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Employee/UserServiceAreaWorkingDays": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "User service area workingdays",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_UserServiceAreaWorkingDays",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.IdName"
            }
          }
        }
      }
    },
    "/Employee/UserServiceArea": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Users the service area.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_UserServiceArea",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeServiceAreaEntity"
              }
            }
          }
        }
      }
    },
    "/Employee/SaveUserServiceArea": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Saves the user service area.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>userId and affiliateId</p>",
        "operationId": "Employee_SaveUserServiceArea",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "body",
            "description": "All.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EmployeeServiceAreaEntity"
              }
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "The affiliate identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.HttpStatusCodeResult"
            }
          }
        }
      }
    },
    "/Employee/GetEmplyoeeEventLogs": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Gets the emplyoee event logs.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; EVENT LOG</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>employeeId and pager</p>",
        "operationId": "Employee_GetEmplyoeeEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "description": "The reference identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pager",
            "in": "body",
            "description": "The pager.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.Pager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.EventLogEntity]"
            }
          }
        }
      }
    },
    "/Employee/CheckEmployeeNum": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Checks the employee number.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>EmployeeNum and affiliateId</p>",
        "operationId": "Employee_CheckEmployeeNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "EmployeeNum",
            "in": "body",
            "description": "The employee number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "employeeid",
            "in": "body",
            "description": "The employeeid.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Employee/CheckEmail": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Checks the email.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>email</p>",
        "operationId": "Employee_CheckEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Employee/CheckUserName": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Checks the name of the user.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Employee Management -&gt; Edit Employee</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>username</p>",
        "operationId": "Employee_CheckUserName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": "The username.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/EventLogMask/GetConfig": {
      "get": {
        "tags": [
          "EventLogMask"
        ],
        "summary": "Get config",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; EventLog</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Gets the current Client configuration </p>",
        "operationId": "EventLogMask_GetConfig",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.EventLogMaskConfigResponse"
            }
          }
        }
      }
    },
    "/ExportRecordListApi/GetCurrentUserExportRecordList": {
      "post": {
        "tags": [
          "ExportRecordListApi"
        ],
        "operationId": "ExportRecordListApi_GetCurrentUserExportRecordList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.Controllers.ExportRecordQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/FeatureToggle/ReplaceEventLogOperator": {
      "get": {
        "tags": [
          "FeatureToggle"
        ],
        "summary": "Replace EventLog Operator",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; EventLog</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Check if you need to replace the EventLog operator name </p>",
        "operationId": "FeatureToggle_ReplaceEventLogOperator",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/File/Upload": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Upload",
        "operationId": "File_Upload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ContentResult"
            }
          }
        }
      }
    },
    "/File/FullUpload": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_FullUpload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/UploadRW": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Drop zone accept plain text response.",
        "operationId": "File_UploadRW",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/DashboardMessageUpload": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_DashboardMessageUpload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/Download": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Download",
        "operationId": "File_Download",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "path",
            "in": "body",
            "description": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "body",
            "description": "filename",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/File/DownloadZipByPath": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_DownloadZipByPath",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "path",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/DownloadZip": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_DownloadZip",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "attachments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "filename",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/GetThumbnailUrl": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_GetThumbnailUrl",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "path",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/GetDownloadUrl": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_GetDownloadUrl",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "path",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/File/GetPartialView": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Get partial view",
        "operationId": "File_GetPartialView",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "viewName",
            "in": "body",
            "description": "filename",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.PartialViewResult"
            }
          }
        }
      }
    },
    "/File/LocationDownloadZip": {
      "post": {
        "tags": [
          "File"
        ],
        "operationId": "File_LocationDownloadZip",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "path",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Filter/AddFilter": {
      "post": {
        "tags": [
          "Filter"
        ],
        "operationId": "Filter_AddFilter",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.FilterEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Filter/GetFilters": {
      "get": {
        "tags": [
          "Filter"
        ],
        "summary": "Get filters",
        "operationId": "Filter_GetFilters",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "filterType",
            "in": "query",
            "description": "filterType",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              34,
              35,
              36,
              37,
              38,
              39
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.FilterEntity"
              }
            }
          }
        }
      }
    },
    "/Filter/RemoveFilter": {
      "post": {
        "tags": [
          "Filter"
        ],
        "operationId": "Filter_RemoveFilter",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "filterId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/GLCode/GetGLCode": {
      "post": {
        "tags": [
          "GLCode"
        ],
        "operationId": "GLCode_GetGLCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/GLCode/GetGLCodeByWBSNumber": {
      "post": {
        "tags": [
          "GLCode"
        ],
        "operationId": "GLCode_GetGLCodeByWBSNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wbsNumber",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/GLCode/GetGLCodeByServiceCategory": {
      "post": {
        "tags": [
          "GLCode"
        ],
        "operationId": "GLCode_GetGLCodeByServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wbsNumber",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/GLCode/ClientInvoiceSplitGLCodeFeatureToggle": {
      "post": {
        "tags": [
          "GLCode"
        ],
        "operationId": "GLCode_ClientInvoiceSplitGLCodeFeatureToggle",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/GLCode/GetClientInvoiceSplitGLCodes": {
      "post": {
        "tags": [
          "GLCode"
        ],
        "summary": "Get client invoice split glcodes",
        "operationId": "GLCode_GetClientInvoiceSplitGLCodes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woReactiveId",
            "in": "body",
            "description": "woReactiveId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/GPCASurveyApi/GetGPCASurveyIndexData": {
      "post": {
        "tags": [
          "GPCASurveyApi"
        ],
        "operationId": "GPCASurveyApi_GetGPCASurveyIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.GPCASurveyApiController.ClientSurveyByGPCAQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.GPCASurveyApiController.GPCAReturnModel]"
            }
          }
        }
      }
    },
    "/GPCASurveyApi/GetGPCASurveyIndexDataCount": {
      "post": {
        "tags": [
          "GPCASurveyApi"
        ],
        "operationId": "GPCASurveyApi_GetGPCASurveyIndexDataCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.GPCASurveyApiController.ClientSurveyByGPCAQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/History/Index": {
      "post": {
        "tags": [
          "History"
        ],
        "operationId": "History_Index",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "openWOs",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/History/IndexSearch": {
      "post": {
        "tags": [
          "History"
        ],
        "operationId": "History_IndexSearch",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/History/GetHouseOwnerWOHistroyList": {
      "post": {
        "tags": [
          "History"
        ],
        "operationId": "History_GetHouseOwnerWOHistroyList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          },
          {
            "name": "isContact",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/Payment": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_Payment",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/Cancel": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_Cancel",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/GetToken": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_GetToken",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeAdvisor/GetPaymentInfo": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_GetPaymentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/Pay": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_Pay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentNonce",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "body",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "name": "billingAddress",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.HomeAdvisor.BillingAddressModel"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/CancelCall": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_CancelCall",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/ExpireCall": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_ExpireCall",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeAdvisor/GetState": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_GetState",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/GetEmailInfo": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_GetEmailInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/SaveClientInfo": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_SaveClientInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.HomeAdvisor.CreditCardBindRecordEntity"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisor/SendInvoiceEmail": {
      "post": {
        "tags": [
          "HomeAdvisor"
        ],
        "operationId": "HomeAdvisor_SendInvoiceEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentDateTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/PaymentForSetPackages": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_PaymentForSetPackages",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/Cancel": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_Cancel",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetToken": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetToken",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetPaymentInfo": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetPaymentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetPayInfoWithSimPackage": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetPayInfoWithSimPackage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetPayment": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetPayment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "call",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallEntity"
            }
          },
          {
            "name": "packages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.HomeAdvisor.Price.CallSetSimPackageModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.Web.Client.Areas.HomeAdvisor.Models.SimPcakagePayment]]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetPayInfoOfSetPackages": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetPayInfoOfSetPackages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetLocationInfo": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetLocationInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/Pay": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_Pay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.HomeAdvisor.Models.PayInfoViewModel"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/CancelCall": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_CancelCall",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/ExpireCall": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_ExpireCall",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetState": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetState",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/GetEmailInfo": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_GetEmailInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/SaveClientInfo": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_SaveClientInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.HomeAdvisor.CreditCardBindRecordEntity"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeAdvisorSetPackages/SendInvoiceEmail": {
      "post": {
        "tags": [
          "HomeAdvisorSetPackages"
        ],
        "operationId": "HomeAdvisorSetPackages_SendInvoiceEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "callId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentDateTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/Index": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeOwner/Detail": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_Detail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HomeOwner/GetIndexData": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.HouseOwnerQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/GetHouseOwnerNteOptDataList": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetHouseOwnerNteOptDataList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/UpdateAcceptOrDeclineStandardNTE": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_UpdateAcceptOrDeclineStandardNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceCategoryUserMappingQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HomeOwner/GetClientDistrictList": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetClientDistrictList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.AutoCompleteClientDistrictQueryViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckCreateuserPhone": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckCreateuserPhone",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "createUserPhone",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckUpdateUserPhone": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckUpdateUserPhone",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateUserPhone",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckCreateUserEmail": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckCreateUserEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "createUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckUpdateUserEmail": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckUpdateUserEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updateUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckCreateUserName": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckCreateUserName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "createUserName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CreateHOAccount": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CreateHOAccount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HOAccountCreateViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/GetHouseOwnerInformation": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "summary": "Get house owner information",
        "operationId": "HomeOwner_GetHouseOwnerInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerInformationViewModel"
            }
          }
        }
      }
    },
    "/HomeOwner/GetUserDistrictList": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetUserDistrictList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/UpdateHomeOwnerDetail": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_UpdateHomeOwnerDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HomeOwner/UpdateUserDistrict": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_UpdateUserDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "districts",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/UpdateHomeOwnerAction": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_UpdateHomeOwnerAction",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/GetHomeOwnerEventLogs": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetHomeOwnerEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/SearchUserDefinedTemplateListByTitle": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_SearchUserDefinedTemplateListByTitle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserDefinedTemplateSearchByTitleQueryViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/CreateTemplate": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CreateTemplate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "createVm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserDefinedTemplateCreateViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HomeOwner/GetUserDefinedTemplateList": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_GetUserDefinedTemplateList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserDefinedTemplateQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HomeOwner/UpdateUserDefinedTemplate": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_UpdateUserDefinedTemplate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "updateVm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserDefinedTemplateUpdateViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HomeOwner/DeleteUserDefinedTemplate": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_DeleteUserDefinedTemplate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userCommunicationTemplateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HomeOwner/CheckUserDefinedTemplateTitle": {
      "post": {
        "tags": [
          "HomeOwner"
        ],
        "operationId": "HomeOwner_CheckUserDefinedTemplateTitle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "checkVm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserDefinedTemplateCheckTitleViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/Approval": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_Approval",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/ApprovalMobile": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_ApprovalMobile",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/StaticApproval": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_StaticApproval",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/WoDateil": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_WoDateil",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/updateUserReceiveEmail": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_updateUserReceiveEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/updateUserReceiveSmsAlert": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_updateUserReceiveSmsAlert",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/ApprovalResult": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_ApprovalResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approvalResult",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/GpsApprovalResult": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_GpsApprovalResult",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/GetApprovalResult": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_GetApprovalResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approvalResult",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/Accept": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "summary": "Accept",
        "operationId": "HouseOwnerApproval_Accept",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/SetWoAccept": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_SetWoAccept",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/Decline": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_Decline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/GetClientId": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_GetClientId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/HouseOwnerApproval/SetWoDecline": {
      "post": {
        "tags": [
          "HouseOwnerApproval"
        ],
        "operationId": "HouseOwnerApproval_SetWoDecline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subReason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/Index": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/GetHouseOwnerNteList": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_GetHouseOwnerNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.HouseOwnerQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/GetHouseOwnerLocationData": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_GetHouseOwnerLocationData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.HouseOwnerQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/AcceptOrDeclineStandardNte": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_AcceptOrDeclineStandardNte",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAccept",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/GetHouseOwnerNteOptDateList": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_GetHouseOwnerNteOptDateList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/HouseOwnerNte/UpdateAcceptOrDeclineStandardNTE": {
      "post": {
        "tags": [
          "HouseOwnerNte"
        ],
        "operationId": "HouseOwnerNte_UpdateAcceptOrDeclineStandardNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceCategoryUserMappingQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Client/Hr/Data/Update": {
      "post": {
        "tags": [
          "HrDataAPI"
        ],
        "operationId": "HrDataAPI_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "hrDataQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.APIs.HrDataApiQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Client/Hr/Data/Delete": {
      "delete": {
        "tags": [
          "HrDataAPI"
        ],
        "operationId": "HrDataAPI_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "hrDataQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.APIs.HrDataApiQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/clientapi/wo/AddAttachment": {
      "post": {
        "tags": [
          "InboundApi"
        ],
        "operationId": "InboundApi_AddAttachment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ApiFile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.InboundApiController.ApiFileModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/clientapi/wo/updateproposal": {
      "post": {
        "tags": [
          "InboundApi"
        ],
        "summary": "Update SMS proposal based on ServiceNow request.",
        "operationId": "InboundApi_UpdateSmsProposal",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.ProposalApiQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/clientapi/wo/UpdateWOPriority": {
      "post": {
        "tags": [
          "InboundApi"
        ],
        "operationId": "InboundApi_UpdateWOPriority",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "req",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.InboundApiController.UpdateWOPriorityQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/clientapi/wo/create": {
      "post": {
        "tags": [
          "InboundApi"
        ],
        "operationId": "InboundApi_CreateWO",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "requests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Controllers.APIs.InboundApiController.WOCreationApiQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Inspection/Index": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "summary": "return view",
        "operationId": "Inspection_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Inspection/NewInspection": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_NewInspection",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Inspection/CheckABSettingTrp": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_CheckABSettingTrp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetInspectionList": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetInspectionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetAssessmentList": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetAssessmentList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetLocationInfo": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetLocationInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/CreateInspection": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_CreateInspection",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.InspectionProjectModel"
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/Details": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Inspection/InspectionDetail": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_InspectionDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/UpdateDetail": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_UpdateDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/WoEventLogs": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/WoRescheduleLogs": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_WoRescheduleLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetInspectionItems": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetInspectionItems",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maintenanceTypeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "sMSReviewStatusIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "hasTrpABModuleSetting",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/ExportInspectionItemsPDF": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_ExportInspectionItemsPDF",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maintenanceTypeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "sMSReviewStatusIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "isScopeGrid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inspenctionView",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/ExportInspectionItemsPhotoPDF": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_ExportInspectionItemsPhotoPDF",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maintenanceTypeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "sMSReviewStatusIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "inspenctionView",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/ExportInspectionItemsExcel": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_ExportInspectionItemsExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maintenanceTypeIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          {
            "name": "sMSReviewStatusIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/UpdateTaskStatus": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_UpdateTaskStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/UpdateTaskReason": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_UpdateTaskReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/UpdateInspectionStatus": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_UpdateInspectionStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inspectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "type": "integer"
            }
          },
          {
            "name": "turnRehabCapitalProjectStatus",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                356,
                357,
                358,
                359,
                360,
                361,
                362,
                363,
                364,
                365,
                366,
                367,
                368,
                369,
                370,
                371,
                372,
                373,
                374,
                375,
                425,
                457,
                458,
                464,
                465
              ],
              "type": "integer"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isHasABmodule",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "earliestProjectStartDate",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetMaintenanceTypeList": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetMaintenanceTypeList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetRoomPhotoList": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetRoomPhotoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "scopeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetTrpType": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetTrpType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/CreateTrp": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_CreateTrp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TurnRehabCapitalProjectModel"
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/IsTrpConfiguredWithAbModuleClient": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_IsTrpConfiguredWithAbModuleClient",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/GetUserDistrictsRegions": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_GetUserDistrictsRegions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/ExportExcelForMasterView": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_ExportExcelForMasterView",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Controller.InspectionExportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Inspection/ExportPdfForMasterViewAndRoomView": {
      "post": {
        "tags": [
          "Inspection"
        ],
        "operationId": "Inspection_ExportPdfForMasterViewAndRoomView",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Controller.InspectionExportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/InteractionLogApi/GetInteractionLogs": {
      "post": {
        "tags": [
          "InteractionLogApi"
        ],
        "operationId": "InteractionLogApi_GetInteractionLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.QueryCondition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.InteractionLogResult"
              }
            }
          }
        }
      }
    },
    "/InteractionLogApi/GetReplyMessageList": {
      "post": {
        "tags": [
          "InteractionLogApi"
        ],
        "operationId": "InteractionLogApi_GetReplyMessageList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "messageId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_BatchInvoice",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/InvoiceList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get Invoice List",
        "operationId": "Invoice_InvoiceList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BatchInvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.BatchInvoiceEntity]"
            }
          }
        }
      }
    },
    "/Invoice/GetExportInvoiceDetailExcelCount": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get Invoice detail excel item count",
        "operationId": "Invoice_GetExportInvoiceDetailExcelCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BatchInvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Invoice/ExportInvoiceDetailExcelByServer": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get Invoice List excel by server",
        "operationId": "Invoice_ExportInvoiceDetailExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BatchInvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Invoice/ExportInvoiceDetailExcelByEmail": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "export Invoice detail excel by email",
        "operationId": "Invoice_ExportInvoiceDetailExcelByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BatchInvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "string exportEmail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Invoice/ExportInvoiceExcelByServer": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_ExportInvoiceExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Invoice/ExportInvoiceExcelByEmail": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "export Invoice excel by email",
        "operationId": "Invoice_ExportInvoiceExcelByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "BatchInvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "string exportEmail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoiceDetails": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_BatchInvoiceDetails",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchInvoiceNum",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoiceDetailsReactive": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Reactive Batch Invoice Details",
        "operationId": "Invoice_BatchInvoiceDetailsReactive",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchInvoiceNum",
            "in": "body",
            "description": "string batchInvoiceNum",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceTypeBatchInvoiceStatModel"
              }
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoiceDetailsRecurrent": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get recurrent Batch Invoice Details",
        "operationId": "Invoice_BatchInvoiceDetailsRecurrent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchInvoiceNum",
            "in": "body",
            "description": "string batchInvoiceNum",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceTypeBatchInvoiceStatModel"
              }
            }
          }
        }
      }
    },
    "/Invoice/GetBatchInvoiceNum": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get recurrent Batch Invoice number",
        "operationId": "Invoice_GetBatchInvoiceNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchInvoiceNum",
            "in": "body",
            "description": "string batchInvoiceNum",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Invoice/StoreExpense": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_StoreExpense",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/ExpenseByStore": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Expense By Store",
        "operationId": "Invoice_ExpenseByStore",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ServiceTypeInvoiceStatQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceStatQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceStatModel"
              }
            }
          }
        }
      }
    },
    "/Invoice/LocationBudget": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_LocationBudget",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/GetLocationBudgetData": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Location Budget Data",
        "operationId": "Invoice_GetLocationBudgetData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ServiceTypeInvoiceLocationBudgetQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceLocationBudgetQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceLocationBudgetViewModel"
            }
          }
        }
      }
    },
    "/Invoice/AllFiscalYear": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get all Fiscal Year",
        "operationId": "Invoice_AllFiscalYear",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientFiscalYearEntity"
              }
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoiceListDetail": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_BatchInvoiceListDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchInvoiceNum",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/GetInoviceListDetails": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Inovice List Details",
        "operationId": "Invoice_GetInoviceListDetails",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "InvoiceQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.InvoiceQueryModel"
            }
          },
          {
            "name": "Invoicetype",
            "in": "body",
            "description": "short Invoicetype",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.InvoiceEntity]"
            }
          }
        }
      }
    },
    "/Invoice/ListDetailsExportExcelByServer": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "List Details Export Excel By Server",
        "operationId": "Invoice_ListDetailsExportExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ClientBatchInvoiceDetailQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientBatchInvoiceDetailQueryModel"
            }
          },
          {
            "name": "batchInvoiceId",
            "in": "body",
            "description": "string batchInvoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceType",
            "in": "body",
            "description": "BatchInvoiceType invoiceType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Invoice/ListDetailsExportExcelByEmail": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "List Details Export Excel By Email",
        "operationId": "Invoice_ListDetailsExportExcelByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ClientBatchInvoiceDetailQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientBatchInvoiceDetailQueryModel"
            }
          },
          {
            "name": "batchInvoiceId",
            "in": "body",
            "description": "string batchInvoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invoiceType",
            "in": "body",
            "description": "BatchInvoiceType invoiceType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "type": "integer"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "string exportEmail",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Invoice/MonthToDayList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_MonthToDayList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/MonthToDayDataList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Month ToDay Data List",
        "operationId": "Invoice_MonthToDayDataList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.InvoiceEntity]"
            }
          }
        }
      }
    },
    "/Invoice/InvoiceWoList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_InvoiceWoList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/WoList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Wo List",
        "operationId": "Invoice_WoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ServiceTypeInvoiceStatQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceStatQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.WoBaseEntity]"
            }
          }
        }
      }
    },
    "/Invoice/BatchInvoiceWoList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Batch Invoice Wo List",
        "operationId": "Invoice_BatchInvoiceWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ServiceTypeBatchInvoiceStatQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceTypeBatchInvoiceStatQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.WoBaseEntity]"
            }
          }
        }
      }
    },
    "/Invoice/ExportPDF": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_ExportPDF",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.InvoiceItemQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Invoice/ExportDetailedPDF": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_ExportDetailedPDF",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.InvoiceItemQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Invoice/PhotosGallery": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_PhotosGallery",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Invoice/InvoicePhotosGallery": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "get Invoice Photos Gallery",
        "operationId": "Invoice_InvoicePhotosGallery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WoBaseQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          },
          {
            "name": "batchInvoiceId",
            "in": "body",
            "description": "string batchInvoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.PhotoConfirmModel]"
            }
          }
        }
      }
    },
    "/Invoice/AttachmentsPhotoConfirmSecondaryList": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "Invoice_AttachmentsPhotoConfirmSecondaryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referenceType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Link/Index": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Link/GetLinkedWOsCount": {
      "post": {
        "tags": [
          "Link"
        ],
        "summary": "Get linked wos count",
        "operationId": "Link_GetLinkedWOsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sourceId",
            "in": "body",
            "description": "source Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLinkType",
            "in": "body",
            "description": "source Link Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Link/GetLinkedCalls": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_GetLinkedCalls",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sourceId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLinkType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/Link/GetLinkedCallsCount": {
      "post": {
        "tags": [
          "Link"
        ],
        "summary": "Get linked calls count",
        "operationId": "Link_GetLinkedCallsCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sourceId",
            "in": "body",
            "description": "source Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLinkType",
            "in": "body",
            "description": "source Link Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Link/GetLinkedWOs": {
      "post": {
        "tags": [
          "Link"
        ],
        "summary": "Get linked wos",
        "operationId": "Link_GetLinkedWOs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sourceId",
            "in": "body",
            "description": "source Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLinkType",
            "in": "body",
            "description": "source Link Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.LinkWoModel"
              }
            }
          }
        }
      }
    },
    "/Link/GetLinkTypes": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_GetLinkTypes",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/Link/Remove": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_Remove",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "linkId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Link/CheckIsTripChageGroup": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_CheckIsTripChageGroup",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "linkEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LinkEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Link/Add": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_Add",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "linkEntity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LinkEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Link/GetNotLinkWoList": {
      "post": {
        "tags": [
          "Link"
        ],
        "operationId": "Link_GetNotLinkWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "term",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "sourceId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Location/Index": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get location index view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_Index",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "LocationQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Location/LocationList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get location list data",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_LocationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "LocationQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "description": "week",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.LocationEntity]"
            }
          }
        }
      }
    },
    "/Location/ExportLocation": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Exports the location.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_ExportLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "description": "The week.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/Location/ExportAssetCount": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Exports the asset count.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_ExportAssetCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Location/ExportAssetExcelBySendEmail": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Exports the asset excel by send email.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_ExportAssetExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "The export email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Location/ExportAssetExcel": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Exports the asset excel.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_ExportAssetExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Location/StoreType": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Stores the type.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_StoreType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationTypeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.LocationTypeEntity"
              }
            }
          }
        }
      }
    },
    "/Location/GetAllListDatas": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get all location list datas",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location index view</p>",
        "operationId": "Location_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationDataModel"
            }
          }
        }
      }
    },
    "/Location/Details": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get location details view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Location/DetailsNew": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_DetailsNew",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Location/SRCommercialDetail": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_SRCommercialDetail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Location/SRJPMCDetail": {
      "post": {
        "tags": [
          "Location"
        ],
        "operationId": "Location_SRJPMCDetail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Location/AllServiceCategory": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets all service category.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/Location/ServiceCategory": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the service category.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_ServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/Location/LocationDetail": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get location detail",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_LocationDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCamelCase",
            "in": "body",
            "description": "is camelCase",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationDetailModel"
            }
          }
        }
      }
    },
    "/Location/Responsible": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get responsible page list",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Responsible entity</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_Responsible",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "LocationServiceTypeResponsibleQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationServiceTypeResponsibleQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.LocationServiceTypeResponsibleEntity]"
            }
          }
        }
      }
    },
    "/Location/ServiceCategoryType": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Services the type of the category.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_ServiceCategoryType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationServiceTypeResponsibleQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/Location/Attachment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Attachments the specified location identifier.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Attachment</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_Attachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/Location/CommentList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Comments the list.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CommentList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "responsibleId",
            "in": "body",
            "description": "The responsible identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CommentEntity"
              }
            }
          }
        }
      }
    },
    "/Location/LastComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Lasts the comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_LastComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "responsibleId",
            "in": "body",
            "description": "The responsible identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.CommentEntity"
            }
          }
        }
      }
    },
    "/Location/NoticeRequirementComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get notice requirement comment",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_NoticeRequirementComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLower",
            "in": "body",
            "description": "is Lower",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CommentEntity"
              }
            }
          }
        }
      }
    },
    "/Location/ComplianceWithLawComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get compliance with law comment",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_ComplianceWithLawComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLower",
            "in": "body",
            "description": "is Lower",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CommentEntity"
              }
            }
          }
        }
      }
    },
    "/Location/PropertyInsuranceComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Properties the insurance comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_PropertyInsuranceComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLower",
            "in": "body",
            "description": "if set to true [is lower].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CommentEntity"
              }
            }
          }
        }
      }
    },
    "/Location/CreateComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates the comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CreateComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "responsibleId",
            "in": "body",
            "description": "The responsible identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CreateNoticeRequirementComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates the notice requirement comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CreateNoticeRequirementComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CreateComplianceWithLawComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates the compliance with law comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CreateComplianceWithLawComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CreatePropertyInsuranceComment": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates the property insurance comment.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Notice Requirements</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CreatePropertyInsuranceComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/GetLandlordList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the landlord list.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Landlord</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetLandlordList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLandlordQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.LocationLandlordEntity]"
            }
          }
        }
      }
    },
    "/Location/GetLandlordComments": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the landlord comments.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Landlord</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetLandlordComments",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "landlordId",
            "in": "body",
            "description": "The landlord identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.MessageEntity"
              }
            }
          }
        }
      }
    },
    "/Location/GetResponsibleList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the responsible list.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Landlord</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetResponsibleList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationServiceTypeResponsibleQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLawInsuranceEntity"
            }
          }
        }
      }
    },
    "/Location/GetLawInsuranceDetail": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the law insurance detail.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Landlord</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetLawInsuranceDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLawInsuranceEntity"
            }
          }
        }
      }
    },
    "/Location/GetIberiaLocationAttr": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the iberia location attribute.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Landlord</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetIberiaLocationAttr",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Location.IberiaLocationAttrViewModel"
            }
          }
        }
      }
    },
    "/Location/SurveyHistory": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get all survey history list",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Service History</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_SurveyHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyProjectHistoryListModel"
              }
            }
          }
        }
      }
    },
    "/Location/GetLastTwoYearsSpent": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the last two years spent.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Service History -&gt; Asset Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetLastTwoYearsSpent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetId",
            "in": "body",
            "description": "The asset identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.LastTwoYearsSpentViewModel"
            }
          }
        }
      }
    },
    "/Location/GetReactiveWOHistoryList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get reactive wo history  list",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Service History</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetReactiveWOHistoryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "wo query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoHistoryEntity]"
            }
          }
        }
      }
    },
    "/Location/GetRecurrentWOHistoryList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the recurrent wo history list.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Service History</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetRecurrentWOHistoryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "The query model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ReactiveWoHistoryEntity]"
            }
          }
        }
      }
    },
    "/Location/GetNext7DaysWeather": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Get next seven days weather",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>WO Management -&gt; Recurring WO -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>RecurringWo detail view</p>",
        "operationId": "Location_GetNext7DaysWeather",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WeatherSummary"
              }
            }
          }
        }
      }
    },
    "/Location/CheckLocationNumber": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Checks the location number.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details -&gt; Service History</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_CheckLocationNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationNumber",
            "in": "body",
            "description": "The location number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CheckLocationPhone": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Checks the location phone.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location view</p>",
        "operationId": "Location_CheckLocationPhone",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "phone",
            "in": "body",
            "description": "The phone.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CheckIsExistLocation": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Checks the is exist location.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location view</p>",
        "operationId": "Location_CheckIsExistLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Location/CreateLocation": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates the location.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location view</p>",
        "operationId": "Location_CreateLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "description": "The vm.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationEntity"
            }
          },
          {
            "name": "isCreatingAccount",
            "in": "body",
            "description": "The is creating account.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCreatedByTRP",
            "in": "body",
            "description": "if set to true [is created by TRP].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Location.LocationCreateViewModel"
            }
          }
        }
      }
    },
    "/Location/GetHouseOwnerDistrict": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the house owner district.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; House Owner</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>House owner view</p>",
        "operationId": "Location_GetHouseOwnerDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "The user identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Location/GetHouseOwnerRegion": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the house owner region.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; House Owner</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>House owner view</p>",
        "operationId": "Location_GetHouseOwnerRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "district",
            "in": "body",
            "description": "The district.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Location/RemoveLocationResident": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Removes the location resident.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Resident</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location view</p>",
        "operationId": "Location_RemoveLocationResident",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentId",
            "in": "body",
            "description": "The resident identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Location/GetStaffsCardList": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the staffs card list.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetStaffsCardList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.StaffsCardModel"
              }
            }
          }
        }
      }
    },
    "/Location/GetCommercialLocationSummary": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Gets the commercial location summary.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Locations -&gt; Details</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Location detail view</p>",
        "operationId": "Location_GetCommercialLocationSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Location.Commercial.CommercialLocationSummary"
            }
          }
        }
      }
    },
    "/LocationApi/CoverForYouList": {
      "post": {
        "tags": [
          "LocationApi"
        ],
        "operationId": "LocationApi_CoverForYouList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.CoverForYouViewModel"
              }
            }
          }
        }
      }
    },
    "/LocationApi/CoverForYouByRegionList": {
      "post": {
        "tags": [
          "LocationApi"
        ],
        "operationId": "LocationApi_CoverForYouByRegionList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.CoverForYouViewModel"
              }
            }
          }
        }
      }
    },
    "/LocationApi/GetAllListDatas": {
      "post": {
        "tags": [
          "LocationApi"
        ],
        "operationId": "LocationApi_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationApiRepo.LocationTypeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationApiController.GetAllListDatasModel"
            }
          }
        }
      }
    },
    "/LocationApi/LocationList": {
      "post": {
        "tags": [
          "LocationApi"
        ],
        "operationId": "LocationApi_LocationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationApiRepo.LocationListQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.LocationApiRepo.LocationListViewModel"
              }
            }
          }
        }
      }
    },
    "/LocationApi/LocationListCount": {
      "post": {
        "tags": [
          "LocationApi"
        ],
        "operationId": "LocationApi_LocationListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationApiRepo.LocationListQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Client/Loc/LocationData": {
      "post": {
        "tags": [
          "LocationAPI"
        ],
        "summary": "Get locaiton data",
        "operationId": "LocationAPI_LocationData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiQuery",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationQueryApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Client/Loc/v1/LocationData": {
      "post": {
        "tags": [
          "LocationAPI"
        ],
        "summary": "Get location data",
        "operationId": "LocationAPI_LocationDataV1",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiQuery",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationQueryApiModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/LocationDetailApi/GetServiceRequestWoListData": {
      "post": {
        "tags": [
          "LocationDetailApi"
        ],
        "operationId": "LocationDetailApi_GetServiceRequestWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationDetailApiController.ServiceRequestQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.LocationDetailApiController.ServiceRequestViewModel]"
            }
          }
        }
      }
    },
    "/LocationDetailApi/GetWODetailServiceRequestWoListData": {
      "post": {
        "tags": [
          "LocationDetailApi"
        ],
        "operationId": "LocationDetailApi_GetWODetailServiceRequestWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.LocationDetailApiController.ServiceRequestQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.LocationDetailApiController.ServiceRequestViewModel]"
            }
          }
        }
      }
    },
    "/LocationDetailApi/GetRecommendServiceCode": {
      "post": {
        "tags": [
          "LocationDetailApi"
        ],
        "operationId": "LocationDetailApi_GetRecommendServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.LocationEntity]"
            }
          }
        }
      }
    },
    "/LocationDetailApi/InitSRLocationDetailSearchFields": {
      "post": {
        "tags": [
          "LocationDetailApi"
        ],
        "operationId": "LocationDetailApi_InitSRLocationDetailSearchFields",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/LocationDetailApi/GetServiceRequestSummary": {
      "post": {
        "tags": [
          "LocationDetailApi"
        ],
        "operationId": "LocationDetailApi_GetServiceRequestSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.LocationDetailApiController.ServiceRequestSummaryResult"
              }
            }
          }
        }
      }
    },
    "/LocationInfoApi/GetClassificationTypeList": {
      "post": {
        "tags": [
          "LocationInfoApi"
        ],
        "operationId": "LocationInfoApi_GetClassificationTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.LocationInfoApiController.ClassificationTypeList"
              }
            }
          }
        }
      }
    },
    "/Log/GetVisualEventLog": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_GetVisualEventLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Log/VisualEventLogPdf": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_VisualEventLogPdf",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Log/GetEventLog": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_GetEventLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                78,
                79,
                80,
                81
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isOverview",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Log/Detail": {
      "post": {
        "tags": [
          "Log"
        ],
        "operationId": "Log_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/mercury/{apiController}/{apiAction}": {
      "get": {
        "tags": [
          "Mercury"
        ],
        "operationId": "Mercury_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiController",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiAction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "query",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mercury"
        ],
        "operationId": "Mercury_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiController",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiAction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/{apiController}/{apiAction}": {
      "get": {
        "tags": [
          "Mercury"
        ],
        "operationId": "Mercury_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiController",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiAction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "query",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mercury"
        ],
        "operationId": "Mercury_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "apiController",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiAction",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Mesh/GetOneConnectApiBaseInfoAsync": {
      "post": {
        "tags": [
          "Mesh"
        ],
        "operationId": "Mesh_GetOneConnectApiBaseInfoAsync",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonResult]"
            }
          }
        }
      }
    },
    "/Mesh/GetOneConnectAuthorizeHrefAsync": {
      "post": {
        "tags": [
          "Mesh"
        ],
        "operationId": "Mesh_GetOneConnectAuthorizeHrefAsync",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/Message/MarkAsRead": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Mark as read",
        "operationId": "Message_MarkAsRead",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "Message reference type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "Message reference id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isChecked",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.MessageEntity"
            }
          }
        }
      }
    },
    "/Message/GetDetailMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Detail Messages",
        "operationId": "Message_GetDetailMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Message/GetReactiveMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Reactive Message List",
        "operationId": "Message_GetReactiveMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCcToMe",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.MessageViewModel]"
            }
          }
        }
      }
    },
    "/Message/GetRecurrentMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Recurrent Message List",
        "operationId": "Message_GetRecurrentMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCcToMe",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.MessageViewModel]"
            }
          }
        }
      }
    },
    "/Message/GetCallCenterMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Call Center Message List",
        "operationId": "Message_GetCallCenterMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.MessageViewModel]"
            }
          }
        }
      }
    },
    "/Message/GetCallCenterMessagesCount": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Call Center Messages Count",
        "operationId": "Message_GetCallCenterMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CallQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Message/GetReactiveMessagesCount": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Reactive Messages Count",
        "operationId": "Message_GetReactiveMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCcToMe",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Message/GetRecurrentMessagesCount": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Recurrent Messages Count",
        "operationId": "Message_GetRecurrentMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "senderRoleType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCcToMe",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Message/GetAncestorMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get ancestor messages",
        "operationId": "Message_GetAncestorMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "messageId",
            "in": "body",
            "description": "messageId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "messageParentId",
            "in": "body",
            "description": "messageParentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.MessageEntity"
              }
            }
          }
        }
      }
    },
    "/Message/GetAllWODetail": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get all wo detail",
        "operationId": "Message_GetAllWODetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "refType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.DashboardMessageWoViewModel"
            }
          }
        }
      }
    },
    "/Message/GetWoClientType": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Get Wo Client Type",
        "operationId": "Message_GetWoClientType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Message/Reply": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "reply message by refid",
        "operationId": "Message_Reply",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewModel",
            "in": "body",
            "description": "reply message content",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageReplyViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
            }
          }
        }
      }
    },
    "/Message/UnReadMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_UnReadMessages",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Message/Index": {
      "get": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Message/GetMessageDetail": {
      "get": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_GetMessageDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Message/GetReactiveWoUnReadMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_GetReactiveWoUnReadMessages",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Message/GetRecurrentWoUnReadMessages": {
      "post": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_GetRecurrentWoUnReadMessages",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.Web.Client.Areas.SOM.Models.WoMessageModel]]"
            }
          }
        }
      }
    },
    "/Message/MarkAsReads": {
      "post": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_MarkAsReads",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Message/SendMessage": {
      "post": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_SendMessage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FilePath",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Message/MessageDetail": {
      "get": {
        "tags": [
          "Message"
        ],
        "operationId": "Message_MessageDetail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/MessageCenterBase/GetNexUnReadMessages": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_GetNexUnReadMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessageCenterBase/GetUnReadMessages": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_GetUnReadMessages",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.UnReadMessagesViewModel"
              }
            }
          }
        }
      }
    },
    "/MessageCenterBase/GetUnReadMessagesCount": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_GetUnReadMessagesCount",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessageCenterBase/PollByBrowser": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_PollByBrowser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ticks",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Initializer.Controllers.MessageCenterBaseController.PollResult"
            }
          }
        }
      }
    },
    "/MessageCenterBase/Poll": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_Poll",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ticks",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessageCenterBase/MarkAsReaded": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_MarkAsReaded",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "messageIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/MessageCenterBase/MarkAsReadedByType": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_MarkAsReadedByType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/MessageCenterBase/HealthCheck": {
      "post": {
        "tags": [
          "MessageCenterBase"
        ],
        "operationId": "MessageCenterBase_HealthCheck",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/MessagesApi/GetReactiveMessagesList": {
      "post": {
        "tags": [
          "MessagesApi"
        ],
        "operationId": "MessagesApi_GetReactiveMessagesList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.MessagesApiRepo.ReactiveMessagesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessagesApi/GetReactiveMessagesCount": {
      "post": {
        "tags": [
          "MessagesApi"
        ],
        "operationId": "MessagesApi_GetReactiveMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.MessagesApiRepo.ReactiveMessagesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessagesApi/GetRecurrentMessagesList": {
      "post": {
        "tags": [
          "MessagesApi"
        ],
        "operationId": "MessagesApi_GetRecurrentMessagesList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.MessagesApiRepo.RecurrentMessagesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MessagesApi/GetRecurrentMessagesCount": {
      "post": {
        "tags": [
          "MessagesApi"
        ],
        "operationId": "MessagesApi_GetRecurrentMessagesCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.MessagesApiRepo.RecurrentMessagesQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MustDo/Index": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "operationId": "MustDo_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/MustDo/ConfirmWoList": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "Get confirm wo list",
        "operationId": "MustDo_ConfirmWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Areas.StoreManager.Models.ConfirmWoModel]"
            }
          }
        }
      }
    },
    "/MustDo/ConfirmWoListNew": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "Gets a list of confirmed wo",
        "operationId": "MustDo_ConfirmWoListNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "WoBaseQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.WoServiceReasonModel]"
            }
          }
        }
      }
    },
    "/MustDo/RecurrentConfirm": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "recurrent confirmed wo",
        "operationId": "MustDo_RecurrentConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "ConfirmEntity entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          },
          {
            "name": "multipleSelectRatingReasonNotesModels",
            "in": "body",
            "description": "multipleSelectRatingReasonNotesModels",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Shared.Confirm.MultipleSelectRatingReasonNotesModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/MustDo/RecurrentConfirmNew": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "confirmed recurrent wo",
        "operationId": "MustDo_RecurrentConfirmNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "ConfirmEntity entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/MustDo/ReactiveConfirm": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "confirmed reactive wo",
        "operationId": "MustDo_ReactiveConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "ConfirmEntity entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/MustDo/ReactiveConfirmNew": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "reactive wo confirmed",
        "operationId": "MustDo_ReactiveConfirmNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "ConfirmEntity entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/MustDo/Undo": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "Un do confirmed",
        "operationId": "MustDo_Undo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/MustDo/GetRatingABModule": {
      "post": {
        "tags": [
          "MustDo"
        ],
        "summary": "Get rating AB module",
        "operationId": "MustDo_GetRatingABModule",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/MyProperties/Index": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/MyProperties/SearchHouse": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_SearchHouse",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/MyProperties/PropertiesDetail": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_PropertiesDetail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/MyProperties/GetClientLocationList": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_GetClientLocationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MyProperties/GetLocationResidentList": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_GetLocationResidentList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/MyProperties/GetLocationDetailList": {
      "post": {
        "tags": [
          "MyProperties"
        ],
        "operationId": "MyProperties_GetLocationDetailList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/NDCPNationalContract/GetNDCPNationalContractInfo": {
      "post": {
        "tags": [
          "NDCPNationalContract"
        ],
        "operationId": "NDCPNationalContract_GetNDCPNationalContractInfo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/NDCPNationalContract/SigningURL": {
      "post": {
        "tags": [
          "NDCPNationalContract"
        ],
        "operationId": "NDCPNationalContract_SigningURL",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/NDCPNationalContract/DoNotShowContractAgainCheckBox": {
      "post": {
        "tags": [
          "NDCPNationalContract"
        ],
        "operationId": "NDCPNationalContract_DoNotShowContractAgainCheckBox",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "check",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/New/Step1": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_Step1",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/New/Step2": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_Step2",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/New/Step3": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_Step3",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/New/Search": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_Search",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/New/GetLocationList": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get location list",
        "operationId": "New_GetLocationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.SOM.Models.LocationAddressViewModel"
              }
            }
          }
        }
      }
    },
    "/New/GetServiceCategoryList": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Service Category List",
        "operationId": "New_GetServiceCategoryList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetServiceTypeList": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Service Type List",
        "operationId": "New_GetServiceTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetServiceCodeList": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Service Code List",
        "operationId": "New_GetServiceCodeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetResidentList": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Resident List",
        "operationId": "New_GetResidentList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
              }
            }
          }
        }
      }
    },
    "/New/CreateLocationResident": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_CreateLocationResident",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/New/GetCommonQuestion": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Common Question",
        "operationId": "New_GetCommonQuestion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetServiceCodeQuestion": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Service Code Question",
        "operationId": "New_GetServiceCodeQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetGateCode": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Gate Code",
        "operationId": "New_GetGateCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/New/Commit": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Create Wo",
        "operationId": "New_Commit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "wo entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          },
          {
            "name": "commonAnswer",
            "in": "body",
            "description": "common Answer",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "serviceCodeAnswer",
            "in": "body",
            "description": "service Code Answer",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "declineComment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "declineReason",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "isAcceptNte",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isClientPopTips",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autoScheduleModel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/New/PreCreateWo": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Pre Create Wo",
        "operationId": "New_PreCreateWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          },
          {
            "name": "commonAnswer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "serviceCodeAnswer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "declineComment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "declineReason",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "isAcceptNte",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/New/TermsAndConditions": {
      "post": {
        "tags": [
          "New"
        ],
        "operationId": "New_TermsAndConditions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/New/ClientServiceCodePriorty": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Client Service Code Priorty",
        "operationId": "New_ClientServiceCodePriorty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
              }
            }
          }
        }
      }
    },
    "/New/GetServiceCodeWOType": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Service Code WOType",
        "operationId": "New_GetServiceCodeWOType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/New/GetScheduleTime": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Schedule Time",
        "operationId": "New_GetScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woServiceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "priorityId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
              }
            }
          }
        }
      }
    },
    "/New/GetWeatherForecastByTime": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Weather Forecast By Time",
        "operationId": "New_GetWeatherForecastByTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "times",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WeatherSummary"
              }
            }
          }
        }
      }
    },
    "/New/GetAvailableScheduleTime": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Get Available Schedule Time",
        "operationId": "New_GetAvailableScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "optimal",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.AvailableScheduleDTO"
            }
          }
        }
      }
    },
    "/New/IsAutoScheduleRegion": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Is Auto Schedule Region",
        "operationId": "New_IsAutoScheduleRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/New/IsCAHManaged": {
      "post": {
        "tags": [
          "New"
        ],
        "summary": "Is CAH Managed",
        "operationId": "New_IsCAHManaged",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/Reactive": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get reactive view",
        "operationId": "NewRequest_Reactive",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/NewRequest/CheckLocationResidentEmail": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Check Location Resident Email",
        "operationId": "NewRequest_CheckLocationResidentEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentEmail",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/CheckLocationResidentName": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Checks the name of the location resident.",
        "operationId": "NewRequest_CheckLocationResidentName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentName",
            "in": "body",
            "description": "Name of the resident.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/CreateLocationResident": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Create the location resident.",
        "operationId": "NewRequest_CreateLocationResident",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "description": "The vm.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
            }
          }
        }
      }
    },
    "/NewRequest/GetResidentInfo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the resident information.",
        "operationId": "NewRequest_GetResidentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentId",
            "in": "body",
            "description": "The resident identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
            }
          }
        }
      }
    },
    "/NewRequest/GetDefaultResidentInfo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get default resident info",
        "operationId": "NewRequest_GetDefaultResidentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Location.LocationResidentialViewModel"
            }
          }
        }
      }
    },
    "/NewRequest/GetResidentList": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get resident list",
        "operationId": "NewRequest_GetResidentList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/NewRequest/Commit": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "create wo",
        "operationId": "NewRequest_Commit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "wo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          },
          {
            "name": "contact",
            "in": "body",
            "description": "contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoContactEntity"
            }
          },
          {
            "name": "commonAnswer",
            "in": "body",
            "description": "commonAnswer",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "serviceCodeAnswer",
            "in": "body",
            "description": "serviceCodeAnswer",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "attachments",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "isCancel",
            "in": "body",
            "description": "isCancel",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isClientPopTips",
            "in": "body",
            "description": "isClientPopTips",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autoScheduleModel",
            "in": "body",
            "description": "autoScheduleModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.WoCreateViewModel"
            }
          }
        }
      }
    },
    "/NewRequest/PreCreateWo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Pre Create Wo",
        "operationId": "NewRequest_PreCreateWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          },
          {
            "name": "contact",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoContactEntity"
            }
          },
          {
            "name": "commonAnswer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "serviceCodeAnswer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "isCancel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/NewRequest/Location": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets location",
        "operationId": "NewRequest_Location",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.LocationViewModel"
            }
          }
        }
      }
    },
    "/NewRequest/AllPosition": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get all position",
        "operationId": "NewRequest_AllPosition",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataCallerPositionEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/AllServiceCategory": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Alls the service category.",
        "operationId": "NewRequest_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/ServiceCategoryByDepartmentIds": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets service category by departmentIds",
        "operationId": "NewRequest_ServiceCategoryByDepartmentIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "departmentIds",
            "in": "body",
            "description": "departments Id",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/ServiceCategoryByDepartment": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets service category by department",
        "operationId": "NewRequest_ServiceCategoryByDepartment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "departmentId",
            "in": "body",
            "description": "department Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/AllServiceType": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get wo service type",
        "operationId": "NewRequest_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "serviceCategory Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/AllServiceCode": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get wo service code",
        "operationId": "NewRequest_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "serviceType Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.WoServiceCodeViewModel"
              }
            }
          }
        }
      }
    },
    "/NewRequest/CommonQuestion": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get question tree",
        "operationId": "NewRequest_CommonQuestion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/ServiceCodeQuestion": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets wo service code question list",
        "operationId": "NewRequest_ServiceCodeQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "serviceCode Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/AllPriority": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get all priority",
        "operationId": "NewRequest_AllPriority",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/DefaultPriority": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get wo service code",
        "operationId": "NewRequest_DefaultPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "serviceCode Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodePriorityEntity"
            }
          }
        }
      }
    },
    "/NewRequest/serviceCodeWOType": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets wo type by service code",
        "operationId": "NewRequest_serviceCodeWOType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/NewRequest/LocationServiceCategoryWo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets location service category with wo",
        "operationId": "NewRequest_LocationServiceCategoryWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "pager",
            "in": "body",
            "description": "ReactiveWoQueryModel pager",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoEntity]"
            }
          }
        }
      }
    },
    "/NewRequest/Asset": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get location asset list",
        "operationId": "NewRequest_Asset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AssetEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetTimeZoneByZipCode": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get timeZone By zipCode",
        "operationId": "NewRequest_GetTimeZoneByZipCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "zip",
            "in": "body",
            "description": "zip",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/NewRequest/GetMainAreas": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "get main areas",
        "operationId": "NewRequest_GetMainAreas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetSubAreasByAreas": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get sub areas by areas",
        "operationId": "NewRequest_GetSubAreasByAreas",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "areas",
            "in": "body",
            "description": "areas",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetScheduleTime": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the schedule time.",
        "operationId": "NewRequest_GetScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woClientId",
            "in": "body",
            "description": "The wo client identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woServiceCategoryId",
            "in": "body",
            "description": "The wo service category identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "The service code identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "priorityId",
            "in": "body",
            "description": "The priority identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "The service type identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ScheduleTimeResult"
            }
          }
        }
      }
    },
    "/NewRequest/GetWeatherForecastByTime": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get timeZone By zipCode",
        "operationId": "NewRequest_GetWeatherForecastByTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "times",
            "in": "body",
            "description": "times",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WeatherSummary"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetGradeTechnicianIds": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the grade technician ids.",
        "operationId": "NewRequest_GetGradeTechnicianIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "optimal",
            "in": "body",
            "description": "The optimal.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.GradeDTO"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetAvailableScheduleTime": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the available schedule time.",
        "operationId": "NewRequest_GetAvailableScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "optimal",
            "in": "body",
            "description": "The optimal.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.AvailableScheduleDTO"
            }
          }
        }
      }
    },
    "/NewRequest/GetAvailableScheduleTimeV3": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the available schedule time v3.",
        "operationId": "NewRequest_GetAvailableScheduleTimeV3",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "optimal",
            "in": "body",
            "description": "The optimal.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.AvailableScheduleV3DTO"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetWoType": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the type of the wo.",
        "operationId": "NewRequest_GetWoType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "The service code identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "commonAnswer",
            "in": "body",
            "description": "The common answer.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
            }
          }
        }
      }
    },
    "/NewRequest/IsAutoScheduleRegion": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Is auto schedule region",
        "operationId": "NewRequest_IsAutoScheduleRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/GetExcludedServiceCategoryIds": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get excluded serviceCategory ids",
        "operationId": "NewRequest_GetExcludedServiceCategoryIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientLocationServiceCategoryDisableQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetFuture24hoursMaxApparentTempInfo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Gets the future24hours maximum apparent temporary information.",
        "operationId": "NewRequest_GetFuture24hoursMaxApparentTempInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "description": "The client identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "The location identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Future24HoursMaxApparentTempModel"
            }
          }
        }
      }
    },
    "/NewRequest/HasActiveLocation": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Has Active Location",
        "operationId": "NewRequest_HasActiveLocation",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/NewWo": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "operationId": "NewRequest_NewWo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/NewRequest/GetLocationList": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Location List",
        "operationId": "NewRequest_GetLocationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.HouseOwner.Models.LocationAddressViewModel"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetServiceCategoryList": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Service Category List",
        "operationId": "NewRequest_GetServiceCategoryList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetServiceTypeList": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Service Type List",
        "operationId": "NewRequest_GetServiceTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetServiceCodeList": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Service Code List",
        "operationId": "NewRequest_GetServiceCodeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetCommonQuestion": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Common Question",
        "operationId": "NewRequest_GetCommonQuestion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetServiceCodeQuestion": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Service Code Question",
        "operationId": "NewRequest_GetServiceCodeQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/NewRequest/GetGateCode": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Gate Code",
        "operationId": "NewRequest_GetGateCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/NewRequest/GetIsAcceptNte": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Is Accept Nte",
        "operationId": "NewRequest_GetIsAcceptNte",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/NewRequest/GetScheduleLocationTime": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "summary": "Get Schedule Location Time",
        "operationId": "NewRequest_GetScheduleLocationTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleStartTime",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "scheduleEndTime",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        }
      }
    },
    "/NewRequest/TermsAndConditions": {
      "post": {
        "tags": [
          "NewRequest"
        ],
        "operationId": "NewRequest_TermsAndConditions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/NtePackage/Index": {
      "post": {
        "tags": [
          "NtePackage"
        ],
        "operationId": "NtePackage_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/NtePackage/GetServiceCodeNteList": {
      "post": {
        "tags": [
          "NtePackage"
        ],
        "operationId": "NtePackage_GetServiceCodeNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/NtePackage/GetIsOptIn": {
      "post": {
        "tags": [
          "NtePackage"
        ],
        "operationId": "NtePackage_GetIsOptIn",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/NtePackage/AcceptOrDeclineStandardNte": {
      "post": {
        "tags": [
          "NtePackage"
        ],
        "operationId": "NtePackage_AcceptOrDeclineStandardNte",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isAccept",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/OpenWoMap/Map": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_Map",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/OpenWoMap/GetHeatMap": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_GetHeatMap",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/OpenWoMap/GetOpenWoList": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_GetOpenWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/OpenWoMap/GetWoInfo": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_GetWoInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/OpenWoMap/GetRecurrentWoInfo": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_GetRecurrentWoInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/OpenWoMap/GetAllListData": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_GetAllListData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/OpenWoMap/AllServiceCodes": {
      "post": {
        "tags": [
          "OpenWoMap"
        ],
        "operationId": "OpenWoMap_AllServiceCodes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Pcda/SetApproveInHouseDispatch": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "summary": "save approve in house dispatch",
        "operationId": "Pcda_SetApproveInHouseDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Pcda/SetDeclineDispatch": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_SetDeclineDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Pcda/SetApproveSmsAffiliateDispatch": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_SetApproveSmsAffiliateDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaCurrentlyPendingCount": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "summary": "Get pcda currently pending count",
        "operationId": "Pcda_GetPcdaCurrentlyPendingCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaCurrentlyPendingList": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "summary": "Get pcda currently pending list",
        "operationId": "Pcda_GetPcdaCurrentlyPendingList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ReactiveWoQueryModel query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPcdaCurrentlyPendingModel]"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaPastPcdaDecisionsList": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_GetPcdaPastPcdaDecisionsList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaCurrentlyPendingExport": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_GetPcdaCurrentlyPendingExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaPastPcdaDecisionsExport": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_GetPcdaPastPcdaDecisionsExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Pcda/GetPcdaCurrentlyPendingExcelBySendEmail": {
      "post": {
        "tags": [
          "Pcda"
        ],
        "operationId": "Pcda_GetPcdaCurrentlyPendingExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingDispatch/Index": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/PendingDispatch/IsShowMenu": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_IsShowMenu",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingDispatch/PendingDispatchApprovalList": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_PendingDispatchApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingDispatch/SetPendingDispatchDecline": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_SetPendingDispatchDecline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subReason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingDispatch/SetPendingDispatchApprove": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_SetPendingDispatchApprove",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingDispatch/Detail": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/PendingDispatch/GetWoDetail": {
      "post": {
        "tags": [
          "PendingDispatch"
        ],
        "operationId": "PendingDispatch_GetWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PendingProposal/Index": {
      "post": {
        "tags": [
          "PendingProposal"
        ],
        "operationId": "PendingProposal_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/PendingProposal/PendingProposalApprovalList": {
      "post": {
        "tags": [
          "PendingProposal"
        ],
        "operationId": "PendingProposal_PendingProposalApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Report.RentersWareHouseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PermissionApi/GetMenus": {
      "post": {
        "tags": [
          "PermissionApi"
        ],
        "operationId": "PermissionApi_GetMenus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/PermissionApi/GetUserPermissionResourceList": {
      "post": {
        "tags": [
          "PermissionApi"
        ],
        "operationId": "PermissionApi_GetUserPermissionResourceList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.PermissionApiRepo.UserPermissionResourceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/GetWoType": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_GetWoType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woNum",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/UpdateComments": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_UpdateComments",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Photo/Gallery": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_Gallery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/Gallerys": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_Gallerys",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/GalleryDetail": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_GalleryDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/PhotosGallery": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_PhotosGallery",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Photo/AllServiceCategory": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/PhotosGalleryByWo": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_PhotosGalleryByWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Photo/AttachmentsPhotoConfirmSecondaryList": {
      "post": {
        "tags": [
          "Photo"
        ],
        "operationId": "Photo_AttachmentsPhotoConfirmSecondaryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referenceType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/PrintPDF/Index": {
      "post": {
        "tags": [
          "PrintPDF"
        ],
        "operationId": "PrintPDF_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ProCare/Index": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "operationId": "ProCare_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ProCare/Details": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "operationId": "ProCare_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ProCare/GetABModuleResouce": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get has ABModule by procare id",
        "operationId": "ProCare_GetABModuleResouce",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procareId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ProCare/AutoScheduleV3ForProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "operationId": "ProCare_AutoScheduleV3ForProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ProCare/List": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get Procare List",
        "operationId": "ProCare_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ProjectQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ProCareViewModel]"
            }
          }
        }
      }
    },
    "/ProCare/ExportProCareProjectsByServer": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "export procare projects by server",
        "operationId": "ProCare_ExportProCareProjectsByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "project query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ProCare/ExportProCareProjectsBySendEmail": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "export procare projects by send email",
        "operationId": "ProCare_ExportProCareProjectsBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "project query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ProCare/AllCommunity": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get All Community,Cache 300s",
        "operationId": "ProCare_AllCommunity",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ProCare/ProCareDetail": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "procare detail info",
        "operationId": "ProCare_ProCareDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procare id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.ProcareViewModel"
            }
          }
        }
      }
    },
    "/ProCare/SetAtRisk": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "set procare at risk lable",
        "operationId": "ProCare_SetAtRisk",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procare id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAtRisk",
            "in": "body",
            "description": "is at risk",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ProCare/SetLockedTechnician": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Set Locked Technician",
        "operationId": "ProCare_SetLockedTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procare Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLocked",
            "in": "body",
            "description": "isLocked",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ProCare/CanChangeTechnician": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Can change Technician",
        "operationId": "ProCare_CanChangeTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procare Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ProCare/CanScheduleTime": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Can Schedule Time",
        "operationId": "ProCare_CanScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procareId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianWorkingHoursEntity"
            }
          }
        }
      }
    },
    "/ProCare/AllServiceCategory": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get AllServiceCategory",
        "operationId": "ProCare_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
            }
          }
        }
      }
    },
    "/ProCare/AllServiceType": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get service types by serviceCategoryIds",
        "operationId": "ProCare_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryIds",
            "in": "body",
            "description": "serviceCategoryIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
            }
          }
        }
      }
    },
    "/ProCare/AllServiceCode": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get service codes by serviceTypeIds",
        "operationId": "ProCare_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeIds",
            "in": "body",
            "description": "serviceTypeIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
            }
          }
        }
      }
    },
    "/ProCare/GetWorkOrderList": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "GetWorkOrderList",
        "operationId": "ProCare_GetWorkOrderList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "ProjectReactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Procare.ReactiveWoIndexListViewModel]"
            }
          }
        }
      }
    },
    "/ProCare/ResidentialInfo": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get residential info",
        "operationId": "ProCare_ResidentialInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "location residential query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Location.LocationResidentialListViewModel"
            }
          }
        }
      }
    },
    "/ProCare/GetLocationAttributes": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get location attributes",
        "operationId": "ProCare_GetLocationAttributes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.LocationAttributesViewModel"
            }
          }
        }
      }
    },
    "/ProCare/UpdateProCareWO": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "UpdateProCareWO",
        "operationId": "ProCare_UpdateProCareWO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technician",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectTypeId",
            "in": "body",
            "description": "projectTypeId Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleStartTime",
            "in": "body",
            "description": "scheduleStartTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "scheduleEndTime",
            "in": "body",
            "description": "scheduleEndTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "isNullTechnician",
            "in": "body",
            "description": "isNullTechnician",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isReschedule",
            "in": "body",
            "description": "isReschedule",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autoscheduleModel",
            "in": "body",
            "description": "autoscheduleModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/UpdateProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Update procare",
        "operationId": "ProCare_UpdateProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "updateProCareInput",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.UpdateProCareInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/UpdateProCareStatus": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "update procare status",
        "operationId": "ProCare_UpdateProCareStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proCareId",
            "in": "body",
            "description": "procare Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelReason",
            "in": "body",
            "description": "cancel reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/CancelProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "cancel procare",
        "operationId": "ProCare_CancelProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proCareId",
            "in": "body",
            "description": "procare Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "cancelReason",
            "in": "body",
            "description": "cancel reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/UpdateSubtaskStatus": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "UpdateSubtaskStatus",
        "operationId": "ProCare_UpdateSubtaskStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "description": "task Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/GetPredictService": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get recommendation's service combination list by key",
        "operationId": "ProCare_GetPredictService",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.PredictServiceViewModel"
            }
          }
        }
      }
    },
    "/ProCare/CreateSubTask": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "create subTask",
        "operationId": "ProCare_CreateSubTask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service code id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "additionalDetail",
            "in": "body",
            "description": "additional detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "attachments",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "scheduleResult",
            "in": "body",
            "description": "schedule result",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Procare.SubTaskCreatedOutput"
            }
          }
        }
      }
    },
    "/ProCare/IsCanScheduleSubTask": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "is can schedule subTask",
        "operationId": "ProCare_IsCanScheduleSubTask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "servcie code id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "proCareId",
            "in": "body",
            "description": "procare id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitIsCanScheduleSubTaskResult"
            }
          }
        }
      }
    },
    "/ProCare/CreateWo": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "create wo by project task",
        "operationId": "ProCare_CreateWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "project task entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoscheduleModel",
            "in": "body",
            "description": "schedule result",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/EventLogs": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get procare event log",
        "operationId": "ProCare_EventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareId",
            "in": "body",
            "description": "procare id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.EventLogEntity"
            }
          }
        }
      }
    },
    "/ProCare/GetScheduleTime": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get Scheduled and Otimization Procare recommend technicians by v3",
        "operationId": "ProCare_GetScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "startTime",
            "in": "body",
            "description": "recommended start time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woClientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "projectId",
            "in": "body",
            "description": "procare Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "reSchedule",
            "in": "body",
            "description": "is reSchedule,false is default",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
              }
            }
          }
        }
      }
    },
    "/ProCare/CreateProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "create a procare",
        "operationId": "ProCare_CreateProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "procare model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProCareModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ProCare/GetProjectCountByLocationId": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "get project count by locationId",
        "operationId": "ProCare_GetProjectCountByLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/ProCare/GetProCareSupportBundleTypeByLocationId": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Get ProCare SupportBundleType By LocationId",
        "operationId": "ProCare_GetProCareSupportBundleTypeByLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          }
        }
      }
    },
    "/ProCare/ExistProCareScheduleWithin60DayByLocationId": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Is there a procare in this location that has been scheduled within 60 days",
        "operationId": "ProCare_ExistProCareScheduleWithin60DayByLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ProCare/ExistProCareDueDateWithin60DayByLocationId": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Is there a procare in this location that has been due date within 60 days",
        "operationId": "ProCare_ExistProCareDueDateWithin60DayByLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ProCare/CanUnscheduledProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "Can Unscheduled ProCare",
        "operationId": "ProCare_CanUnscheduledProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proCareId",
            "in": "body",
            "description": "proCareId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ProCare/UnscheduledProCare": {
      "post": {
        "tags": [
          "ProCare"
        ],
        "summary": "procare cancel scheduled",
        "operationId": "ProCare_UnscheduledProCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proCareId",
            "in": "body",
            "description": "procare id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Profile/GetProfile": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Profile",
        "operationId": "Profile_GetProfile",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "ProfileReferenceType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          },
          {
            "name": "refId",
            "in": "body",
            "description": "ref Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.WoProfileViewModel"
            }
          }
        }
      }
    },
    "/Profile/GetOpenWosCount": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get openWos wos count",
        "operationId": "Profile_GetOpenWosCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refType",
            "in": "body",
            "description": "ProfileReferenceType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isSnow",
            "in": "body",
            "description": "is Snow",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Profile/GetOpenWosSummaryData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get openWos summary data",
        "operationId": "Profile_GetOpenWosSummaryData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "ProfileReferenceType",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveOpenWosSummaryViewModel"
            }
          }
        }
      }
    },
    "/Profile/GetReactiveOpenWosWoListData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get reactive openWos woList data",
        "operationId": "Profile_GetReactiveOpenWosWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "reactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel]"
            }
          }
        }
      }
    },
    "/Profile/GetRecurrentOpenWosWoListData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Recurrent Open Wo List Data",
        "operationId": "Profile_GetRecurrentOpenWosWoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "reactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.RecurrentWoQueryModel]"
            }
          }
        }
      }
    },
    "/Profile/GetReactiveOpenWosHistoryListData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get reactive openWos history list data",
        "operationId": "Profile_GetReactiveOpenWosHistoryListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "reactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel]"
            }
          }
        }
      }
    },
    "/Profile/GetReccurentOpenWosHistoryListData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Reccurent Open Wos History List Data",
        "operationId": "Profile_GetReccurentOpenWosHistoryListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "reactiveWoQueryModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.RecurrentWoQueryModel]"
            }
          }
        }
      }
    },
    "/Profile/GetWoResidentAndCallerContact": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Wo Residen tAnd Caller Contact",
        "operationId": "Profile_GetWoResidentAndCallerContact",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentContactInfoQuery",
            "in": "body",
            "description": "ResidentContactInfoQuery",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentContactInfoQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WoContactInfoEntity"
              }
            }
          }
        }
      }
    },
    "/Profile/GetPrimaryResidentAndCallerContactInfo": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Wo Primary Resident And Caller Contact",
        "operationId": "Profile_GetPrimaryResidentAndCallerContactInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ContactModel"
            }
          }
        }
      }
    },
    "/Profile/GetWoCallerContact": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Wo Caller Contact",
        "operationId": "Profile_GetWoCallerContact",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoContactInfoEntity"
            }
          }
        }
      }
    },
    "/Project/Index": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Index",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Project/GetProjectIndexList": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetProjectIndexList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTurnRehabCapitalIndexList": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTurnRehabCapitalIndexList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/IsHasTrpABSetting": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Determine if it has trp ab module",
        "operationId": "Project_IsHasTrpABSetting",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/CheckProjectId": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_CheckProjectId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/Project/Dashboard": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Dashboard",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTaskByStatus": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTaskByStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetPhotoGallery": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetPhotoGallery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetPhotoGalleryDetail": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetPhotoGalleryDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetProjectInfo": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetProjectInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/UpdateClientAssignee": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_UpdateClientAssignee",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientAssigneeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetLocationInfo": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetLocationInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTaskCountGroupByDataRange": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTaskCountGroupByDataRange",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "today",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetselectFilterDayTodoList": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetselectFilterDayTodoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "today",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "range",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetOverDueList": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetOverDueList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetChangeOrders": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetChangeOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/RejectOutOfScopeTask": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_RejectOutOfScopeTask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "subTaskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/ApprovalOutOfScopeTask": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_ApprovalOutOfScopeTask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "subTaskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTaskDetail": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTaskDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetConfirm": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/UpdateConfirm": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_UpdateConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/CreateConfirm": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_CreateConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/WOList": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_WOList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectTypeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/WoListData": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_WoListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetWOCount": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetWOCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/Gantt": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Gantt",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectTypeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTasks": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTasks",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetGanttChartTasks": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetGanttChartTasks",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetGanttChartData": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetGanttChartData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/GetTask": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_GetTask",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Project/UpdateProjectDetail": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_UpdateProjectDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patchModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectForClientPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ProjectAnswerBatchApi/GetAnswerSubmitDate": {
      "post": {
        "tags": [
          "ProjectAnswerBatchApi"
        ],
        "operationId": "ProjectAnswerBatchApi_GetAnswerSubmitDate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ProjectAnswerBatchApiController.ProjectAnswerBatchQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/ProjectLocationApi/GetCommunity": {
      "post": {
        "tags": [
          "ProjectLocationApi"
        ],
        "operationId": "ProjectLocationApi_GetCommunity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.IdName"
              }
            }
          }
        }
      }
    },
    "/ProjectLocationApi/GetDistrict": {
      "post": {
        "tags": [
          "ProjectLocationApi"
        ],
        "operationId": "ProjectLocationApi_GetDistrict",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.IdName"
              }
            }
          }
        }
      }
    },
    "/ProjectLocationApi/GetTechnician": {
      "post": {
        "tags": [
          "ProjectLocationApi"
        ],
        "operationId": "ProjectLocationApi_GetTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ProjectLocationApiController.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ProjectLocationApi/GetSummaryData": {
      "post": {
        "tags": [
          "ProjectLocationApi"
        ],
        "operationId": "ProjectLocationApi_GetSummaryData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ProjectLocationApiController.SurveyProjectLocationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ProjectLocationApiController.SurveyDetailViewModel"
            }
          }
        }
      }
    },
    "/Property/Details": {
      "post": {
        "tags": [
          "Property"
        ],
        "operationId": "Property_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Property/DetailsNewVersion": {
      "post": {
        "tags": [
          "Property"
        ],
        "operationId": "Property_DetailsNewVersion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Property/ResidentialInfo": {
      "post": {
        "tags": [
          "Property"
        ],
        "operationId": "Property_ResidentialInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Property/GetAllResidentialInfo": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get All Residential Info",
        "operationId": "Property_GetAllResidentialInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.Property.PropertyDetailViewModel"
            }
          }
        }
      }
    },
    "/Property/UpdateSMSAlert": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update SMS Alert",
        "operationId": "Property_UpdateSMSAlert",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReceiveSMSAlert",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Property/UpdateMaintenanceHold": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update Maintenance Hold",
        "operationId": "Property_UpdateMaintenanceHold",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isMaintenanceHold",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Property/UpdateLocationAttributeMaintenanceHold": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update Location Attribute Maintenance Hold",
        "operationId": "Property_UpdateLocationAttributeMaintenanceHold",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maintenanceHoldId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Property/GetSurveyList": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Survey List",
        "operationId": "Property_GetSurveyList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.Property.SurveyListViewModel"
              }
            }
          }
        }
      }
    },
    "/Property/GetSurveyHistory": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Survey History",
        "operationId": "Property_GetSurveyHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "loadMore",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SugarModel.Entity.V_SurverySummaryEntity"
            }
          }
        }
      }
    },
    "/Property/GetProcareProject": {
      "post": {
        "tags": [
          "Property"
        ],
        "operationId": "Property_GetProcareProject",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Property/GetLocationResidentArray": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Location Resident Array",
        "operationId": "Property_GetLocationResidentArray",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.Property.LocationResidentViewModel"
                }
              }
            }
          }
        }
      }
    },
    "/Property/GetResidentInfo": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get resident info by resident id",
        "operationId": "Property_GetResidentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Location.Residential.ResidentViewModel"
            }
          }
        }
      }
    },
    "/Property/UpdateResidentInfo": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update resident contact info",
        "operationId": "Property_UpdateResidentInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "residentId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resident",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Location.Residential.ResidentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Property/Index": {
      "post": {
        "tags": [
          "Property"
        ],
        "operationId": "Property_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Property/IndexList": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Property List",
        "operationId": "Property_IndexList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyStatuses",
            "in": "body",
            "description": "property Statuses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[Moon.Web.Client.Areas.Residential.Models.Property.PropertyIndexViewModel]"
            }
          }
        }
      }
    },
    "/Property/ExportExcel": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Export Property list Excel",
        "operationId": "Property_ExportExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyStatuses",
            "in": "body",
            "description": "property Statuses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Property/ExportExcelBySendEmail": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Export Property list Excel And Send Email",
        "operationId": "Property_ExportExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyStatuses",
            "in": "body",
            "description": "property Statuses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Property/ExportAssetExcel": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Export Asset Excel",
        "operationId": "Property_ExportAssetExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Residential Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyStatuses",
            "in": "body",
            "description": "property Statuses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Property/GetExportAssetExcelCount": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Export Asset Count Excel",
        "operationId": "Property_GetExportAssetExcelCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Residential Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "propertyStatuses",
            "in": "body",
            "description": "property Statuses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Property/ExportAssetExcelBySendEmail": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Export Asset Excel and SendEmail",
        "operationId": "Property_ExportAssetExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Residential Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationResidentialQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseOwnerPhone",
            "in": "body",
            "description": "house Owner Phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Property/RShopEdit": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Redirect To Action",
        "operationId": "Property_RShopEdit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "propertyId",
            "in": "body",
            "description": "property Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.RedirectToRouteResult"
            }
          }
        }
      }
    },
    "/Property/AllOwnership": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "All Owner ship",
        "operationId": "Property_AllOwnership",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Property/GetHouseOwnerInformation": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get House Owner Information",
        "operationId": "Property_GetHouseOwnerInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "District",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerInformationViewModel"
            }
          }
        }
      }
    },
    "/Property/UpdateHouseOwnerInformation": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update House Owner Information",
        "operationId": "Property_UpdateHouseOwnerInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "vm",
            "in": "body",
            "description": "House Owner Information View Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerInformationViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Property/GetHouseOwnerNteOptDateList": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get House Owner Nte List",
        "operationId": "Property_GetHouseOwnerNteOptDateList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "description": "Client Service Code Nte Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerNteOptModel"
              }
            }
          }
        }
      }
    },
    "/Property/UpdateAcceptOrDeclineStandardNTE": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Update Accept Or Decline Standard NTE",
        "operationId": "Property_UpdateAcceptOrDeclineStandardNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "Service Category User Mapping Query Model List",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceCategoryUserMappingQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Property/GetPropertyTimeline": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "",
        "operationId": "Property_GetPropertyTimeline",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Time Line Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationTimeLineQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.LocationTimeLineReportViewModel"
              }
            }
          }
        }
      }
    },
    "/Property/GetPagedEventLogs": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Paged Event Logs",
        "operationId": "Property_GetPagedEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "description": "ref Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "body",
            "description": "business Unit Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EventLogEntity"
              }
            }
          }
        }
      }
    },
    "/Property/GetLoationPlanList": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Loation Plan List",
        "operationId": "Property_GetLoationPlanList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Plan Item Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationPlanItemQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.PlanItemModel]"
            }
          }
        }
      }
    },
    "/Property/GetSurveyHistoryList": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Survey History List",
        "operationId": "Property_GetSurveyHistoryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyProjectHistoryListModel"
              }
            }
          }
        }
      }
    },
    "/Property/GetCategoryExpenseListsForReactive": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Category Expense Lists For Reactive",
        "operationId": "Property_GetCategoryExpenseListsForReactive",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ReactiveWoExpenseEntity"
              }
            }
          }
        }
      }
    },
    "/Property/GetCategoryExpenseListsForRecrrent": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Category Expense Lists For Recrrent",
        "operationId": "Property_GetCategoryExpenseListsForRecrrent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.RecurrentWoExpenseEntity"
              }
            }
          }
        }
      }
    },
    "/Property/GetPhotoGallery": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Photo Gallery",
        "operationId": "Property_GetPhotoGallery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "body",
            "description": "page",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WoPhotoGalleryViewModel"
              }
            }
          }
        }
      }
    },
    "/Property/GetPhotoGalleryWoCountByLocationIdForClient": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Photo Gallery Wo Count By Location Id",
        "operationId": "Property_GetPhotoGalleryWoCountByLocationIdForClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/Property/GetPropertyTimelineGroup": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Get Property Time line Group",
        "operationId": "Property_GetPropertyTimelineGroup",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Location Time Line Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationTimeLineQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.LocationTimeLineGroupReportViewModel"
              }
            }
          }
        }
      }
    },
    "/Proposal/Index": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "operationId": "Proposal_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Proposal/GetClientProposal": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "operationId": "Proposal_GetClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Proposal/PreApproveProposal": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "operationId": "Proposal_PreApproveProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Proposal/Detail": {
      "post": {
        "tags": [
          "Proposal"
        ],
        "operationId": "Proposal_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetSummaryData": {
      "get": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetSummaryData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetlocationPartList": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetlocationPartList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationAssetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetLocationAssetList": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetLocationAssetList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetResidentCellPhone": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetResidentCellPhone",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[M2.Entity.LocationResidentialEntity]"
            }
          }
        }
      }
    },
    "/RadApi/GetIndexData": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWOQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RequestWOListModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetIndexDataCount": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetIndexDataCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWOQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RequestWOListModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetOriginalWo": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetOriginalWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetRequestNum": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetRequestNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetRequestAffiliateDispatchList": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetRequestAffiliateDispatchList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWOQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RequestWOListModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/RadApi/GetRequestAffiliateDispatchCount": {
      "post": {
        "tags": [
          "RadApi"
        ],
        "operationId": "RadApi_GetRequestAffiliateDispatchCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWOQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RequestWOListModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Rating/RatingWoAnonymous": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Get work orders for anonymous",
        "operationId": "Rating_RatingWoAnonymous",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Rating/RatingWoByEmail": {
      "post": {
        "tags": [
          "Rating"
        ],
        "operationId": "Rating_RatingWoByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Rating/RatingSuccess": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Ratings the success.",
        "operationId": "Rating_RatingSuccess",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Rating/RatingFail": {
      "post": {
        "tags": [
          "Rating"
        ],
        "operationId": "Rating_RatingFail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Rating/Detail": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets wo detail",
        "operationId": "Rating_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.StoreManager.Models.WoDetailRatingViewModel"
            }
          }
        }
      }
    },
    "/Rating/WoDateilRating": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Woes the dateil rating.",
        "operationId": "Rating_WoDateilRating",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "The type.",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Areas.StoreManager.Models.ReactiveWoModel"
            }
          }
        }
      }
    },
    "/Rating/UpdateRecommendation": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Updates the recommendation.",
        "operationId": "Rating_UpdateRecommendation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rating",
            "in": "body",
            "description": "The rating.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "The is reactive.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recommendationComments",
            "in": "body",
            "description": "The recommendation comments.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Rating/NotCompleted": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Nots the completed.",
        "operationId": "Rating_NotCompleted",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRecurrent",
            "in": "body",
            "description": "if set to true [is recurrent].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "msgText",
            "in": "body",
            "description": "The MSG text.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Rating/CanConfirmRateByEmail": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Determines whether this instance [can confirm rate by email] the specified model.",
        "operationId": "Rating_CanConfirmRateByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoCompleteRateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ConfirmRateStatusModel"
            }
          }
        }
      }
    },
    "/Rating/GetConfirm": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets a recurrent confirmed wo",
        "operationId": "Rating_GetConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRecurrent",
            "in": "body",
            "description": "is recurrent",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/Rating/AReactiveWoRatingResult": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets a rating result with reactive wo",
        "operationId": "Rating_AReactiveWoRatingResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confirmEntity",
            "in": "body",
            "description": "confirmEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          },
          {
            "name": "recommendationRating",
            "in": "body",
            "description": "recommendation rating",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "recommendationComments",
            "in": "body",
            "description": "recommendation comments",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Rating/CompleteRateByEmail": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Completes the rate by email.",
        "operationId": "Rating_CompleteRateByEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "confirmEntity",
            "in": "body",
            "description": "The confirm entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Rating/GetSocialMedia": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets the social media.",
        "operationId": "Rating_GetSocialMedia",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "The type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "body",
            "description": "The region.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "The token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SocialMediaPagesEntity"
            }
          }
        }
      }
    },
    "/Rating/SaveSocialMediaClickLog": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Saves the social media click log.",
        "operationId": "Rating_SaveSocialMediaClickLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Region",
            "in": "body",
            "description": "The region.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SocialMedia",
            "in": "body",
            "description": "The social media.",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4
              ],
              "type": "integer"
            }
          },
          {
            "name": "LinkUrl",
            "in": "body",
            "description": "The link URL.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ConfirmEmail",
            "in": "body",
            "description": "The confirm email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.EmptyResult"
            }
          }
        }
      }
    },
    "/Rating/GetTrustpilotRedirectURL": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets the trustpilot redirect URL.",
        "operationId": "Rating_GetTrustpilotRedirectURL",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "The wo identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "body",
            "description": "The type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "body",
            "description": "The token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Rating/GetConfirmOnSiteRateReasonList": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets the confirm on site rate reason list.",
        "operationId": "Rating_GetConfirmOnSiteRateReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "The wo department identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "if set to true [is reactive].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/Rating/GetConfirmContactCenterRateReasonList": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets the confirm contact center rate reason list.",
        "operationId": "Rating_GetConfirmContactCenterRateReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "The wo department identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "if set to true [is reactive].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/Rating/GetConfirmWoNotCompletedReasonList": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Gets the confirm wo not completed reason list.",
        "operationId": "Rating_GetConfirmWoNotCompletedReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woDepartmentId",
            "in": "body",
            "description": "The wo department identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isReactive",
            "in": "body",
            "description": "if set to true [is reactive].",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Index": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "operationId": "ReactiveScheduleCalendar_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/ToAbmoduleView": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "operationId": "ReactiveScheduleCalendar_ToAbmoduleView",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/List": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "operationId": "ReactiveScheduleCalendar_List",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Map": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "operationId": "ReactiveScheduleCalendar_Map",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Technician": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "operationId": "ReactiveScheduleCalendar_Technician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/WorkingHoursData": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Working Hours Data",
        "operationId": "ReactiveScheduleCalendar_WorkingHoursData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WorkingHoursEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/NonWorkingDaysData": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Non Working Days Data",
        "operationId": "ReactiveScheduleCalendar_NonWorkingDaysData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "start",
            "in": "body",
            "description": "Non Working Start Day",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "description": "Non Working End Day",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.NonWorkingDayEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/AllScheduledWos": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get All Scheduled Wos",
        "operationId": "ReactiveScheduleCalendar_AllScheduledWos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.CalendarScheduledWOViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/GetAllScheduleWos": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get All Schedule Wos",
        "operationId": "ReactiveScheduleCalendar_GetAllScheduleWos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.CalendarScheduledWOViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/UnscheduledList": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Unscheduled List",
        "operationId": "ReactiveScheduleCalendar_UnscheduledList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.ReactiveWoEntity]"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/TechnicianWoCount": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Technician Wo Count",
        "operationId": "ReactiveScheduleCalendar_TechnicianWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/M2.Entity.TechnicianCalendarCountModel"
                }
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Schedule": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Schedule Wo",
        "operationId": "ReactiveScheduleCalendar_Schedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "body",
            "description": "region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleFrom",
            "in": "body",
            "description": "schedule From",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "scheduleTo",
            "in": "body",
            "description": "schedule To",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAutoSchedule",
            "in": "body",
            "description": "is AutoSchedule",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autoscheduleModel",
            "in": "body",
            "description": "Schedule Result",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Reschedule": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Reschedule Wo",
        "operationId": "ReactiveScheduleCalendar_Reschedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleStart",
            "in": "body",
            "description": "schedule Start",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "scheduleEnd",
            "in": "body",
            "description": "schedule End",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technician",
            "in": "body",
            "description": "technician",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromCalendar",
            "in": "body",
            "description": "from Calendar",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isAutoSchedule",
            "in": "body",
            "description": "is Auto Schedule",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "autoscheduleModel",
            "in": "body",
            "description": "Schedule Result",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/AllReason": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "All Reason",
        "operationId": "ReactiveScheduleCalendar_AllReason",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataUserScheduleReasonEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/TechnicianSchedule": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Technician Schedule",
        "operationId": "ReactiveScheduleCalendar_TechnicianSchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/WoRouteDaySchedule": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Wo Route Day Schedule",
        "operationId": "ReactiveScheduleCalendar_WoRouteDaySchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "body",
            "description": "Begin Schedule Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WoScheduleEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/WoRouteDayScheduleAllTech": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Wo Route Day Schedule All Tech",
        "operationId": "ReactiveScheduleCalendar_WoRouteDayScheduleAllTech",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "date",
            "in": "body",
            "description": "Begin Schedule Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WoScheduleEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/WoRouteDayScheduleMultipleTech": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Wo Route Day Schedule Multiple Tech",
        "operationId": "ReactiveScheduleCalendar_WoRouteDayScheduleMultipleTech",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "date",
            "in": "body",
            "description": "Begin Schedule Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "technicianIds",
            "in": "body",
            "description": "technician Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WoScheduleEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/GetTechnicianHandledWoCount": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Technician Handled Wo Count",
        "operationId": "ReactiveScheduleCalendar_GetTechnicianHandledWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "Technician Handled Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TechnicianHandledWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.TechnicianHandledWoResultModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/UpdateWoRouteDaySchedule": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Update Wo Route Day Schedule",
        "operationId": "ReactiveScheduleCalendar_UpdateWoRouteDaySchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "wo schedule id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoScheduleEntity"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/IsScheduleTimeOverlapped": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Is Schedule Time Overlapped",
        "operationId": "ReactiveScheduleCalendar_IsScheduleTimeOverlapped",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/UserRecurringWoInRange": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "User Recurring Wo In Range",
        "operationId": "ReactiveScheduleCalendar_UserRecurringWoInRange",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.RecurrentWoEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/UserReactiveWoInRange": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "User Reactive Wo In Range",
        "operationId": "ReactiveScheduleCalendar_UserReactiveWoInRange",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/UserBlockInRange": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "User Block In Range",
        "operationId": "ReactiveScheduleCalendar_UserBlockInRange",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "description": "user Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/IsScheduleTimeExistWo": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Is Schedule Time Exist Wo",
        "operationId": "ReactiveScheduleCalendar_IsScheduleTimeExistWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "description": "Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "description": "End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Create": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Create User Schedule Entity",
        "operationId": "ReactiveScheduleCalendar_Create",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "UserSchedule Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Update": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Update User Schedule Entity",
        "operationId": "ReactiveScheduleCalendar_Update",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "User Schedule Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/Delete": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Delete User Schedule Entity",
        "operationId": "ReactiveScheduleCalendar_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "User Schedule Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/AllTechnician": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get All Technician",
        "operationId": "ReactiveScheduleCalendar_AllTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.AffiliateTechnicianInfo"
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/GetWoRescheduleTime": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Get Wo Reschedule Time",
        "operationId": "ReactiveScheduleCalendar_GetWoRescheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woServiceCategoryId",
            "in": "body",
            "description": "wo Service Category Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service Code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "priorityId",
            "in": "body",
            "description": "priority Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.WoDetailPageScheduleResult"
              }
            }
          }
        }
      }
    },
    "/ReactiveScheduleCalendar/IsAutoScheduleRegion": {
      "post": {
        "tags": [
          "ReactiveScheduleCalendar"
        ],
        "summary": "Is Auto Schedule Region",
        "operationId": "ReactiveScheduleCalendar_IsAutoScheduleRegion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportReturnTripNeededWoExcelByServer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Return Trip Needed Wo Excel By Server",
        "operationId": "ReactiveWo_ExportReturnTripNeededWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportReturnTripNeededWoExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Return Trip Needed Wo Excel By Send Email",
        "operationId": "ReactiveWo_ExportReturnTripNeededWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportRetailReactiveWoExcelByServer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Retail Reactive Wo Excel By Server",
        "operationId": "ReactiveWo_ExportRetailReactiveWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportResidentReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Resident Reactive Wo Excel By SendEmail",
        "operationId": "ReactiveWo_ExportResidentReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Residential Report Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/IsDuplicatedExportResidentReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Is Duplicated Export Resident Reactive Wo Excel By Send Email",
        "operationId": "ReactiveWo_IsDuplicatedExportResidentReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Residential Report Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Business.Modules.Export.DuplicatedExportResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportRetailReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Retail Reactive Wo Excel By Send Email",
        "operationId": "ReactiveWo_ExportRetailReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/IsDuplicatedExportRetailReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Is Duplicated Export Retail Reactive Wo Excel By Send Email",
        "operationId": "ReactiveWo_IsDuplicatedExportRetailReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Business.Modules.Export.DuplicatedExportResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWBSNumberList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get WBS Number List",
        "operationId": "ReactiveWo_GetWBSNumberList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.KeyValueModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetDeclineInfoList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Decline Info List",
        "operationId": "ReactiveWo_GetDeclineInfoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.ReactiveWoDeclineInfoViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/RejectProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "reject proposal",
        "operationId": "ReactiveWo_RejectProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "body",
            "description": "item",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.ReactiveWoDeclineInfoViewModel"
              }
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/PreApproveProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Pre Approve Proposal",
        "operationId": "ReactiveWo_PreApproveProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "description": "proposal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "description": "notes",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/History": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_History",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoiceItemHistory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Client Invoice Item History",
        "operationId": "ReactiveWo_ClientInvoiceItemHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "description": "history Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposalItemHistory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Client Proposal Item History",
        "operationId": "ReactiveWo_ClientProposalItemHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "description": "history Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoiceHistoryOne": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Client Invoice History",
        "operationId": "ReactiveWo_ClientInvoiceHistoryOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "description": "history Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposalHistoryOne": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal History",
        "operationId": "ReactiveWo_ClientProposalHistoryOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "description": "history Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientConfirmList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Confirm Log",
        "operationId": "ReactiveWo_ClientConfirmList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ConfirmLogEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ProposalCompare": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ProposalCompare",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ReloadAffiliateProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal",
        "operationId": "ReactiveWo_ReloadAffiliateProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "description": "proposalId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/HeatMap": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_HeatMap",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/PrintPdf": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "print wo message pdf",
        "operationId": "ReactiveWo_PrintPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "msgQuery",
            "in": "body",
            "description": "msg query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.MessageQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.IO.Stream"
            }
          }
        }
      }
    },
    "/ReactiveWo/PrintChargebackPdf": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Print Chargeback Pdf",
        "operationId": "ReactiveWo_PrintChargebackPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateResidentDamage": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Is Resident Damage",
        "operationId": "ReactiveWo_UpdateResidentDamage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "description": "is Resident Damage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateMaintenanceHold": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Maintenance Hold",
        "operationId": "ReactiveWo_UpdateMaintenanceHold",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isMaintenanceHold",
            "in": "body",
            "description": "is Maintenance Hold",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetLandlordInfo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Landlord Info",
        "operationId": "ReactiveWo_GetLandlordInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.WOReactiveAttemptViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateCustomerNTE": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Customer NTE",
        "operationId": "ReactiveWo_UpdateCustomerNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientNTE",
            "in": "body",
            "description": "client NTE",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "description": "notes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateGLCode": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update GLCode",
        "operationId": "ReactiveWo_UpdateGLCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "description": "notes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GLCode",
            "in": "body",
            "description": "GLCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/RemoveRFI": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Remove RFI",
        "operationId": "ReactiveWo_RemoveRFI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetOpenWoStatusAgingStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Open Wo Status Aging Status",
        "operationId": "ReactiveWo_GetOpenWoStatusAgingStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Open Status Aging Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingStatusModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetHouseOwnerStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get House Owner Status",
        "operationId": "ReactiveWo_GetHouseOwnerStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3
              ],
              "type": "integer"
            }
          }
        }
      }
    },
    "/ReactiveWo/DeclineHouseOwnerWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Decline House Owner Wo",
        "operationId": "ReactiveWo_DeclineHouseOwnerWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subReason",
            "in": "body",
            "description": "sub Reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/AcceptWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Accept Wo",
        "operationId": "ReactiveWo_AcceptWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/PendingWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Pending Dispatch Pending Approve",
        "operationId": "ReactiveWo_PendingWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/Reschedule": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Reschedule Wo",
        "operationId": "ReactiveWo_Reschedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rescheduleStart",
            "in": "body",
            "description": "reschedule Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "rescheduleEnd",
            "in": "body",
            "description": "reschedule End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "description": "comments",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWoTechnicians": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo Technicians",
        "operationId": "ReactiveWo_GetWoTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWoHelperTechnicians": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo Helper Technicians",
        "operationId": "ReactiveWo_GetWoHelperTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateWoReactiveTechnicaianHelper": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Wo Reactive Technicaian Helper",
        "operationId": "ReactiveWo_UpdateWoReactiveTechnicaianHelper",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianIds",
            "in": "body",
            "description": "technician Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateTechnician": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Technician",
        "operationId": "ReactiveWo_UpdateTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/TechnicianWoCount": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Technician Wo Count",
        "operationId": "ReactiveWo_TechnicianWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.TechnicianCalendarCountModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ChangeWOTypeForNoResidentialClient": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Change WO Type For No Residential Client",
        "operationId": "ReactiveWo_ChangeWOTypeForNoResidentialClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureWOTypeId",
            "in": "body",
            "description": "future WO Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                22,
                51,
                53
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoDeferredToPendingSchedule": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Wo Deferred To Pending Schedule",
        "operationId": "ReactiveWo_WoDeferredToPendingSchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateDetail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Wo",
        "operationId": "ReactiveWo_UpdateDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "key",
            "in": "body",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "body",
            "description": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GLCodeReasonId",
            "in": "body",
            "description": "GLCode Reason Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "isChangeNTE",
            "in": "body",
            "description": "is Change NTE",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateWBSNumberWithPOStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update WBS Number With PO Status",
        "operationId": "ReactiveWo_UpdateWBSNumberWithPOStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wbsNumber",
            "in": "body",
            "description": "wbs Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.GLcodeInfo"
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get affiliate proposal by wo id",
        "operationId": "ReactiveWo_AffiliateProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateProposalItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal Item List",
        "operationId": "ReactiveWo_AffiliateProposalItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "Proposal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateProposalAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Affiliate Proposal Attachment",
        "operationId": "ReactiveWo_AffiliateProposalAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "attachment refid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/SendPromoteEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Send Promote Email",
        "operationId": "ReactiveWo_SendPromoteEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/LocationComplexForSearch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Location Complex For Search",
        "operationId": "ReactiveWo_LocationComplexForSearch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "search value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.LocationComplexInfo"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetSubAreasByAreas": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Sub Areas By Areas",
        "operationId": "ReactiveWo_GetSubAreasByAreas",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "areas",
            "in": "body",
            "description": "areas",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateAreasByWoId": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Areas By WoId",
        "operationId": "ReactiveWo_UpdateAreasByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "areas",
            "in": "body",
            "description": "areas",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subAreas",
            "in": "body",
            "description": "subAreas",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateChargeBackAmout": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "update charge back amout",
        "operationId": "ReactiveWo_UpdateChargeBackAmout",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargeBackAmout",
            "in": "body",
            "description": "charge back amout",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "description": "is resident damage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "chargeBackReason",
            "in": "body",
            "description": "charge back reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateChargeBackReason": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update ChargeBack Reason",
        "operationId": "ReactiveWo_UpdateChargeBackReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chargeBackReason",
            "in": "body",
            "description": "charge Back Reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "description": "is Resident Damage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateIssuesReason": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Issues Reason",
        "operationId": "ReactiveWo_UpdateIssuesReason",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "description": "Issues Update Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.IssuesUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/CancelChargeBack": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Cancel ChargeBack",
        "operationId": "ReactiveWo_CancelChargeBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "description": "is Resident Damage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoNotesPatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Wo Notes Patch",
        "operationId": "ReactiveWo_WoNotesPatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "refId",
            "in": "body",
            "description": "ref Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentUser",
            "in": "body",
            "description": "current User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Identity.ICurrentUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoNotesEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceHistoryForReactiveWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "reactive wo service history",
        "operationId": "ReactiveWo_ServiceHistoryForReactiveWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[System.Object]"
            }
          }
        }
      }
    },
    "/ReactiveWo/serviceHistoryExcelForReactiveWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "service History Excel For Reactive Wo",
        "operationId": "ReactiveWo_serviceHistoryExcelForReactiveWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Residential Report Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/DisputeInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Dispute Invoice",
        "operationId": "ReactiveWo_DisputeInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetClientDispatchApproval": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Client Dispatch Approval",
        "operationId": "ReactiveWo_SetClientDispatchApproval",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientDispatchApproval",
            "in": "body",
            "description": "client dispatch approval",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetApproveInHouseDispatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Approve In House Dispatch",
        "operationId": "ReactiveWo_SetApproveInHouseDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetDeclineDispatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Decline Dispatch",
        "operationId": "ReactiveWo_SetDeclineDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetApproveSmsAffiliateDispatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Approve Sms Affiliate Dispatch",
        "operationId": "ReactiveWo_SetApproveSmsAffiliateDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetClientDispatchApprovalSignet": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Client Dispatch Approval Signet",
        "operationId": "ReactiveWo_SetClientDispatchApprovalSignet",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientDispatchApproval",
            "in": "body",
            "description": "client Dispatch Approval",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdatePCDAStatusForTMI": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Client Dispatch Approval",
        "operationId": "ReactiveWo_UpdatePCDAStatusForTMI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationType",
            "in": "body",
            "description": "operation Type",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/ChangeWoStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Change Wo Status",
        "operationId": "ReactiveWo_ChangeWoStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "Reactive Wo Change Status View Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ReactiveWoChangeStatusViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/IsPassThroughInvoiceServiceFeeTaxableByClient": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "is pass through invoice service Fee taxable by client",
        "operationId": "ReactiveWo_IsPassThroughInvoiceServiceFeeTaxableByClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/DefaultPriority": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Default Priority",
        "operationId": "ReactiveWo_DefaultPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service Code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodePriorityEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetDefaultPriority": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Default Priority",
        "operationId": "ReactiveWo_GetDefaultPriority",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetScheduleTimeList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Schedule Time List",
        "operationId": "ReactiveWo_GetScheduleTimeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woClientId",
            "in": "body",
            "description": "Client Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woServiceCategoryId",
            "in": "body",
            "description": "Service Category Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service Code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "priorityId",
            "in": "body",
            "description": "priority Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "reDispatch",
            "in": "body",
            "description": "reDispatch",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetScheduleTimeListV3": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Schedule Time List V3",
        "operationId": "ReactiveWo_GetScheduleTimeListV3",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "scheduleTimeQueryModel",
            "in": "body",
            "description": "Schedule Time Request Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleTimeRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetServiceCodeWOTypeId": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Service Code WO Type Id",
        "operationId": "ReactiveWo_GetServiceCodeWOTypeId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Client Service Code WO Type Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeWOTypeQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceCodeQuestion": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Service Code Question",
        "operationId": "ReactiveWo_ServiceCodeQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service Code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWeatherForecastByTime": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Weather Forecast By Time",
        "operationId": "ReactiveWo_GetWeatherForecastByTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "times",
            "in": "body",
            "description": "times",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WeatherSummary"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetReactiveWOGLCode": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Reactive WO GLCode",
        "operationId": "ReactiveWo_GetReactiveWOGLCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WOGLCodeEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/LocationPart": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Location Part",
        "operationId": "ReactiveWo_LocationPart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Asset Part Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetPartQueryModel"
            }
          },
          {
            "name": "locationAssetId",
            "in": "body",
            "description": "location Asset Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/SetInvoiceSplitInfo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Invoice Split Info",
        "operationId": "ReactiveWo_SetInvoiceSplitInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "invoiceSplit",
            "in": "body",
            "description": "Invoice Split Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Invoice.InvoiceSplitModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetInvoiceSplitInfo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Invoice Split Info",
        "operationId": "ReactiveWo_GetInvoiceSplitInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "invoiceSplitQuery",
            "in": "body",
            "description": "Invoice Split Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Invoice.InvoiceSplitQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.Invoice.InvoiceSplitGLCodeInfoEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/PreApprovalFeatureToggle": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_PreApprovalFeatureToggle",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/Defer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Defer ReactiveWO",
        "operationId": "ReactiveWo_Defer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "description": "comments",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/Cancel": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Cancel ReactiveWO",
        "operationId": "ReactiveWo_Cancel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "description": "comments",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/DeferredToPendingSchedule": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Deferred to PendingSchedule",
        "operationId": "ReactiveWo_DeferredToPendingSchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "description": "comments",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/ChangeSmsAffiliateDispatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Change sms affiliate dispatch status(approve or decline)",
        "operationId": "ReactiveWo_ChangeSmsAffiliateDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason(5,4)",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.EmptyResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetPcdaPermissions": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get PCDA permission.",
        "operationId": "ReactiveWo_GetPcdaPermissions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.PCDA.PcdaPermissionViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWoStatusReasonList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "GetWoStatusReasonList",
        "operationId": "ReactiveWo_GetWoStatusReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "dataSysEnumType",
            "in": "body",
            "description": "61|62",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                20,
                21,
                22,
                23,
                24,
                26,
                28,
                29,
                30,
                31,
                32,
                34,
                36,
                37,
                38,
                39,
                40,
                41,
                45,
                46,
                47,
                48,
                49,
                54,
                55,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                76,
                77,
                78
              ],
              "type": "integer"
            }
          },
          {
            "name": "sysEnumTypeName",
            "in": "body",
            "description": "Client Cancelled Reason For Residential(61) and Client Cancelled Reason For Commercial(62)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetReactiveWoStatusReasonList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "GetWoStatusReasonList",
        "operationId": "ReactiveWo_GetReactiveWoStatusReasonList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "reactiveWoId",
            "in": "body",
            "description": "Reactive Wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/SearchTechnician": {
      "get": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_SearchTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/DispatchToTechnicianWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_DispatchToTechnicianWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/DispatchTechnician": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_DispatchTechnician",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetAffiliate": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetAffiliate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/DispatchToTechnicianCalendarWos": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_DispatchToTechnicianCalendarWos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/TechnicianBlockInRange": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_TechnicianBlockInRange",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/NonWorkingDaysData": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_NonWorkingDaysData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/AllTechnician": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_AllTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/DispatchToTechnicianTechnicianWoCount": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_DispatchToTechnicianTechnicianWoCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/TechnicianSkills": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_TechnicianSkills",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/TechnicianRanks": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_TechnicianRanks",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetDispatchSendNotificationInfo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetDispatchSendNotificationInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/DispatchByTechnician": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_DispatchByTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "dispatchModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.DispatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetLocationBlockTimeOff": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetLocationBlockTimeOff",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/WorkingHoursData": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_WorkingHoursData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/CancelWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_CancelWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/AssignToSms": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_AssignToSms",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetTriconCancelReasonList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetTriconCancelReasonList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetAffiliaitesForAutomaticDispatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetAffiliaitesForAutomaticDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliaitesForAutomaticDispatchQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetTriconDispatchAffiliateCount": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetTriconDispatchAffiliateCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/CalendarShowWo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_CalendarShowWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/Index": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ResidentialIndex": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ResidentialIndex",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/List": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Reactive Wo List",
        "operationId": "ReactiveWo_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Open Status Aging Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.PagerResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ListCount": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Reactive Wo List Count",
        "operationId": "ReactiveWo_ListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Open Status Aging Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoHistoryList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Wo History List",
        "operationId": "ReactiveWo_WoHistoryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Wo Base Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel]"
            }
          }
        }
      }
    },
    "/ReactiveWo/HeatMapList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Heat Map List",
        "operationId": "ReactiveWo_HeatMapList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/Details": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/RRequestEdit": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "RedirectToAction Wo Details By Wo Num",
        "operationId": "ReactiveWo_RRequestEdit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woNum",
            "in": "body",
            "description": "wo Num",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/One": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get reactive wo view model",
        "operationId": "ReactiveWo_One",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ReactiveWoViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetReactivePartInfo": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Reactive Wo Part Info",
        "operationId": "ReactiveWo_GetReactivePartInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ReactiveWoViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetIsEditWoDetial": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Is Edit Wo Detial",
        "operationId": "ReactiveWo_GetIsEditWoDetial",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "Reactive Wo Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/YearToDateByServiceCategory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Year To Date By Service Category",
        "operationId": "ReactiveWo_YearToDateByServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "service Category Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        }
      }
    },
    "/ReactiveWo/ResponsibleEntity": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Responsible Entity",
        "operationId": "ReactiveWo_ResponsibleEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetLocationAttributes": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Location Attributes",
        "operationId": "ReactiveWo_GetLocationAttributes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "residentId",
            "in": "body",
            "description": "resident Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.LocationAttributesViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/Landlord": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get Landlord",
        "operationId": "ReactiveWo_Landlord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLandlordEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/Landscaping": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Landscaping",
        "operationId": "ReactiveWo_Landscaping",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLandscapingEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/FloorCare": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get FloorCare",
        "operationId": "ReactiveWo_FloorCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationFloorCareEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoIsClientCreate": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Wo Is Client Create",
        "operationId": "ReactiveWo_WoIsClientCreate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoEventLogsNew": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo event log news",
        "operationId": "ReactiveWo_WoEventLogsNew",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.EventLogEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoEventLogs": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo EventLogs",
        "operationId": "ReactiveWo_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EventLogEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/WoCriticalEventLogs": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get critical eventlog",
        "operationId": "ReactiveWo_WoCriticalEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.CriticalEventViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetIssuePhotos": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get issue photos",
        "operationId": "ReactiveWo_GetIssuePhotos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.AttachmentEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoIvrs": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo ivr Log",
        "operationId": "ReactiveWo_WoIvrs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.IvrLogModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoRescheduleLogs": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo reschedule log",
        "operationId": "ReactiveWo_WoRescheduleLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RescheduleLogEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/CommonQuestion": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo Common Question",
        "operationId": "ReactiveWo_CommonQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/CommonQuestionAnswer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Common Question Answer",
        "operationId": "ReactiveWo_CommonQuestionAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/SaveCommonAnswer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Save Common Answer",
        "operationId": "ReactiveWo_SaveCommonAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answers",
            "in": "body",
            "description": "Question Answer Entity List",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/CommonAnswer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Common Answer",
        "operationId": "ReactiveWo_CommonAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceCodeAnswer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo service code answer",
        "operationId": "ReactiveWo_ServiceCodeAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/CheckOutAnswer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "check out answer",
        "operationId": "ReactiveWo_CheckOutAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/Ovw": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo ovw info",
        "operationId": "ReactiveWo_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.OvwOutput"
            }
          }
        }
      }
    },
    "/ReactiveWo/AddWatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Add Watch",
        "operationId": "ReactiveWo_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/RemoveWatch": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Remove Watch",
        "operationId": "ReactiveWo_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/Confirmation": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Confirmation",
        "operationId": "ReactiveWo_Confirmation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/SendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Send Email",
        "operationId": "ReactiveWo_SendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailAddress",
            "in": "body",
            "description": "mail Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/AssignToSeniorManager": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Assign To Senior Manager",
        "operationId": "ReactiveWo_AssignToSeniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignTo",
            "in": "body",
            "description": "assignTo",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/AssignToJuniorManager": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Assign To Junior Manager",
        "operationId": "ReactiveWo_AssignToJuniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignTo",
            "in": "body",
            "description": "assignTo",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/CanAssignToSeniorManager": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Can Assign To Senior Manager",
        "operationId": "ReactiveWo_CanAssignToSeniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/CanCancelAssign": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Can Cancel Assign",
        "operationId": "ReactiveWo_CanCancelAssign",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/CancelAssign": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Cancel Assign",
        "operationId": "ReactiveWo_CancelAssign",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetContact": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Wo Contact",
        "operationId": "ReactiveWo_SetContact",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "body",
            "description": "Reactive Wo Contact Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "body",
            "description": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "body",
            "description": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoContactEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/AssignOptions": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "wo assign options",
        "operationId": "ReactiveWo_AssignOptions",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.AssignOptionsOutput"
            }
          }
        }
      }
    },
    "/ReactiveWo/AssignHistory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo assign history",
        "operationId": "ReactiveWo_AssignHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoAssignHistoryEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/CanApproveOrRejectSelfHelp": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Can Approve Or Reject Self Help",
        "operationId": "ReactiveWo_CanApproveOrRejectSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/ApproveSelfHelp": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Approve Self Help",
        "operationId": "ReactiveWo_ApproveSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/RejectSelfHelp": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Reject Self Help",
        "operationId": "ReactiveWo_RejectSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/Escalate": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Escalate",
        "operationId": "ReactiveWo_Escalate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "escalate",
            "in": "body",
            "description": "escalate",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/CreateClientSmartReplyEscalateNote": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "CreateClientSmartReplyEscalateNote",
        "operationId": "ReactiveWo_CreateClientSmartReplyEscalateNote",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "escalate",
            "in": "body",
            "description": "IsEscalate",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "smartMenuId",
            "in": "body",
            "description": "smartMenuId",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                100,
                101,
                102,
                103,
                104,
                105,
                106
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetEHS": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set EHS",
        "operationId": "ReactiveWo_SetEHS",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEHS",
            "in": "body",
            "description": "is EHS",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoReactiveAttributeEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/UpdateIsLOBChargeBack": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Update Is LOB ChargeBack",
        "operationId": "ReactiveWo_UpdateIsLOBChargeBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLOBChargeBack",
            "in": "body",
            "description": "is LOB ChargeBack",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoReactiveAttributeEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/SendEscalationRequestedEmailAsync": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Send Escalation Requested Email Async",
        "operationId": "ReactiveWo_SendEscalationRequestedEmailAsync",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ReactiveWo/CriticalEvent": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Critical Event",
        "operationId": "ReactiveWo_CriticalEvent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criticalEvent",
            "in": "body",
            "description": "critical Event",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/HreIssue": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Hre Issue",
        "operationId": "ReactiveWo_HreIssue",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/IsWoRfi": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "is wo rfi",
        "operationId": "ReactiveWo_IsWoRfi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/IsChargeback": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "is wo charge back",
        "operationId": "ReactiveWo_IsChargeback",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ReactiveWo/Proposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal",
        "operationId": "ReactiveWo_Proposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/Invoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Invoice",
        "operationId": "ReactiveWo_Invoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/AllStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo Status List",
        "operationId": "ReactiveWo_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllCustomerWoStatus": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Customer Wo Status List",
        "operationId": "ReactiveWo_AllCustomerWoStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllServiceCategory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Service Category List",
        "operationId": "ReactiveWo_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllServiceType": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Service Type List",
        "operationId": "ReactiveWo_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryIds",
            "in": "body",
            "description": "service Category Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllServiceCode": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Client Service Code List",
        "operationId": "ReactiveWo_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeIds",
            "in": "body",
            "description": "service Type Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllWotype": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Wo Type List",
        "operationId": "ReactiveWo_AllWotype",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AdvanceSearchAllWoType": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Advance Search Residential WoT ypes",
        "operationId": "ReactiveWo_AdvanceSearchAllWoType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllPriority": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Priority List",
        "operationId": "ReactiveWo_AllPriority",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AllOwnership": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Ownership List",
        "operationId": "ReactiveWo_AllOwnership",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetAllListDatas": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get All List Datas",
        "operationId": "ReactiveWo_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ReactiveWoDataInfo"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWoStatusList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Reactive Wo Statuses",
        "operationId": "ReactiveWo_GetWoStatusList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWOBatchInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get wo batch invoice",
        "operationId": "ReactiveWo_GetWOBatchInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woNum",
            "in": "body",
            "description": "wo no.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.BatchInvoiceEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get client proposal by wo id",
        "operationId": "ReactiveWo_ClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposalHistory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal History List",
        "operationId": "ReactiveWo_ClientProposalHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ProposalHistoryEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get client invoice",
        "operationId": "ReactiveWo_ClientInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.ViewModels.TargetModel"
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Affiliate Invoice",
        "operationId": "ReactiveWo_AffiliateInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.InvoiceEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoiceHistory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Invoice History List",
        "operationId": "ReactiveWo_ClientInvoiceHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.InvoiceHistoryEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposalItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Proposal Item List",
        "operationId": "ReactiveWo_ClientProposalItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "target id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoiceItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Invoice Item List",
        "operationId": "ReactiveWo_ClientInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "InvoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateInvoiceItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Invoice Item List",
        "operationId": "ReactiveWo_AffiliateInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "InvoiceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientBaseLineItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get client base line Item",
        "operationId": "ReactiveWo_ClientBaseLineItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.InvoiceBaseLineItemEntity"
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientProposalAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Client Proposal Attachment",
        "operationId": "ReactiveWo_ClientProposalAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "target id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/ClientInvoiceAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Client Invoice Attachment",
        "operationId": "ReactiveWo_ClientInvoiceAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "target id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/AffiliateInvoiceAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Affiliate Invoice Attachment",
        "operationId": "ReactiveWo_AffiliateInvoiceAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "target id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/GetNextActionList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "get nect action list",
        "operationId": "ReactiveWo_GetNextActionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52
              ],
              "type": "integer"
            }
          }
        }
      }
    },
    "/ReactiveWo/ApproveClientProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Approve Client Proposal",
        "operationId": "ReactiveWo_ApproveClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "description": "proposal id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "glCode",
            "in": "body",
            "description": "gl code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wbsNumber",
            "in": "body",
            "description": "wbs number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woTypeId",
            "in": "body",
            "description": "wo type id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/PrintProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Sms Proposal PDF",
        "operationId": "ReactiveWo_PrintProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "description": "proposal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/RejectClientProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Reject Client Proposal",
        "operationId": "ReactiveWo_RejectClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ApproveInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Approve Invoice",
        "operationId": "ReactiveWo_ApproveInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/RejectInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Client Reject Sms Invoice",
        "operationId": "ReactiveWo_RejectInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetAsset": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Asset",
        "operationId": "ReactiveWo_SetAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "in": "body",
            "description": "asset Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/SetPart": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Set Part",
        "operationId": "ReactiveWo_SetPart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "body",
            "description": "part Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "in": "body",
            "description": "asset Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "description": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/LockTechnician": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "lock technician",
        "operationId": "ReactiveWo_LockTechnician",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "lockModel",
            "in": "body",
            "description": "technician lock model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateWoLockModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/Technicians": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Technicians By Affiliate Id",
        "operationId": "ReactiveWo_Technicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.TechnicianInfo"
              }
            }
          }
        }
      }
    },
    "/ReactiveWo/OpenedStatuses": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Get Opened Statuses",
        "operationId": "ReactiveWo_OpenedStatuses",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WorkOrderStatusConst"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportResidentialReactiveWoExcelByServer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Residential Reactive Wo Excel By Server",
        "operationId": "ReactiveWo_ExportResidentialReactiveWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Residential Report Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportVpReactiveWoExcelByServer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Vp Reactive Wo Excel By Server",
        "operationId": "ReactiveWo_ExportVpReactiveWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportPastScheduleExcelByServer": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Past Schedule Excel By Server",
        "operationId": "ReactiveWo_ExportPastScheduleExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/ExportPastScheduleExcelBySendEmail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "summary": "Export Past Schedule Excel By Send Email",
        "operationId": "ReactiveWo_ExportPastScheduleExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Reactive Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/Detail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/Status": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_Status",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceCategory": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceType": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "servicecategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/ServiceCode": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "servicetypeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/Location": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_Location",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetTroubleshooting": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetTroubleshooting",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetKeyQuestion": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetKeyQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/CustomerSatisfaction": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_CustomerSatisfaction",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woid",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/ResponseWindow": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_ResponseWindow",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/WoDetail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_WoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetWoDetail": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientProposal": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientProposalItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientProposalItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientProposalAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientProposalAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientInvoice": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientInvoiceItem": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetClientInvoiceAttachment": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetClientInvoiceAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWo/GetLocationPartList": {
      "post": {
        "tags": [
          "ReactiveWo"
        ],
        "operationId": "ReactiveWo_GetLocationPartList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationAssetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetBundleProCareIdByWoId": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetBundleProCareIdByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetWoBaseInfoForIM": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetWoBaseInfoForIM",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.WoBaseInfoForIMViewModel"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetWoBundleProCareList": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetWoBundleProCareList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ReactiveWoApiRepo.WoBundleProCareQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ReactiveWoApiRepo.WoBundleProCareResultModel"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetWoBundleProCareListCount": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetWoBundleProCareListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ReactiveWoApiRepo.WoBundleProCareQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetWOGLCode": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetWOGLCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "WOId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[Moon.WebService.Client.GLCodeQueryResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetWOReactiveGLCode": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetWOReactiveGLCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "WOId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetIssuesReasonListByWoId": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetIssuesReasonListByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetAllIssuesReasonList": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetAllIssuesReasonList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Infrastructure.DataKeyValueQueryResult"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetRecentMoveInPrimaryResidentId": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetRecentMoveInPrimaryResidentId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetRecentMoveInWoList": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetRecentMoveInWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ReactiveWoApiRepo.RecentMoveInWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetResidentIndexDataCount": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetResidentIndexDataCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ResidentReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetResidentIndexData": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetResidentIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ResidentReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetRetailIndexDataCount": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetRetailIndexDataCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RetailReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoApi/GetRetailIndexData": {
      "post": {
        "tags": [
          "ReactiveWoApi"
        ],
        "operationId": "ReactiveWoApi_GetRetailIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RetailReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoLabel/GetReactiveWoMarkedLabelListByWoId": {
      "get": {
        "tags": [
          "ReactiveWoLabel"
        ],
        "summary": "Get Reactive Wo Marked Label List",
        "operationId": "ReactiveWoLabel_GetReactiveWoMarkedLabelListByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "wo id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Label.Core.Entity.WoLabelEntity"
            }
          }
        }
      }
    },
    "/ReactiveWoLabel/GetEditableLabelListInReactiveByWoId": {
      "get": {
        "tags": [
          "ReactiveWoLabel"
        ],
        "summary": "Get Editable Label List In Reactive",
        "operationId": "ReactiveWoLabel_GetEditableLabelListInReactiveByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "wo id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Label.Core.Model.LabelPermissionModel"
            }
          }
        }
      }
    },
    "/ReactiveWoLabel/MakeReactiveWoLabelsByWoIdAndLabelIds": {
      "post": {
        "tags": [
          "ReactiveWoLabel"
        ],
        "operationId": "ReactiveWoLabel_MakeReactiveWoLabelsByWoIdAndLabelIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "labelIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ReactiveWoSmartQ/GetReactiveWoCall": {
      "post": {
        "tags": [
          "ReactiveWoSmartQ"
        ],
        "summary": "Get reactive wo call info",
        "operationId": "ReactiveWoSmartQ_GetReactiveWoCall",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWOCallModel"
            }
          }
        }
      }
    },
    "/ReactiveWoSmartQ/SendAttachmentRequest": {
      "post": {
        "tags": [
          "ReactiveWoSmartQ"
        ],
        "summary": "Send attachment request to anonymous users of location",
        "operationId": "ReactiveWoSmartQ_SendAttachmentRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SmartQ.AttachmentRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ReactiveWoSmartQ/IsSentPhotoRequestFeatureToggle": {
      "post": {
        "tags": [
          "ReactiveWoSmartQ"
        ],
        "summary": "Determines whether the sent photo request feature toggle is enabled",
        "operationId": "ReactiveWoSmartQ_IsSentPhotoRequestFeatureToggle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurrentWoLabel/GetRecurrentWoMarkedLabelListByWoId": {
      "get": {
        "tags": [
          "RecurrentWoLabel"
        ],
        "summary": "Get Recurrent Wo Marked Label List",
        "operationId": "RecurrentWoLabel_GetRecurrentWoMarkedLabelListByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "wo id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Label.Core.Entity.WoLabelEntity"
            }
          }
        }
      }
    },
    "/RecurrentWoLabel/GetEditableLabelListInRecurrentByWoId": {
      "get": {
        "tags": [
          "RecurrentWoLabel"
        ],
        "summary": "Get Editable Label List In Recurrent",
        "operationId": "RecurrentWoLabel_GetEditableLabelListInRecurrentByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "wo id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Label.Core.Model.LabelPermissionModel"
            }
          }
        }
      }
    },
    "/RecurrentWoLabel/MakeRecurrentWoLabelsByWoIdAndLabelIds": {
      "post": {
        "tags": [
          "RecurrentWoLabel"
        ],
        "operationId": "RecurrentWoLabel_MakeRecurrentWoLabelsByWoIdAndLabelIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "labelIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RecurringWo/Index": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RecurringWo/Details": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RecurringWo/CurrentMonthMissedDeferredLogRefusal": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_CurrentMonthMissedDeferredLogRefusal",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RecurringWo/EstimatedCurrentMonthlySpend": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_EstimatedCurrentMonthlySpend",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RecurringWo/List": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Recurrent Wo List",
        "operationId": "RecurringWo_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.RecurrentWoListViewModel]"
            }
          }
        }
      }
    },
    "/RecurringWo/ServiceCategory": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Service Category List",
        "operationId": "RecurringWo_ServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/ServiceTypes": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Service Type List By Service Category Ids",
        "operationId": "RecurringWo_ServiceTypes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryIds",
            "in": "body",
            "description": "service Category Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/ServiceType": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Service Type List",
        "operationId": "RecurringWo_ServiceType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/ServiceCode": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Service Code List By Service Type Ids",
        "operationId": "RecurringWo_ServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeIds",
            "in": "body",
            "description": "service Type Ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/AllRegion": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Current User Regions",
        "operationId": "RecurringWo_AllRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/GetAllListDatas": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get All List Datas(ServiceCategoryData,districtsData,groupsData,regionsData,CustomerWoStatusData,WoStatusData,OwnershipData,allOrigin,AllStateAbbrdata,ConfirmTypeData,ClassificationData,woLabelData)",
        "operationId": "RecurringWo_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.WoDataInfo"
            }
          }
        }
      }
    },
    "/RecurringWo/WoDetail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Wo Detail",
        "operationId": "RecurringWo_WoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.RecurrentWoViewModel"
            }
          }
        }
      }
    },
    "/RecurringWo/WoIsRatingStatu": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Wo Is Rating Status",
        "operationId": "RecurringWo_WoIsRatingStatu",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/IsWoRfi": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Is Wo Rfi",
        "operationId": "RecurringWo_IsWoRfi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/WoIvrs": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Wo Ivrs",
        "operationId": "RecurringWo_WoIvrs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.IvrLogModel"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/WoEventLogs": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Wo Event Logs",
        "operationId": "RecurringWo_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EventLogEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/WoCriticalEventLogs": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Wo Critical Event Logs",
        "operationId": "RecurringWo_WoCriticalEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.CriticalEventViewModel"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/WoRescheduleLogs": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Wo Reschedule Logs",
        "operationId": "RecurringWo_WoRescheduleLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.RescheduleLogEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/CheckOutAnswer": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "GET Check Out QuestionAnswerEntity",
        "operationId": "RecurringWo_CheckOutAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/CriticalEvent": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Critical Event",
        "operationId": "RecurringWo_CriticalEvent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criticalEvent",
            "in": "body",
            "description": "critical Event",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "description": "reason",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/CustomerSatisfaction": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Customer Satisfaction",
        "operationId": "RecurringWo_CustomerSatisfaction",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ConfirmEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/SendEmail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Send Email",
        "operationId": "RecurringWo_SendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailAddress",
            "in": "body",
            "description": "mail Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/RecurringWo/ResponsibleEntity": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Responsible Entity",
        "operationId": "RecurringWo_ResponsibleEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/RecurringWo/Ovw": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Ovw(openDays,visitCount,watchers,isUserWatched,monthlyVisitCount)",
        "operationId": "RecurringWo_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.OvwInfo"
            }
          }
        }
      }
    },
    "/RecurringWo/AddWatch": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Add Watch",
        "operationId": "RecurringWo_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/RecurringWo/RemoveWatch": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "remove Watch",
        "operationId": "RecurringWo_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/RecurringWo/AllStatus": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Recurrent Wo Statuses",
        "operationId": "RecurringWo_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/Landlord": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Landlord By Location Id",
        "operationId": "RecurringWo_Landlord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLandlordEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/Landscaping": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Landscaping By Location Id",
        "operationId": "RecurringWo_Landscaping",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationLandscapingEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/FloorCare": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get FloorCare By Location Id",
        "operationId": "RecurringWo_FloorCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationFloorCareEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/RetailExportExcelByServer": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Retail Export Excel By Server",
        "operationId": "RecurringWo_RetailExportExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/RecurringWo/ResidentialExportExcelByServer": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Residential Export Excel By Server",
        "operationId": "RecurringWo_ResidentialExportExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/RecurringWo/ExportRetailRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Export Retail Recurring Wo Excel By SendEmail",
        "operationId": "RecurringWo_ExportRetailRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/RecurringWo/IsDuplicatedExportRetailRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Is Duplicated Export Retail Recurring Wo Excel By SendEmail",
        "operationId": "RecurringWo_IsDuplicatedExportRetailRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Business.Modules.Export.DuplicatedExportResult"
            }
          }
        }
      }
    },
    "/RecurringWo/ExportResidentialRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Export Residential Recurring Wo Excel By Send Email",
        "operationId": "RecurringWo_ExportResidentialRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/RecurringWo/IsDuplicatedExportResidentialRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Is Duplicated Export Residential Recurring Wo Excel By Send Email",
        "operationId": "RecurringWo_IsDuplicatedExportResidentialRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "description": "use Bi Export",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Business.Modules.Export.DuplicatedExportResult"
            }
          }
        }
      }
    },
    "/RecurringWo/ClientConfirmList": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Client Confirm List",
        "operationId": "RecurringWo_ClientConfirmList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ConfirmLogEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/AllConfirmationTypes": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get All Confirmation Types",
        "operationId": "RecurringWo_AllConfirmationTypes",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataConfirmTypeEntity"
              }
            }
          }
        }
      }
    },
    "/RecurringWo/RemoveRFI": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Remove RFI",
        "operationId": "RecurringWo_RemoveRFI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/ServiceHistoryForRecurrentWo": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Get Property Recurrent Wo List",
        "operationId": "RecurringWo_ServiceHistoryForRecurrentWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[System.Object]"
            }
          }
        }
      }
    },
    "/RecurringWo/serviceHistoryExcelForRecurrentWo": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Service History Excel For RecurrentWo",
        "operationId": "RecurringWo_serviceHistoryExcelForRecurrentWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Recurrent Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/RecurringWo/UpdatePurchaseNum": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Update Purchase Num",
        "operationId": "RecurringWo_UpdatePurchaseNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "value",
            "in": "body",
            "description": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/UpdateIsResidentDamage": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Update Is Resident Damage",
        "operationId": "RecurringWo_UpdateIsResidentDamage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "description": "is Resident Damage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "body",
            "description": "amount",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RecurringWo/SetEHS": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Set EHS",
        "operationId": "RecurringWo_SetEHS",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEHS",
            "in": "body",
            "description": "is EHS",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoRecurrentAttributeEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/UpdateIsLOBChargeBack": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "summary": "Update Is LOB Charge Back",
        "operationId": "RecurringWo_UpdateIsLOBChargeBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLOBChargeBack",
            "in": "body",
            "description": "is LOB Charge Back",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoRecurrentAttributeEntity"
            }
          }
        }
      }
    },
    "/RecurringWo/Detail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_Detail",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RecurringWo/GetWoDetail": {
      "post": {
        "tags": [
          "RecurringWo"
        ],
        "operationId": "RecurringWo_GetWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RegionalScript/GetRegionalScript": {
      "get": {
        "tags": [
          "RegionalScript"
        ],
        "operationId": "RegionalScript_GetRegionalScript",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "serviceCodeId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "priorityId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RegionalScript/RegionalScriptLog": {
      "post": {
        "tags": [
          "RegionalScript"
        ],
        "summary": "Regional ScriptLog",
        "operationId": "RegionalScript_RegionalScriptLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "description": "WO Id/Changed before source data/event Log Reference Type (default = ReactiveWO = 0)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Business.RegionScriptInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RegionalScript/RegionalScriptLogs": {
      "post": {
        "tags": [
          "RegionalScript"
        ],
        "summary": "Regional ScriptLog",
        "operationId": "RegionalScript_RegionalScriptLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "inputs",
            "in": "body",
            "description": "WO Id/Changed before source data/event Log Reference Type (default = ReactiveWO = 0)",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Business.RegionScriptInput"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/RehabDashboard/Index": {
      "post": {
        "tags": [
          "RehabDashboard"
        ],
        "operationId": "RehabDashboard_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RehabDashboard/GetTurnDashboardCounts": {
      "post": {
        "tags": [
          "RehabDashboard"
        ],
        "operationId": "RehabDashboard_GetTurnDashboardCounts",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RehabDashboard/GetRehabsProjectsByStatus": {
      "post": {
        "tags": [
          "RehabDashboard"
        ],
        "operationId": "RehabDashboard_GetRehabsProjectsByStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TurnDashboardQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RehabDashboard/GetChangeOrderNeedApproveList": {
      "post": {
        "tags": [
          "RehabDashboard"
        ],
        "operationId": "RehabDashboard_GetChangeOrderNeedApproveList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TurnDashboardQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RehabDashboard/GetMarketList": {
      "post": {
        "tags": [
          "RehabDashboard"
        ],
        "operationId": "RehabDashboard_GetMarketList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/Index": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "operationId": "RequestAffiliateDispatch_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/GetAllListDatas": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "get service Category List and regions List",
        "operationId": "RequestAffiliateDispatch_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ServiceCatetoryAndRegion"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/ExportRADByServer": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Export RAD By Server",
        "operationId": "RequestAffiliateDispatch_ExportRADByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Request WO List Client Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOListClientQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportResult"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/ExportRADBySendEmail": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Export RAD And Send Email",
        "operationId": "RequestAffiliateDispatch_ExportRADBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Request WO List Client Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOListClientQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "export Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportResult"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/Detail": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "operationId": "RequestAffiliateDispatch_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "radId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/AutoScheduleBaseValid": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Auto Schedule Base Valid",
        "operationId": "RequestAffiliateDispatch_AutoScheduleBaseValid",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "Auto Schedule Wo Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AutoScheduleWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.IsAutoScheduleModel"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/GetAffiliaitesForAutomaticDispatch": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get Affiliaites For Automatic Dispatch",
        "operationId": "RequestAffiliateDispatch_GetAffiliaitesForAutomaticDispatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWoAffiliateAndTechnician"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/GetAffiliateRequestEntity": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get Affiliate Request Entity",
        "operationId": "RequestAffiliateDispatch_GetAffiliateRequestEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "Request WO Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOResultModel"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/Commit": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "dispatch wo",
        "operationId": "RequestAffiliateDispatch_Commit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWo",
            "in": "body",
            "description": "Request Wo Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWoModel"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "affiliate Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technician",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wphScheduleResult",
            "in": "body",
            "description": "wph Schedule Result",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/SetRequestWoReject": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Set Request Wo Reject",
        "operationId": "RequestAffiliateDispatch_SetRequestWoReject",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWoId",
            "in": "body",
            "description": "request Wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/CreateAffiliateRequestWo": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Create Affiliate Request Wo",
        "operationId": "RequestAffiliateDispatch_CreateAffiliateRequestWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "description": "Request WO Entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOEntity"
            }
          },
          {
            "name": "questionAnswer",
            "in": "body",
            "description": "question Answer entity list",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "attachments",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOEntity"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/GetRequestWoInfo": {
      "get": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get Request Wo Info",
        "operationId": "RequestAffiliateDispatch_GetRequestWoInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "request Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.CreateRequestWoViewModel"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/UpdateAffiliateRequestWo": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Update Affiliate Request Wo",
        "operationId": "RequestAffiliateDispatch_UpdateAffiliateRequestWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWoId",
            "in": "body",
            "description": "request Wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patchModel",
            "in": "body",
            "description": "Request WO Patch Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOPatchModel"
            }
          },
          {
            "name": "questionAnswers",
            "in": "body",
            "description": "question Answers entity list",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "attachments",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Controllers.CreateRequestWoViewModel"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/AllServiceType": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get All Service Type",
        "operationId": "RequestAffiliateDispatch_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "description": "serviceCategory Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
              }
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/AllServiceCode": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get All Service Code",
        "operationId": "RequestAffiliateDispatch_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "service Type Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
              }
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/ServiceCodeQuestion": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Service Code Question",
        "operationId": "RequestAffiliateDispatch_ServiceCodeQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCodeId",
            "in": "body",
            "description": "service Code Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "client Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionEntity"
              }
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/GetServiceCodeAnswer": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get Service Code Answer",
        "operationId": "RequestAffiliateDispatch_GetServiceCodeAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestId",
            "in": "body",
            "description": "request Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/EventLogs": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Get Event Logs",
        "operationId": "RequestAffiliateDispatch_EventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestId",
            "in": "body",
            "description": "request Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.EventLogEntity"
              }
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/UpdateDetail": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Update Request Wo Detail",
        "operationId": "RequestAffiliateDispatch_UpdateDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "key",
            "in": "body",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "body",
            "description": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "requestId",
            "in": "body",
            "description": "request Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOEntity"
            }
          }
        }
      }
    },
    "/RequestAffiliateDispatch/UpdateScheduleTime": {
      "post": {
        "tags": [
          "RequestAffiliateDispatch"
        ],
        "summary": "Update Schedule Time",
        "operationId": "RequestAffiliateDispatch_UpdateScheduleTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestId",
            "in": "body",
            "description": "request Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ScheduleStartTime",
            "in": "body",
            "description": "Schedule Start Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "ScheduleEndTime",
            "in": "body",
            "description": "Schedule End Time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOEntity"
            }
          }
        }
      }
    },
    "/ResidentPreferredSchedule/GetResidentPreferredSchedule": {
      "post": {
        "tags": [
          "ResidentPreferredSchedule"
        ],
        "summary": "Get WO Resident Preferred Schedule Time",
        "operationId": "ResidentPreferredSchedule_GetResidentPreferredSchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "reactive WO Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentPreferredScheduleViewModel"
            }
          }
        }
      }
    },
    "/ResidentPreferredSchedule/IsEnableResidentPreferredSchedule": {
      "post": {
        "tags": [
          "ResidentPreferredSchedule"
        ],
        "summary": "Get location Is Open ResidentPreferredSchedule Feature Toggle",
        "operationId": "ResidentPreferredSchedule_IsEnableResidentPreferredSchedule",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ResidentPreferredSchedule/GetScheduleSLATime": {
      "post": {
        "tags": [
          "ResidentPreferredSchedule"
        ],
        "summary": "Get location SLA start time and end time",
        "operationId": "ResidentPreferredSchedule_GetScheduleSLATime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priorityId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ScheduleSLATimeViewModel"
            }
          }
        }
      }
    },
    "/ResourceApi/GetBasicRolesByCustomerType": {
      "post": {
        "tags": [
          "ResourceApi"
        ],
        "operationId": "ResourceApi_GetBasicRolesByCustomerType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "customerTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.RoleViewModel"
              }
            }
          }
        }
      }
    },
    "/ResourceApi/GetClientRole": {
      "post": {
        "tags": [
          "ResourceApi"
        ],
        "operationId": "ResourceApi_GetClientRole",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "customerTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ResourceApi/GetResource": {
      "post": {
        "tags": [
          "ResourceApi"
        ],
        "operationId": "ResourceApi_GetResource",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ClientResourceQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ResourceApi/GetRoleResource": {
      "post": {
        "tags": [
          "ResourceApi"
        ],
        "operationId": "ResourceApi_GetRoleResource",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.RoleResourceViewModel"
            }
          }
        }
      }
    },
    "/ResourceApi/HasResource": {
      "post": {
        "tags": [
          "ResourceApi"
        ],
        "operationId": "ResourceApi_HasResource",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ResourceQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/SAML/AssertionConsumerService": {
      "post": {
        "tags": [
          "SAML"
        ],
        "summary": "Get assertion consumer service redirect address",
        "operationId": "SAML_AssertionConsumerService",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.RedirectResult"
            }
          }
        }
      }
    },
    "/SAML/SLOService": {
      "post": {
        "tags": [
          "SAML"
        ],
        "operationId": "SAML_SLOService",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SAML/InitiatingSLO": {
      "post": {
        "tags": [
          "SAML"
        ],
        "operationId": "SAML_InitiatingSLO",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SAML/GetSAMLMetadata": {
      "post": {
        "tags": [
          "SAML"
        ],
        "operationId": "SAML_GetSAMLMetadata",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SAML/MetadataImport": {
      "post": {
        "tags": [
          "SAML"
        ],
        "operationId": "SAML_MetadataImport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "metadataUrl",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SAML/docebo": {
      "post": {
        "tags": [
          "SAML"
        ],
        "operationId": "SAML_docebo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ScheduleCalendar/IsScheduleTimeExistWo": {
      "get": {
        "tags": [
          "ScheduleCalendar"
        ],
        "summary": "Is schedule time exist wo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Schedule Calendar</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Is schedule time exist wo</p>",
        "operationId": "ScheduleCalendar_IsScheduleTimeExistWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "query",
            "description": "technician id",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start time",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "End time",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ScheduleCalendar/GetBTOReasons": {
      "get": {
        "tags": [
          "ScheduleCalendar"
        ],
        "summary": "Gets the bto reasons.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Schedule Calendar</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get the bto reasons</p>",
        "operationId": "ScheduleCalendar_GetBTOReasons",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataUserScheduleReasonEntity"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendar/CreateBTO": {
      "post": {
        "tags": [
          "ScheduleCalendar"
        ],
        "summary": "Create the bto.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Schedule Calendar</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Create the bto</p>",
        "operationId": "ScheduleCalendar_CreateBTO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The bto entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ScheduleCalendar/UpdateBTO": {
      "post": {
        "tags": [
          "ScheduleCalendar"
        ],
        "summary": "Update the bto.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Schedule Calendar</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update the bto</p>",
        "operationId": "ScheduleCalendar_UpdateBTO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "description": "The bto entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserScheduleEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ScheduleCalendar/DeleteBTO": {
      "delete": {
        "tags": [
          "ScheduleCalendar"
        ],
        "summary": "Delete the bto.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Technician -&gt; Schedule Calendar</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Delete the bto</p>",
        "operationId": "ScheduleCalendar_DeleteBTO",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity.userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.reasonId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.scheduleStartTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.scheduleEndTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.comments",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.cellPhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.imagePath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.imageUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.refId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entity.userModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entity.userModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "entity.userModel.firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.isAllowMobile",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.isAllowWeb",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.roleTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.userModel.roles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {},
            "collectionFormat": "multi"
          },
          {
            "name": "entity.userModel.roleId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.approveLimit",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.userModel.allowLoginStartDateUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.userModel.allowLoginEndDateUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.userModel.lockoutEndDateUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.userModel.lockoutEnabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.accessFailedCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.userModel.lockoutType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.userModel.modifyUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.modifyDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.userModel.createDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.userModel.isReceiveSMSAlert",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.isReceiveEmail",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.isAcceptStandardNTE",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.userModel.houseOwnerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.locationResidentialId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.userModel.coveredUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.reason.typeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.reason.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.reason.id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.smsNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.is24HR",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.locationTypeId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationSubTypeId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.openDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.closeDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.status",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.gps.lat",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.gps.lng",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.zipCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.addressLine1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.addressLine2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.zipCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.address.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.fax",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.createDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.createUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.modifyDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.modifyUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.active",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.logoPath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.logoUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.clientCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.userCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.attachmentCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.createDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.client.createUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.modifyDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.client.modifyUserId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.isVIP",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.customerTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.callCenterNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.isEnableServiceFee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.serviceFeeRate",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.isEnablePlatformFee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.platformFeeRate",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.rspDomain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.ownerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.isVirtualClient",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.contact.firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.middleName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.phoneExt",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.contact.fax",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.addressLine1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.addressLine2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.zipCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.address.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.customerType.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.customerType.id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.isConfirmationEmailOptIn",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isUsesClientPortal",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.houseOwnerDomain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.clientPreferredStatusId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.isBypassManagerToDoList",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isInvoiceApprovalActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.invoiceApprovalHours",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.customerTypeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.isInHouseInvoiceProcess",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.inHouseInvoiceServiceFeeAmount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.isInHouseInvoiceServiceFeeTaxable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isPassThroughInvoiceProcess",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.passThroughInvoiceServiceFeeAmount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.isPassThroughInvoiceServiceFeeTaxable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.passThroughInvoiceProcess",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.isConfigDueDate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isInvoiceDiscount",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isEnableTemperaturePriorityConfig",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isEnableOneRecommendedAffiliate",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isEnablePriorityExcludeNonWorkingTime",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.isEnabledPreDispatch",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.businessTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.isEnableTurnRehabCapitalProject",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.replyRPANeedCCUserType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.isEnableUnderWarranty",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.client.pcdaPackageId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.pcdaAutomaticDeferralHours",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.client.woStatusAfterDeclinePCDA",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.client.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.client.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationTypeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationSubTypeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.locationServiceProvider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.lat",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.lng",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.callPhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.homePhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.officePhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.gateCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.isActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.locationPriorityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.floorType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.ttsqft",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.truckDay",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.relocationDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "entity.location.primaryAffiliateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.isHighRisk",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.isHOA",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.isMaintenanceHold",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.onPlan",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.addressLine1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.addressLine2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.legacyLocationNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.districtManager",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.isAutoRFI",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.classificationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity.location.editOldValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.editNewValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.location.clientCustomerType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ]
          },
          {
            "name": "entity.location.isActiveLocation",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entity.location.sowTrigger",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.location.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.addressLine",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.zipCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entity.lat",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.lng",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "entity.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetDailySummaryList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetDailySummaryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.technicianIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiRepo.DailySummaryResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetDailySummaryExportExcel": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetDailySummaryExportExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.technicianIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiRepo.ExportDailySummaryResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetRegionList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetRegionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetRegionCurrentTime": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetRegionCurrentTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.RegionCurrentTimeViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetTechnicianDetail": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetTechnicianDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.technicianIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TechnicianDetailViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetTechnicianTimeShaftList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetTechnicianTimeShaftList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.technicianIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TimerShaftViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetTechnicianWorkList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetTechnicianWorkList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TechnicianWorkViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetVisitDetail": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetVisitDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.visitId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.isAassigned",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.VisitDetailViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetVisitDetailWoList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetVisitDetailWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.visitId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.isAassigned",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.VisitDetailWoViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetVisitDetailEventLogs": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetVisitDetailEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.VisitEventLogViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarApi/GetVisitUnassignedList": {
      "get": {
        "tags": [
          "ScheduleCalendarApi"
        ],
        "operationId": "ScheduleCalendarApi_GetVisitUnassignedList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel.summaryDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "queryModel.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.locationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.district",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.classificationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.groups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.regions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.districts",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.classificationIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "queryModel.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "queryModel.closeRepleacSpace",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryModel.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "queryModel.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.VisitUnassignedViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetCurrentUserRegionList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetCurrentUserRegionList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetRegionCurrentTime": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetRegionCurrentTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.CurrentUserRegionQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.CurrentUserRegionViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetCurrentUserRegionTechnicians": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetCurrentUserRegionTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.CurrentUserRegionTechnicianQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetDailySummaryList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetDailySummaryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetDailySummaryExportExcel": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetDailySummaryExportExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.ExportDailySummaryResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetManualIntradayOptimizationResult": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetManualIntradayOptimizationResult",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.ManualIntradyOptimizationQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianTimeShaftViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetDataZipCodeDictionary": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetDataZipCodeDictionary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "zipCodes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Collections.Generic.Dictionary[System.String,Moon.Infrastructure.IDataZipCode]]"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetTechnicianDetail": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetTechnicianDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.TechnicianDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianDetailViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetAssignedTechnicianList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetAssignedTechnicianList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.AssignedTechnicianQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.AssignedTechnicianResultModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetTechnicianTimeShaftList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetTechnicianTimeShaftList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.TimerShaftQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TimerShaftViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetUnassignedLocationVisitList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetUnassignedLocationVisitList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.UnassignedLocationVisitQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.UnassignedLocationVisitViewModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetVisitDetail": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetVisitDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.VisitDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.VisitDetailViewModel"
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetVisitWoList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetVisitWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.VisitDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.WoOrdersViewModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleCalendarIHApi/GetManualTechnicianList": {
      "post": {
        "tags": [
          "ScheduleCalendarIHApi"
        ],
        "operationId": "ScheduleCalendarIHApi_GetManualTechnicianList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.TechnicianViewModel"
              }
            }
          }
        }
      }
    },
    "/ScheduleOptimization/CanVisitDriven": {
      "get": {
        "tags": [
          "ScheduleOptimization"
        ],
        "operationId": "ScheduleOptimization_CanVisitDriven",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/ScheduleOptimization/GetWorkOrderScheduleRecommends": {
      "get": {
        "tags": [
          "ScheduleOptimization"
        ],
        "operationId": "ScheduleOptimization_GetWorkOrderScheduleRecommends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "scheduleInput.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scheduleInput.locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleInput.serviceCodeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleInput.priorityId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "scheduleInput.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ScheduleOptimization/GetWorkOrderRescheduleRecommends": {
      "get": {
        "tags": [
          "ScheduleOptimization"
        ],
        "operationId": "ScheduleOptimization_GetWorkOrderRescheduleRecommends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ScheduleOptimization/GetScheduleCalendarRecommends": {
      "get": {
        "tags": [
          "ScheduleOptimization"
        ],
        "operationId": "ScheduleOptimization_GetScheduleCalendarRecommends",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "rescheduleInput.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rescheduleInput.visitId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rescheduleInput.startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ScheduleOptimization/RescheduleConfirm": {
      "post": {
        "tags": [
          "ScheduleOptimization"
        ],
        "operationId": "ScheduleOptimization_RescheduleConfirm",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "confirmInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.ScheduleOptimization.Models.RescheduleConfirmInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SelectiveExport/GetAllExportColumn": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "operationId": "SelectiveExport_GetAllExportColumn",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CustomExportRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SelectiveExport/SaveReactiveRuleAndExport": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "operationId": "SelectiveExport_SaveReactiveRuleAndExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserWOExportEntity"
            }
          },
          {
            "name": "cols",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserWOExportColsEntity"
              }
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SelectiveExport/SaveRecurrentRuleAndExport": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "operationId": "SelectiveExport_SaveRecurrentRuleAndExport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserWOExportEntity"
            }
          },
          {
            "name": "cols",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserWOExportColsEntity"
              }
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SelectiveExport/GetRuleList": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "summary": "Get rule list",
        "operationId": "SelectiveExport_GetRuleList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserWOExportQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.UserWOExportEntity"
              }
            }
          }
        }
      }
    },
    "/SelectiveExport/GetCustomWOExportCols": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "operationId": "SelectiveExport_GetCustomWOExportCols",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UserWOExportColsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SelectiveExport/Delete": {
      "post": {
        "tags": [
          "SelectiveExport"
        ],
        "operationId": "SelectiveExport_Delete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userWOExportId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceAsset/IsShowServiceAsset": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "summary": "Is show service asset",
        "operationId": "ServiceAsset_IsShowServiceAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "wo Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetDefaultManufacturer": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetDefaultManufacturer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetAllManufacturer": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetAllManufacturer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetEquipmentType": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetEquipmentType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetServiceAssetPageList": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "summary": "Get service asset list",
        "operationId": "ServiceAsset_GetServiceAssetPageList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "description": "service Asse Query Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceAssetQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AssetViewModel"
              }
            }
          }
        }
      }
    },
    "/ServiceAsset/GetServiceAsset": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetServiceAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetFilterSize": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetFilterSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetBeltSize": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetBeltSize",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceAsset/GetAssetRequestWoPageList": {
      "post": {
        "tags": [
          "ServiceAsset"
        ],
        "operationId": "ServiceAsset_GetAssetRequestWoPageList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "requestWOQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RequestWOListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetProjectLocationSummary": {
      "post": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get project location summary",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Survey Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Project Location summary</p>",
        "operationId": "ServiceMeshSurvey_GetProjectLocationSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationSummaryQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetClientProjectLocationSummaryResponse"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetProjectLocationHistory": {
      "get": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get project location history",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Survey Detail -&gt; History</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Project Location History</p>",
        "operationId": "ServiceMeshSurvey_GetProjectLocationHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model.projectLocationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "model.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryResponse"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetQuestionnaireContent": {
      "post": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get questionnaire content by questionnaire id",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; SurveyEditor</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get questionnaire content by questionnaire id</p>",
        "operationId": "ServiceMeshSurvey_GetQuestionnaireContent",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "questionnaireId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.ResponseBase[M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireModel]"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetSurveyAnswers": {
      "post": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get Survey Answer Parts",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Survey Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Survey Answer Parts</p>",
        "operationId": "ServiceMeshSurvey_GetSurveyAnswers",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetSurveyAnswerModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetSurveyAnswerResponse"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetProjectActionResource": {
      "post": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get project action resource ids",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project action resource ids</p>",
        "operationId": "ServiceMeshSurvey_GetProjectActionResource",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.ResponseBase[M2.Entity.Module.Survey.ServiceMeshSurvey.DataListModel[System.Int32]]"
            }
          }
        }
      }
    },
    "/ServiceMeshSurvey/GetProjectLocationActionResource": {
      "post": {
        "tags": [
          "ServiceMeshSurvey"
        ],
        "summary": "Get project location action resource ids",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project location action resource ids</p>",
        "operationId": "ServiceMeshSurvey_GetProjectLocationActionResource",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.ResponseBase[M2.Entity.Module.Survey.ServiceMeshSurvey.DataListModel[System.Int32]]"
            }
          }
        }
      }
    },
    "/ServiceRequest/Index": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/Details": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_Details",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/Create": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_Create",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/CommercialCreate": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_CommercialCreate",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/JPMCCreate": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_JPMCCreate",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/CreateWoAndServiceRequest": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Create WO and SR for residential SR V1.0",
        "operationId": "ServiceRequest_CreateWoAndServiceRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestWO",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestWOModel"
            }
          },
          {
            "name": "residentPreferredSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.PreferredScheduleTimeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestWOResultModel"
            }
          }
        }
      }
    },
    "/ServiceRequest/BatchHandleWoAndServiceRequest": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_BatchHandleWoAndServiceRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchServiceRequestModels",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Business.Modules.ServiceRequest.Create.BatchServiceRequestModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/PreCreateWo": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Pre-created wo",
        "operationId": "ServiceRequest_PreCreateWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestWO",
            "in": "body",
            "description": "service Request WO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestWOModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ServiceRequest/UpdateServiceRequestDescription": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_UpdateServiceRequestDescription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceRequestEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/GetServiceRequestUnreadMessagList": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Get SR unread messag list by SR id",
        "operationId": "ServiceRequest_GetServiceRequestUnreadMessagList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/ServiceRequestWoListExcelByLink": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Export SR's WO list",
        "operationId": "ServiceRequest_ServiceRequestWoListExcelByLink",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestWOListQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/ExportServiceRequestByServer": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Export SR list directly",
        "operationId": "ServiceRequest_ExportServiceRequestByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/ExportServiceRequestNotResidentialByServer": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Immediately export not residential client SR",
        "operationId": "ServiceRequest_ExportServiceRequestNotResidentialByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/ExportServiceRequestBySendEmail": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Export SR list to excel by send email",
        "operationId": "ServiceRequest_ExportServiceRequestBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ServiceRequest/ExportServiceRequestNotResidentialBySendEmail": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Export not residential client SR by send email",
        "operationId": "ServiceRequest_ExportServiceRequestNotResidentialBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/CreateInteractionLogNotes": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_CreateInteractionLogNotes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientWOReactiveInteractionLogNoteEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/CreateNoteAttachment": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "operationId": "ServiceRequest_CreateNoteAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientWOReactiveInteractionLogNoteAttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequest/IsABServiceRequest": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Check the location is enabled SR feature",
        "operationId": "ServiceRequest_IsABServiceRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ServiceRequest/GetServiceRequestFeatureToggle": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Get SR feature toggle list",
        "operationId": "ServiceRequest_GetServiceRequestFeatureToggle",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "featureToggleIds",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Business.ServiceRequestFeatureToggleModel"
              }
            }
          }
        }
      }
    },
    "/ServiceRequest/SetServiceRequestDueDate": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Set SR due date",
        "operationId": "ServiceRequest_SetServiceRequestDueDate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "srId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/ServiceRequest/GetNewlyCreatedInfoThenDeleteInRedis": {
      "post": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Get newly created info then delete in redis",
        "operationId": "ServiceRequest_GetNewlyCreatedInfoThenDeleteInRedis",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "redisKey",
            "in": "body",
            "description": "redis Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.ServiceRequest.ServiceRequestActionModel"
              }
            }
          }
        }
      }
    },
    "/ServiceRequest/GetReferredServiceMapping": {
      "get": {
        "tags": [
          "ServiceRequest"
        ],
        "summary": "Get referred service mapping",
        "operationId": "ServiceRequest_GetReferredServiceMapping",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "referredService.clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.referral",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.contact",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.serviceCategoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.serviceTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.serviceCodeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.redirectStatement",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.hperLink",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "referredService.asc",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "referredService.flag",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "referredService.noNumNavigation",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ReferredServiceMappingEntity"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetGanttChartData": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetGanttChartData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.GanttListResult"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetFirstPhotoGalleryData": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetFirstPhotoGalleryData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.FirstPhotoGalleryResult"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetAllPhotoDataByServiceRequestId": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetAllPhotoDataByServiceRequestId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.PhotoItemGalleryResult"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetWOList": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetWOList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestWOListQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetWOListCount": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetWOListCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestWOListQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetServiceRequestWOMainDataByServiceRequestId": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetServiceRequestWOMainDataByServiceRequestId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetPhoneTypeList": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetPhoneTypeList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.IdValueModel"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestApi/InitSearchFieldsData": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_InitSearchFieldsData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.WOListSearchFieldsResult"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/ServiceRequestWoNum": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_ServiceRequestWoNum",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetSummaryAllData": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetSummaryAllData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.SummaryAllDataQueryResult"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetServiceRequestList": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetServiceRequestList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestModelResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetServiceRequestCount": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetServiceRequestCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetServiceRequestNumber": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetServiceRequestNumber",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetServiceRequestName": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetServiceRequestName",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestApi/GetRecommendServiceCode": {
      "post": {
        "tags": [
          "ServiceRequestApi"
        ],
        "operationId": "ServiceRequestApi_GetRecommendServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "clientId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCodeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.RecommendServiceCodeModel"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/ExportSRLocationWoListByLink": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Export SR WO list to excel",
        "operationId": "ServiceRequestSummary_ExportSRLocationWoListByLink",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestExportQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/GetLocationData": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Get location data",
        "operationId": "ServiceRequestSummary_GetLocationData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ServiceRequest.ProjectLocationViewModel"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/CreateServiceRequestAttachment": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Create SR attachment",
        "operationId": "ServiceRequestSummary_CreateServiceRequestAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entities",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientServiceRequestAttachmentEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientServiceRequestAttachmentEntity"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/UpdateServiceRequestAttachment": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Update Service Request attachment visible",
        "operationId": "ServiceRequestSummary_UpdateServiceRequestAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "visible",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/GetAttachmentByServiceRequestId": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Get attachments by SR id",
        "operationId": "ServiceRequestSummary_GetAttachmentByServiceRequestId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientServiceRequestAttachmentViewModel"
              }
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/UpdateServiceRequestRootcauseById": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "operationId": "ServiceRequestSummary_UpdateServiceRequestRootcauseById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.UpdateServiceRequestRootcauseQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/UpdateServiceRequestList": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "operationId": "ServiceRequestSummary_UpdateServiceRequestList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ServiceRequestLocWoListEditQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/MoveServiceRequest": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "operationId": "ServiceRequestSummary_MoveServiceRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ChangeWoViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/LocationAsset": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "operationId": "ServiceRequestSummary_LocationAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetQueryModel"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/LocationPart": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "operationId": "ServiceRequestSummary_LocationPart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AssetPartQueryModel"
            }
          },
          {
            "name": "locationAssetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/ServiceRequestSummary/GetAllServiceCategory": {
      "post": {
        "tags": [
          "ServiceRequestSummary"
        ],
        "summary": "Get all service categories",
        "operationId": "ServiceRequestSummary_GetAllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
              }
            }
          }
        }
      }
    },
    "/Settings/Index": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Settings/OverView": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_OverView",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimMap/AlertMap": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_AlertMap",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimMap/DailyMap": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_DailyMap",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimMap/GetAlertLocation2": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetAlertLocation2",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationSnowAlertQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetAllListData": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetAllListData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetAlertLocation": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetAlertLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationSnowAlertQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetNext24HoursWeather": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetNext24HoursWeather",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetTodaysWeatherForCurrentUser": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetTodaysWeatherForCurrentUser",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetCompletedWoDetail": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetCompletedWoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetCompletedWo": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetCompletedWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/ServiceStatusReport": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_ServiceStatusReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/ServiceCodeReport": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_ServiceCodeReport",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimMap/GetWeatherByWo": {
      "post": {
        "tags": [
          "SimMap"
        ],
        "operationId": "SimMap_GetWeatherByWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isreactive",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Index": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ResidentialIndex": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ResidentialIndex",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/List": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/WoHistoryList": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_WoHistoryList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WoBaseQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/HeatMapList": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_HeatMapList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Details": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RRequestEdit": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RRequestEdit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woNum",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/One": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_One",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/YearToDateByServiceCategory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_YearToDateByServiceCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ResponsibleEntity": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ResponsibleEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetLocationAttributes": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetLocationAttributes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "residentId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Landlord": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Landlord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Landscaping": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Landscaping",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/FloorCare": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_FloorCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/WoIsClientCreate": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_WoIsClientCreate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/WoEventLogs": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetIssuePhotos": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetIssuePhotos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/WoIvrs": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_WoIvrs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/WoRescheduleLogs": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_WoRescheduleLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CommonQuestion": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CommonQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CommonQuestionAnswer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CommonQuestionAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/SaveCommonAnswer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_SaveCommonAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "answers",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CommonAnswer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CommonAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ServiceCodeAnswer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ServiceCodeAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CheckOutAnswer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CheckOutAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Ovw": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AddWatch": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RemoveWatch": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Confirmation": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Confirmation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/SendEmail": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_SendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailAddress",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AssignToSeniorManager": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AssignToSeniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AssignToJuniorManager": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AssignToJuniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CanAssignToSeniorManager": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CanAssignToSeniorManager",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CanCancelAssign": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CanCancelAssign",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CancelAssign": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CancelAssign",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AssignOptions": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AssignOptions",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AssignHistory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AssignHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/CanApproveOrRejectSelfHelp": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_CanApproveOrRejectSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ApproveSelfHelp": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ApproveSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RejectSelfHelp": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RejectSelfHelp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Escalate": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Escalate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "escalate",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/SetEHS": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_SetEHS",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEHS",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/UpdateIsLOBChargeBack": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_UpdateIsLOBChargeBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLOBChargeBack",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/HreIssue": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_HreIssue",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/IsWoRfi": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_IsWoRfi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/IsChargeback": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_IsChargeback",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Proposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Proposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/Invoice": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_Invoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllStatus": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllCustomerWoStatus": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllCustomerWoStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllServiceCategory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllServiceType": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllServiceCode": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllWotype": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllWotype",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllPriority": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllPriority",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/AllOwnership": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_AllOwnership",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetAllListDatas": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposalHistory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposalHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoice": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoiceHistory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoiceHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposalItem": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposalItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoiceItem": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientBaseLineItem": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientBaseLineItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposalAttachment": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposalAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoiceAttachment": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoiceAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetNextActionList": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetNextActionList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ApproveClientProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ApproveClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/PrintProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_PrintProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RejectClientProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RejectClientProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ApproveInvoice": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ApproveInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RejectInvoice": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RejectInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/SetAsset": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_SetAsset",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/SetPart": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_SetPart",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assetId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/OpenedStatuses": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_OpenedStatuses",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportResidentialReactiveWoExcelByServer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportResidentialReactiveWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportRetailReactiveWoExcelByServer": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportRetailReactiveWoExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportResidentReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportResidentReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportRetailReactiveWoExcelBySendEmail": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportRetailReactiveWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportExcel": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ResidentialReportWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ExportExcelForFD": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ExportExcelForFD",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetDeclineInfoList": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetDeclineInfoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RejectProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RejectProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.ReactiveWoDeclineInfoViewModel"
              }
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimReactiveWo/PreApproveProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_PreApproveProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/History": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_History",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoiceItemHistory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoiceItemHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposalItemHistory": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposalItemHistory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientInvoiceHistoryOne": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientInvoiceHistoryOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientProposalHistoryOne": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientProposalHistoryOne",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "historyId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ClientConfirmList": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ClientConfirmList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ProposalCompare": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ProposalCompare",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ReloadAffiliateProposal": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ReloadAffiliateProposal",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "proposalId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/HeatMap": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_HeatMap",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimReactiveWo/PrintPdf": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_PrintPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "msgQuery",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.MessageQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/PrintChargebackPdf": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_PrintChargebackPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/UpdateResidentDamage": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_UpdateResidentDamage",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isResidentDamage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/UpdateMaintenanceHold": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_UpdateMaintenanceHold",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isMaintenanceHold",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/GetLandlordInfo": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_GetLandlordInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/UpdateCustomerNTE": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_UpdateCustomerNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientNTE",
            "in": "body",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "name": "notes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/RemoveRFI": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_RemoveRFI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/ChangeWoStatus": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_ChangeWoStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "wo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.ReactiveWoChangeStatusViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimReactiveWo/IsPassThroughInvoiceServiceFeeTaxableByClient": {
      "post": {
        "tags": [
          "SimReactiveWo"
        ],
        "operationId": "SimReactiveWo_IsPassThroughInvoiceServiceFeeTaxableByClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Index": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Details": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "summary": "Get simRecurringWo detail html",
        "operationId": "SimRecurringWo_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/SimRecurringWo/List": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ServiceCategory": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ServiceTypes": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ServiceTypes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ServiceType": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ServiceType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ServiceCode": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/GetSimServiceCode": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_GetSimServiceCode",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/AllRegion": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_AllRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/GetAllListDatas": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/WoDetail": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "summary": "Get recuuring wo",
        "operationId": "SimRecurringWo_WoDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "woId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoEntity"
            }
          }
        }
      }
    },
    "/SimRecurringWo/WoIsRatingStatu": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_WoIsRatingStatu",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/IsWoRfi": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_IsWoRfi",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/WoIvrs": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_WoIvrs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/WoEventLogs": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_WoEventLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/WoRescheduleLogs": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_WoRescheduleLogs",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/CheckOutAnswer": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_CheckOutAnswer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/CustomerSatisfaction": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_CustomerSatisfaction",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/SendEmail": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_SendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mailAddress",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ResponsibleEntity": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "summary": "Get locationServiceType responsible list",
        "operationId": "SimRecurringWo_ResponsibleEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceTypeId",
            "in": "body",
            "description": "serviceTypeId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Ovw": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/AddWatch": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimRecurringWo/RemoveWatch": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SimRecurringWo/AllStatus": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/JpAllStatus": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_JpAllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Landlord": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_Landlord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Weather": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_Weather",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/Landscaping": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_Landscaping",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/FloorCare": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_FloorCare",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/LeaseRemaining": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_LeaseRemaining",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/RetailExportExcelByServer": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_RetailExportExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "useBiExport",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ResidentialExportExcelByServer": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ResidentialExportExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ExportRetailRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ExportRetailRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ExportResidentialRecurringWoExcelBySendEmail": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ExportResidentialRecurringWoExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/ClientConfirmList": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_ClientConfirmList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/AllConfirmationTypes": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_AllConfirmationTypes",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/RemoveRFI": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_RemoveRFI",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/GetVisitLogList": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_GetVisitLogList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/GetWoCategoryList": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_GetWoCategoryList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/GetRecurringInvoiceData": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_GetRecurringInvoiceData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/PrintSIMRecurringInvoice": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_PrintSIMRecurringInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/SetEHS": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_SetEHS",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isEHS",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SimRecurringWo/UpdateIsLOBChargeBack": {
      "post": {
        "tags": [
          "SimRecurringWo"
        ],
        "operationId": "SimRecurringWo_UpdateIsLOBChargeBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isLOBChargeBack",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartQ/Index": {
      "post": {
        "tags": [
          "SmartQ"
        ],
        "summary": "Get idnex html",
        "operationId": "SmartQ_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/SmartQ/Upload": {
      "post": {
        "tags": [
          "SmartQ"
        ],
        "operationId": "SmartQ_Upload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartQ/UploadWoFile": {
      "post": {
        "tags": [
          "SmartQ"
        ],
        "operationId": "SmartQ_UploadWoFile",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "attachmentEntities",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "linkStayTime",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartQ/VerifyToken": {
      "post": {
        "tags": [
          "SmartQ"
        ],
        "operationId": "SmartQ_VerifyToken",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartQApi/GetWoInfo": {
      "post": {
        "tags": [
          "SmartQApi"
        ],
        "operationId": "SmartQApi_GetWoInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "authToken",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.WoInfoResultModel"
            }
          }
        }
      }
    },
    "/SmartReply/GetSmartReplyOptions": {
      "get": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get smart reply options.",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get smart reply options</p>",
        "operationId": "SmartReply_GetSmartReplyOptions",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SmartReplyOptionModel"
              }
            }
          }
        }
      }
    },
    "/SmartReply/Cancel": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Cancel WO",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Cancel WO</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Cancel WO</p>",
        "operationId": "SmartReply_Cancel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "cancelledWo",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.CancelledWoEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SmartReply/GetWoVersion": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "operationId": "SmartReply_GetWoVersion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartReply/DispatchInHouse": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Dispatch In-House",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch In-House</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Dispatch In-House</p>",
        "operationId": "SmartReply_DispatchInHouse",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SmartReply/WorkOrderBase": {
      "get": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get work order base for smart reply",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get work order base for smart reply</p>",
        "operationId": "SmartReply_WorkOrderBase",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "WO Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SmartReplyWorkOrderBaseModel"
            }
          }
        }
      }
    },
    "/SmartReply/DispatchTieredAffiliate": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Dispatch Tiered Affiliate",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Tiered Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Dispatch Tiered Affiliate</p>",
        "operationId": "SmartReply_DispatchTieredAffiliate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recommendReasonId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SmartReply/GetDispatchTieredAffiliate": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get Dispatch Tiered Affiliate",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Tiered Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Dispatch Tiered Affiliate</p>",
        "operationId": "SmartReply_GetDispatchTieredAffiliate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SmartReply/DispatchSpecificAffiliate": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Dispatch Specific Affiliate",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Dispatch Specific Affiliate</p>",
        "operationId": "SmartReply_DispatchSpecificAffiliate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SmartReply/GetDispatchSpecificAffiliateData": {
      "get": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get Dispatch Specific Affiliate Data",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Dispatch Specific Affiliate Data</p>",
        "operationId": "SmartReply_GetDispatchSpecificAffiliateData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SmartReplyDispatchSpecificAffiliateData"
            }
          }
        }
      }
    },
    "/SmartReply/CreateWarrantyEventLog": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Create Warranty EventLog",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Create Warranty EventLog</p>",
        "operationId": "SmartReply_CreateWarrantyEventLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/SmartReply/GetWoWarrantyDetailPageList": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get Wo Warranty Detail Page List",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Wo Warranty Detail Page List</p>",
        "operationId": "SmartReply_GetWoWarrantyDetailPageList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.LocationWarrantyDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.LocationWarrantyDetailEntity]"
            }
          }
        }
      }
    },
    "/SmartReply/GetAffiliates": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get Affiliates",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Affiliates</p>",
        "operationId": "SmartReply_GetAffiliates",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.AffiliateQueryModel"
            }
          },
          {
            "name": "isWarranty",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SmartReplyAffiliateItemAndCountViewModel"
            }
          }
        }
      }
    },
    "/SmartReply/GetDispatchRecallWo": {
      "get": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Get Dispatch Recall WO",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Dispatch Specific Affiliate</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Dispatch Recall WO</p>",
        "operationId": "SmartReply_GetDispatchRecallWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
            }
          }
        }
      }
    },
    "/SmartReply/RequestIssuePhotos": {
      "post": {
        "tags": [
          "SmartReply"
        ],
        "summary": "Request Issue Photos",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Detail -&gt; Communication Tab -&gt; Smart Reply -&gt; Request Issue Photos</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Request Issue Photos</p>",
        "operationId": "SmartReply_RequestIssuePhotos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SmartQ.AttachmentRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/SMSU/Index": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "operationId": "SMSU_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SMSU/Video": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "operationId": "SMSU_Video",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SMSU/Guides": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "operationId": "SMSU_Guides",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SMSU/Update": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "operationId": "SMSU_Update",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ArticalPatchModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SMSU/GetAttachment": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "summary": "Get attachment",
        "operationId": "SMSU_GetAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ArticalQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.TrainingVideo.VideoInfoViewModel"
              }
            }
          }
        }
      }
    },
    "/SMSU/Guide": {
      "post": {
        "tags": [
          "SMSU"
        ],
        "operationId": "SMSU_Guide",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/SO/WorkOrderRecommendTechnicians": {
      "post": {
        "tags": [
          "SO"
        ],
        "operationId": "SO_WorkOrderRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendTimesInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RecommendTimesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SO/WorkOrderRescheduleRecommendTechnicians": {
      "post": {
        "tags": [
          "SO"
        ],
        "operationId": "SO_WorkOrderRescheduleRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "workOrderRescheduleRecommendTimesInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.WorkOrderRescheduleRecommendTimesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SO/ProcareRecommendTechnicians": {
      "post": {
        "tags": [
          "SO"
        ],
        "operationId": "SO_ProcareRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareRecommendTimeInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProcareRecommendTimeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/SO/RescheduleProcareRecommendTechnicians": {
      "post": {
        "tags": [
          "SO"
        ],
        "operationId": "SO_RescheduleProcareRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "procareRecommendTimeInput",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RescheduleProcareRecommendTimeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/StandardizeCommercialServiceRequest/BatchHandleWoAndServiceRequest": {
      "post": {
        "tags": [
          "StandardizeCommercialServiceRequest"
        ],
        "operationId": "StandardizeCommercialServiceRequest_BatchHandleWoAndServiceRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "batchServiceRequestModels",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Business.Modules.ServiceRequest.Create.BatchServiceRequestModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/StandardNte/Index": {
      "post": {
        "tags": [
          "StandardNte"
        ],
        "operationId": "StandardNte_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/StandardNte/GetServiceCodeNteList": {
      "post": {
        "tags": [
          "StandardNte"
        ],
        "operationId": "StandardNte_GetServiceCodeNteList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientServiceCodeNteQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/StandardNte/GetIsOptIn": {
      "post": {
        "tags": [
          "StandardNte"
        ],
        "operationId": "StandardNte_GetIsOptIn",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/StandardNte/AcceptOrDeclineStandardNte": {
      "post": {
        "tags": [
          "StandardNte"
        ],
        "operationId": "StandardNte_AcceptOrDeclineStandardNte",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "isAccept",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/StandardNte/UpdateAcceptOrDeclineStandardNTE": {
      "post": {
        "tags": [
          "StandardNte"
        ],
        "operationId": "StandardNte_UpdateAcceptOrDeclineStandardNTE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "queryModel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ServiceCategoryUserMappingQueryModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/Survey/CanEdit": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Current user is can edit question",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial -&gt; Survey -&gt; Complete Project Location List(2/3/15~) -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Current user is can edit question</p>",
        "operationId": "Survey_CanEdit",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey15Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 15 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 15 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey15Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SugarModel.Entity.IpadSurveryAnswerEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey19Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 19 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 19 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey19Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SugarModel.Entity.IpadSurveryAnswerEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey20Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 20 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 20 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey20Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/GetProjectByLocation": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get survey projects by query",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get survey projects by query</p>",
        "operationId": "Survey_GetProjectByLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiProjectQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.Web.Client.Models.Survey.ProjectSummaryDto]"
            }
          }
        }
      }
    },
    "/Survey/ProjectLocations": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project locations by query",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete/Cancel Project Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project locations by query</p>",
        "operationId": "Survey_ProjectLocations",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiLocationSurveyQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.Web.Client.Models.Survey.LocationSurveyListItemViewModel]"
            }
          }
        }
      }
    },
    "/Survey/GetSurveyTemplate": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get survey question template",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete/Cancel Project Location List(project type=15) -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get survey question template</p>",
        "operationId": "Survey_GetSurveyTemplate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SugarModel.Entity.V_SurveryTemplateEntity"
              }
            }
          }
        }
      }
    },
    "/Survey/ExportSurveyAnswerToPdf": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export project location survey pdf",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15) -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export project location survey pdf</p>",
        "operationId": "Survey_ExportSurveyAnswerToPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/Survey/SurveyExportQuestion": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export all project location questions answers excel for project",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Question Export(contol logic in front)</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export all project location questions answers excel for project</p>",
        "operationId": "Survey_SurveyExportQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyExportQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Survey/GetProjectAnswerInformationTwenty": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetProjectAnswerInformationTwenty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sectionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "questionItemKey",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.OptionCommentsAndPhotosShow"
            }
          }
        }
      }
    },
    "/Survey/AddProjectAnswerInformationTwenty": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Add project answer information(project type=20)",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(project type=20) -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Add project answer information(project type=20)</p>",
        "operationId": "Survey_AddProjectAnswerInformationTwenty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiAdditionalInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Survey/GetFileTemplateData": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project location file template datas",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial(GO/JPMC/AAP) -&gt; Survey -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project location file template datas</p>",
        "operationId": "Survey_GetFileTemplateData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SurveyProjectFileTemplateModel"
              }
            }
          }
        }
      }
    },
    "/Survey/GetFileTemplateAnswerByProjectLocationId": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project location all question answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial(GO/JPMC/AAP) -&gt; Survey -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project location all question answers</p>",
        "operationId": "Survey_GetFileTemplateAnswerByProjectLocationId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyProjectFileTemplateAnswerModel"
            }
          }
        }
      }
    },
    "/Survey/CancelProjectLocation": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Cancel project location",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Project Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Cancel project location</p>",
        "operationId": "Survey_CancelProjectLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Survey/Projects": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Project list view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Project list view</p>",
        "operationId": "Survey_Projects",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Survey/SurveyDashboard": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Project survey dashboard view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Project survey dashboard view</p>",
        "operationId": "Survey_SurveyDashboard",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Survey/SurveySummary": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_SurveySummary",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Mvc.StaticViewResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/Search": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Search",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/Locations": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Project location list view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey-&gt; Chart Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Project location list view</p>",
        "operationId": "Survey_Locations",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Survey/Details": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Project location detail view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey-&gt; Chart Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Project location detail view</p>",
        "operationId": "Survey_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "description": "project Location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Survey/StoreDetails": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Jump to the survey detail of the current user location",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal(SM role user) -&gt; Survey-&gt; Click Chart(have logic in front)</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Jump to the survey detail of the current user location</p>",
        "operationId": "Survey_StoreDetails",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.RedirectResult"
            }
          }
        }
      }
    },
    "/Survey/Calendar": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_Calendar",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/CalendarData": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_CalendarData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiLocationSurveyListItem"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/IndexSearchFields": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_IndexSearchFields",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyProjectIndexSeachFiedleModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetProjectListByQuery": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetProjectListByQuery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiProjectQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Survey.ProjectSummaryDto"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetAllAffiliateSurvey": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetAllAffiliateSurvey",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SurveyProjectLocationEntity"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/AllProjectSummary": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_AllProjectSummary",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyProjectSummaryModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetProjectById": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetProjectById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isOnlyme",
            "in": "body",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyProjectRateModel"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetCurrentUserId": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetCurrentUserId",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/ExportSummary": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export project locations summary by project query",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Export Summary</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export project locations summary by project query</p>",
        "operationId": "Survey_ExportSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyExportQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Survey/ExportQuestion": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export all project location questions by projectId",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Export Question</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export all project location questions by projectId</p>",
        "operationId": "Survey_ExportQuestion",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyExportQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Survey/ExportQuestionBySendEmail": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export all project location questions by projectId to email",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Export Question</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export all project location questions by projectId to email</p>",
        "operationId": "Survey_ExportQuestionBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyExportQuery"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurveySurveyer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_UpdateSurveySurveyer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyProjectLocationEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurveyScheduledTime": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update project location schedule time",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update project location schedule time</p>",
        "operationId": "Survey_UpdateSurveyScheduledTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduledTime",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyProjectLocationEntity"
            }
          }
        }
      }
    },
    "/Survey/Data": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project location info",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Location List(project type=22,23,24,25,26) -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project location info</p>",
        "operationId": "Survey_Data",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyDetailViewModel"
            }
          }
        }
      }
    },
    "/Survey/Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project location answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project location answers</p>",
        "operationId": "Survey_Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UploadSurveyPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Upload project location answer photo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal(Stroe role user) -&gt; Survey -&gt; Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Upload project location answer photo</p>",
        "operationId": "Survey_UploadSurveyPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoLabel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyPhotoGalleryModel"
            }
          }
        }
      }
    },
    "/Survey/GetSurveyProjectPermission": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project isClientMarkup value by project location",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(1,2,4,5,17,18) -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project isClientMarkup value by project location</p>",
        "operationId": "Survey_GetSurveyProjectPermission",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "description": "project Location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyProjectPermissionViewModel"
            }
          }
        }
      }
    },
    "/Survey/GetProjectQuestionCategories": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetProjectQuestionCategories",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectid",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetProjectQuestionSummary": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_GetProjectQuestionSummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "categoryName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectid",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SugarModel.Generated.survey_Question"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/GetPhotoHistoryById": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get photo edit historys",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Client photo mark up is true) -&gt; Project Location List -&gt; Detail -&gt; Photo MarkUp</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get photo edit historys</p>",
        "operationId": "Survey_GetPhotoHistoryById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "photoGalleryId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryHistoryModel"
              }
            }
          }
        }
      }
    },
    "/Survey/UpdateGalleryPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update photo edit content",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Client photo mark up is true) -&gt; Project Location List -&gt; Detail -&gt; Photo MarkUp</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update photo edit content</p>",
        "operationId": "Survey_UpdateGalleryPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "photoGalleryId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "base64",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comments",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryHistoryModel"
              }
            }
          }
        }
      }
    },
    "/Survey/UploadPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Upload photo answer",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Project type=6 for front code) -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Upload photo answer</p>",
        "operationId": "Survey_UploadPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Survey/Submit": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Confirm project location",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Project Location List -&gt; Detail -&gt; Summary</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Confirm project location</p>",
        "operationId": "Survey_Submit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Survey/UploadAddtionServicePhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Upload  addtion service photo answer",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Project type=4) -&gt; Project Location List -&gt; Detail -&gt; Select Additon Service Need choice</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Upload  addtion service photo answer</p>",
        "operationId": "Survey_UploadAddtionServicePhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
            }
          }
        }
      }
    },
    "/Survey/DeleteSurveyPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Delete answer photo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Delete answer photo</p>",
        "operationId": "Survey_DeleteSurveyPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey10Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 10 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 10 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey10Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey7Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 7 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 7 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey7Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey17Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 17 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 17 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey17Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey18Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 18 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 18 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey18Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey6Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 6 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 6 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey6Answer",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey5Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 5 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 5 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey5Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyAnswerFive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey4Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 4 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 4 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey4Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyAnswerFour"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey3Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 3 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 3 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey3Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyAnswerThree"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey2Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 2 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 10 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey2Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyAnswerTwo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/UpdateSurvey1Answer": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Update 1 project type project location survey answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; InComplete/Complete Location List -&gt; Survey Location Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update 1 project type survey answers</p>",
        "operationId": "Survey_UpdateSurvey1Answer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "answer",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyLocationAnswer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyAnswerEntity"
            }
          }
        }
      }
    },
    "/Survey/GetCommonAndPhotos": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get addtion service comment and photo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Project type=4) -&gt; Project Location List -&gt; Detail -&gt; Select Additon Service Need choice</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get addtion service comment and photo</p>",
        "operationId": "Survey_GetCommonAndPhotos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyCommentsQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyCommonAndPhotosModel"
            }
          }
        }
      }
    },
    "/Survey/CreateOrUpdateAddtionService": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Create addtion service comment",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(Project type=4) -&gt; Project Location List -&gt; Detail -&gt; Select Additon Service Need choice</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Create addtion service comment</p>",
        "operationId": "Survey_CreateOrUpdateAddtionService",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyCommentModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Survey/DeleteAdditionalInformationPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Delete additional information photo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(example:project type=2) -&gt; Project Location List -&gt; Detail -&gt; Any additional information?</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Delete additional information photo</p>",
        "operationId": "Survey_DeleteAdditionalInformationPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "sectionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "questionItemKey",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "photoId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Survey/DeleteAdditionalInformation": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Delete project answer information(project type=20,2)",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(project type=20,2) -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Delete project answer information(project type=20,2)</p>",
        "operationId": "Survey_DeleteAdditionalInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "sectionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "questionItemKey",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/Survey/GetAdditionalInformation": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project answer information",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(example:project type=2) -&gt; Project Location List -&gt; Detail -&gt; Any additional information?</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project answer information</p>",
        "operationId": "Survey_GetAdditionalInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "sectionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "questionItemKey",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.OptionCommentsAndPhotosShow"
            }
          }
        }
      }
    },
    "/Survey/CreateAdditionalInformation": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Create additional information comment",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(example:project type=2) -&gt; Project Location List -&gt; Detail -&gt; Any additional information?</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Create additional information comment</p>",
        "operationId": "Survey_CreateAdditionalInformation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalInfo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiAdditionalInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/Survey/UploadAdditionalInformationPhoto": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Upload additional information photo",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(example:project type=2) -&gt; Project Location List -&gt; Detail -&gt; Any additional information?</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Upload additional information photo</p>",
        "operationId": "Survey_UploadAdditionalInformationPhoto",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "base64",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.Survey.SurveyUploadAdditionalInformationPhotoModel"
            }
          }
        }
      }
    },
    "/Survey/ChangeStatus": {
      "post": {
        "tags": [
          "Survey"
        ],
        "operationId": "Survey_ChangeStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Survey/LoadFileUrlById": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Conver file path to file url",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Conver file path to file url</p>",
        "operationId": "Survey_LoadFileUrlById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "fileId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Survey/LoadFileUrlByIds": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Conver file paths to file urls",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey(project type=15) -&gt; Project Location List -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Conver file paths to file urls</p>",
        "operationId": "Survey_LoadFileUrlByIds",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "fileIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Survey/GetSurveryTemplateCategory": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get survery template categorys",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get survery template categorys</p>",
        "operationId": "Survey_GetSurveryTemplateCategory",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectid",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SugarModel.Entity.V_SurveryTemplateEntity"
              }
            }
          }
        }
      }
    },
    "/Survey/GetSurveySummary": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get survery category summary info",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get survery category summary info</p>",
        "operationId": "Survey_GetSurveySummary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectid",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "categoryName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SummaryCateSurvey"
              }
            }
          }
        }
      }
    },
    "/Survey/GetSurveySummaryCardCollection": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get survery category summary all info",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary -&gt; Detail -&gt; Click Chart(Answer)</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get survery category summary all info</p>",
        "operationId": "Survey_GetSurveySummaryCardCollection",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "questionId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientSurveyLocationQuestionModel"
              }
            }
          }
        }
      }
    },
    "/Survey/ExportSummaryCard": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export survey category summary info",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary -&gt; Detail -&gt; Export to Excel</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export survey category summary info</p>",
        "operationId": "Survey_ExportSummaryCard",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ApiSurveySummaryQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ExportApiResult"
            }
          }
        }
      }
    },
    "/Survey/SurveySummaryList": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Is survery category summary info page view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Complete Project Location List(project type=15,19) -&gt; Summary -&gt; Detail -&gt; Click Chart(Answer)</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Is survery category summary info page view</p>",
        "operationId": "Survey_SurveySummaryList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/Survey/GeneralConditionForClientProperty": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "General condition for client property",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial(IH) -&gt; Property -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export project location pdf</p>",
        "operationId": "Survey_GeneralConditionForClientProperty",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Controllers.SurveyController.GeneralConditionForClientPropertyModel"
              }
            }
          }
        }
      }
    },
    "/Survey/GetProjectLocationsData": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Get project locations for filter",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Survey -&gt; Project Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get project locations for filter</p>",
        "operationId": "Survey_GetProjectLocationsData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiLocationSurveyQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.Module.SurveyApiModel.ApiLocationSurveyListItem]"
            }
          }
        }
      }
    },
    "/Survey/SurveyExportPdf": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export project location pdf",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial(GO) -&gt; Survey -&gt; Complete Project Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export project location pdf</p>",
        "operationId": "Survey_SurveyExportPdf",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "projectType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/Survey/SurveyExportExcel": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Export project location excel",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portial(GO) -&gt; Survey -&gt; Complete Project Location List</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Export project location excel</p>",
        "operationId": "Survey_SurveyExportExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectLocationId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "projectType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.FileStreamResult"
            }
          }
        }
      }
    },
    "/SurveyProjectQuestionApi/GetIndexData": {
      "post": {
        "tags": [
          "SurveyProjectQuestionApi"
        ],
        "operationId": "SurveyProjectQuestionApi_GetIndexData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionResult"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/Index": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "All survey score view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>All survey score view</p>",
        "operationId": "SurveyScore_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/SurveyScore/Projects": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "operationId": "SurveyScore_Projects",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        },
        "deprecated": true
      }
    },
    "/SurveyScore/GetProjectByLocation": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "operationId": "SurveyScore_GetProjectByLocation",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiProjectQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.Survey.ProjectSummaryDto"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/SurveyScore/Detail": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "One location survey score view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Location Search -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>One location survey score view</p>",
        "operationId": "SurveyScore_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/SurveyScore/Regions": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Region level locations survey score view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Chart(RFM) -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Region level locations survey score view</p>",
        "operationId": "SurveyScore_Regions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/SurveyScore/Districts": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "District level locations survey score view",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Chart(RFM) -&gt; Detail -&gt; Chart -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>District level locations survey score view</p>",
        "operationId": "SurveyScore_Districts",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ViewResult"
            }
          }
        }
      }
    },
    "/SurveyScore/Summary": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get one location all survey project score summary",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Location Search -&gt; Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get one location all survey project score summary</p>",
        "operationId": "SurveyScore_Summary",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientSurveyLocationSummaryModel"
            }
          }
        }
      }
    },
    "/SurveyScore/SectionAnswers": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get one location all project one section all answers",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Location Search -&gt; Detail -&gt; Project Table -&gt; Title</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get one location all project one section all answers</p>",
        "operationId": "SurveyScore_SectionAnswers",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientSurveyProjectQuestionModel"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/PhotoGallery": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get location all survey photo gallery",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Location Search -&gt; Detail -&gt; Photo Gallery</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get location all survey photo gallerys</p>",
        "operationId": "SurveyScore_PhotoGallery",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyPhotoGalleryModel"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/AdditionServicePhotos": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get location all survey addition service photos",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; Location Search -&gt; Detail -&gt; Photo Gallery</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get location all survey addition service photos</p>",
        "operationId": "SurveyScore_AdditionServicePhotos",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ApiSurveyAddtionalServicePhotoGalleyModel"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/GetDivision": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get current user client projects all division score summary(query web no use)",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get current user client projects all division score summary(query web no use)</p>",
        "operationId": "SurveyScore_GetDivision",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ApiSurveySectionScoreQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientSurveyDivisionScoreItemModel"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/GetOverAll": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get current user client projects all over score summary",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get current user client projects all over score summary</p>",
        "operationId": "SurveyScore_GetOverAll",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ClientSurveyScoreItemModel"
            }
          }
        }
      }
    },
    "/SurveyScore/GetRegionAll": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "summary": "Get current user client score summary by division and region",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>(Standard Exterior)Client Portial(VP) -&gt; Survey -&gt; 'Switch to OVERALL' Btn -&gt; Index -&gt; RFM Chart -&gt; Region Detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get current user client score summary by division and region</p>",
        "operationId": "SurveyScore_GetRegionAll",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ApiSurveySectionScoreQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ClientSurveyRegionScoreItemModel"
              }
            }
          }
        }
      }
    },
    "/SurveyScore/GetDistrictAll": {
      "post": {
        "tags": [
          "SurveyScore"
        ],
        "operationId": "SurveyScore_GetDistrictAll",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ApiSurveySectionScoreQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.ClientSurveyLocationScoreItemModel]"
            }
          }
        }
      }
    },
    "/TaskCenter/Index": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "operationId": "TaskCenter_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TaskCenter/GetRegionList": {
      "get": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Gets the region list.",
        "operationId": "TaskCenter_GetRegionList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetAllCommunityList": {
      "get": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Get all community list",
        "operationId": "TaskCenter_GetAllCommunityList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetAllDistrictList": {
      "get": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Get all district list",
        "operationId": "TaskCenter_GetAllDistrictList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetTaskTypeList": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Gets the task type list.",
        "operationId": "TaskCenter_GetTaskTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TaskTypeListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.TaskTypeListResultModel"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetScoreTypeList": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Gets the score type list.",
        "operationId": "TaskCenter_GetScoreTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TaskScoreTypeListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.TaskScoreTypeListResultModel"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetClaimTypeList": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Gets the claim type list.",
        "operationId": "TaskCenter_GetClaimTypeList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TaskClaimTypeListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.TaskClaimTypeListResultModel"
              }
            }
          }
        }
      }
    },
    "/TaskCenter/GetTaskList": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Gets the task list.",
        "operationId": "TaskCenter_GetTaskList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The query.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TaskListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PageResult[M2.Entity.TaskListResultModel]"
            }
          }
        }
      }
    },
    "/TaskCenter/UpdateClaimUser": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Updates the claim user.",
        "operationId": "TaskCenter_UpdateClaimUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "description": "The task identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/TaskCenter/DeleteClaimUser": {
      "delete": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Deletes the claim user.",
        "operationId": "TaskCenter_DeleteClaimUser",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "description": "The task identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/TaskCenter/CreateOperateRecord": {
      "post": {
        "tags": [
          "TaskCenter"
        ],
        "summary": "Creates the operate record.",
        "operationId": "TaskCenter_CreateOperateRecord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "description": "The task identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "operateTypeId",
            "in": "body",
            "description": "The operate type identifier.",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "operateSource",
            "in": "body",
            "description": "The operate source.",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                1
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/TechnicianAPI/GetReturnTripNeededWo": {
      "post": {
        "tags": [
          "TechnicianAPI"
        ],
        "operationId": "TechnicianAPI_GetReturnTripNeededWo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.ReturnTripNeededWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.ReturnTripNeededWoViewModel]"
            }
          }
        }
      }
    },
    "/TestApi/GetWoById": {
      "post": {
        "tags": [
          "TestApi"
        ],
        "operationId": "TestApi_GetWoById",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/Tools/Detail": {
      "post": {
        "tags": [
          "Tools"
        ],
        "operationId": "Tools_Detail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/Tools/GetEmailDetailById": {
      "post": {
        "tags": [
          "Tools"
        ],
        "operationId": "Tools_GetEmailDetailById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TrainingVideo/ShowVideo": {
      "post": {
        "tags": [
          "TrainingVideo"
        ],
        "operationId": "TrainingVideo_ShowVideo",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TrainingVideo/GetClientVidioTrainingResources": {
      "post": {
        "tags": [
          "TrainingVideo"
        ],
        "operationId": "TrainingVideo_GetClientVidioTrainingResources",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/Index": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/IndexList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_IndexList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/ListContext": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_ListContext",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/PendingChangeOrdersList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_PendingChangeOrdersList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/CommunicationList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_CommunicationList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/RFIList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_RFIList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/TurnDashboard/CountOfCompletedJops": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_CountOfCompletedJops",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/CountOfJobsInProgress": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_CountOfJobsInProgress",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/CountofOpenJobsWithPendingChangeOrders": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_CountofOpenJobsWithPendingChangeOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/PendingChangeOrders": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_PendingChangeOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/ExportPendingChangeOrderExcelByServer": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_ExportPendingChangeOrderExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/ExportPendingChangeOrderExcelBySendEmail": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_ExportPendingChangeOrderExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/ExportPendingChangeOrder": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_ExportPendingChangeOrder",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          },
          {
            "name": "exportType",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/GetList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_GetList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/ExportList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_ExportList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/CountOfJobsInQCWalkReadyStatus": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_CountOfJobsInQCWalkReadyStatus",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/RequestForInformationList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_RequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/PastRequestForInformationList": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_PastRequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/RequestForInformationCount": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_RequestForInformationCount",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/RequestForInformationExcel": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_RequestForInformationExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/PastRequestForInformationExcel": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_PastRequestForInformationExcel",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/GetAllData": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_GetAllData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/GetCommunicationAllData": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_GetCommunicationAllData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnDashboard/GetTrpStatus": {
      "post": {
        "tags": [
          "TurnDashboard"
        ],
        "operationId": "TurnDashboard_GetTrpStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetTrpType": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Get Turn Project Type",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Inspection Management -&gt; Create Assessment</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Turn Project Type</p>",
        "operationId": "TurnRehabCP_GetTrpType",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.Module.IdNameModel"
              }
            }
          }
        }
      }
    },
    "/TurnRehabCP/UpdateTurnRehabCPAssessmentDate": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Update Assessment Date",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Turn Management -&gt; project detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update Assessment Date</p>",
        "operationId": "TurnRehabCP_UpdateTurnRehabCPAssessmentDate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "update model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectEntity"
            }
          }
        }
      }
    },
    "/TurnRehabCP/UpdateTurnRehabCPClientFinalSignOffDate": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Update Client Final Sign Off Date",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Turn Management -&gt; project detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Update Client Final Sign Off Date</p>",
        "operationId": "TurnRehabCP_UpdateTurnRehabCPClientFinalSignOffDate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "update model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectUpdateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnRehabCP/CheckTrpProjectComplete": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Check project can be completed",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Turn Management -&gt; project detail</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Check project can be completed</p>",
        "operationId": "TurnRehabCP_CheckTrpProjectComplete",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.Module.TRP.CheckIsAbleToCompleteProjectResultModel"
            }
          }
        }
      }
    },
    "/TurnRehabCP/CreateTrp": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Create project",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; Inspection Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Creat project</p>",
        "operationId": "TurnRehabCP_CreateTrp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "viewModel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.TurnRehabCapitalProjectModel"
            }
          },
          {
            "name": "attachments",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.AttachmentEntity"
              }
            }
          },
          {
            "name": "assessmentTypes",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "enum": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6
                ],
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectEntity"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetBusinessDay": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Get bussiness date by skip weekend and holiday",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Management -&gt; Inspection Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Creat project when enter property Id</p>",
        "operationId": "TurnRehabCP_GetBusinessDay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetLocationInfo": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Get location when create project",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Management -&gt; Inspection Management</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Creat project when enter property Id</p>",
        "operationId": "TurnRehabCP_GetLocationInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.LocationViewModel"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetLienWaiverEmailData": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "operationId": "TurnRehabCP_GetLienWaiverEmailData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetSpecialAssessmentWoList": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Get Special Assessment Wo List",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Management -&gt; Inspection Management -&gt;  Project Detail -&gt; Click Field Assessment Type</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>Get Special Assessment Wo List</p>",
        "operationId": "TurnRehabCP_GetSpecialAssessmentWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "description": "project id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "body",
            "description": "location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.SpecialAssessmentWoViewModel"
              }
            }
          }
        }
      }
    },
    "/TurnRehabCP/SignedOffProjectByClient": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "operationId": "TurnRehabCP_SignedOffProjectByClient",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetChangeOrders": {
      "get": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Get change orders",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Management -&gt; Turn Management -&gt; Project Detail -&gt; Change Order</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>View change order</p>",
        "operationId": "TurnRehabCP_GetChangeOrders",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "project id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
              }
            }
          }
        }
      }
    },
    "/TurnRehabCP/GetTaskDetail": {
      "post": {
        "tags": [
          "TurnRehabCP"
        ],
        "summary": "Task detail",
        "description": "<p>\r\n  <b>Path</b>\r\n</p>\r\n<p>Client Portal -&gt; WO Management -&gt; Turn Management -&gt; Project Detail -&gt; Gantt -&gt; Click One task</p>\r\n<p>\r\n  <b>Feature</b>\r\n</p>\r\n<p>View task detail</p>",
        "operationId": "TurnRehabCP_GetTaskDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "taskId",
            "in": "body",
            "description": "task id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
            }
          }
        }
      }
    },
    "/UserBehavior/UserBehaviorData": {
      "post": {
        "tags": [
          "UserBehavior"
        ],
        "summary": "Get user behavior data",
        "operationId": "UserBehavior_UserBehaviorData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserBehaviorDataViewModel"
            }
          }
        }
      }
    },
    "/UserFeedback/Index": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserFeedback/Upload": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_Upload",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/InitFields": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "summary": "Get CRT Field init list",
        "operationId": "UserFeedback_InitFields",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserFeedback.CRTFieldInitViewModel"
            }
          }
        }
      }
    },
    "/UserFeedback/GetSecondLeveList": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetSecondLeveList",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonCamelCaseResult"
            }
          }
        }
      }
    },
    "/UserFeedback/SaveAffiliateCapacityRequest": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_SaveAffiliateCapacityRequest",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "capacityRequestViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.AffiliateCapacityRequestViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/SaveAffiliatePerformanceFeedBack": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_SaveAffiliatePerformanceFeedBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "feedbackViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.NewFeedbackAffiliatePerformanceViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/InitBugAndFeatureFields": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "summary": "Get bug and feature init list",
        "operationId": "UserFeedback_InitBugAndFeatureFields",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserFeedback.BugAndFeatureFieldsViewModel"
            }
          }
        }
      }
    },
    "/UserFeedback/GetReporterAndManager": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "summary": "Get reporter and manager",
        "operationId": "UserFeedback_GetReporterAndManager",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.UserFeedback.ReporterAndManagerViewModel"
            }
          }
        }
      }
    },
    "/UserFeedback/SaveUserFeedBack": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_SaveUserFeedBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "feedbackViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.NewUserFeedBackViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserFeedback/SaveTenantEscalationFeedBack": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_SaveTenantEscalationFeedBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "feedbackViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.TenantEscalationViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/SaveCreditFeedBack": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_SaveCreditFeedBack",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "feedbackViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.CreditRequestViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/GetJiraClientId": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetJiraClientId",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/UserFeedback/GetCustomerRequestTrackingIssueDetail": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetCustomerRequestTrackingIssueDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "issueDetailQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.NewFeedBackIssue.NewFeedBackIssueDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/UserFeedback/GetCustomerRequestTrackingIssueComments": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetCustomerRequestTrackingIssueComments",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "issueDetailQueryModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.Web.Client.Models.NewFeedBackIssue.NewFeedBackIssueDetailQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserFeedback/AddCustomerRequestTrackingAttachment": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_AddCustomerRequestTrackingAttachment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "attachmentViewModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Business.Modules.Feedback.CustomerRequestAttachmentViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserFeedback/AddComment": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_AddComment",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "issueId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonCamelCaseResult"
            }
          }
        }
      }
    },
    "/UserFeedback/GetIssueList": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetIssueList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.JiraQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserFeedback/GetIssueStatus": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetIssueStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonCamelCaseResult"
            }
          }
        }
      }
    },
    "/UserFeedback/GetCrtIssueStatus": {
      "post": {
        "tags": [
          "UserFeedback"
        ],
        "operationId": "UserFeedback_GetCrtIssueStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.JsonCamelCaseResult"
            }
          }
        }
      }
    },
    "/UserTerms/PrivacyStatement": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_PrivacyStatement",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserTerms/AcceptableUsePolicy": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_AcceptableUsePolicy",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserTerms/AceRetailerTermsAndConditions": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_AceRetailerTermsAndConditions",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/UserTerms/GetEchoSignUrl": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_GetEchoSignUrl",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.String]"
            }
          }
        }
      }
    },
    "/UserTerms/GetWidgetAgreement": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_GetWidgetAgreement",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/UserTerms/EchoSign": {
      "post": {
        "tags": [
          "UserTerms"
        ],
        "operationId": "UserTerms_EchoSign",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "code",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/VisitApi/GetVisitIdByWoId": {
      "post": {
        "tags": [
          "VisitApi"
        ],
        "operationId": "VisitApi_GetVisitIdByWoId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/VisitApi/GetVisitIdByProjectId": {
      "post": {
        "tags": [
          "VisitApi"
        ],
        "operationId": "VisitApi_GetVisitIdByProjectId",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "projectId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/VisitApi/GetWoVisitInfo": {
      "post": {
        "tags": [
          "VisitApi"
        ],
        "operationId": "VisitApi_GetWoVisitInfo",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/VisitApi/GetVisitFlagList": {
      "post": {
        "tags": [
          "VisitApi"
        ],
        "operationId": "VisitApi_GetVisitFlagList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Moon.WebService.Client.VisitApiRepo.VisitFlagListQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetWorkOrderRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get wo recommend technicians",
        "operationId": "VisitAutoSchedule_GetWorkOrderRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "wo recommend input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.WorkOrderRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetRescheduleWorkOrderRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get reschedule wo recommend technicians",
        "operationId": "VisitAutoSchedule_GetRescheduleWorkOrderRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "wo reschedule recommend input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.WorkOrderRescheduleRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetProCareRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get procare recommend technicians",
        "operationId": "VisitAutoSchedule_GetProCareRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "procare recommend input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.ProCareRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetRescheduleProCareRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get reschedule procare recommend technicians",
        "operationId": "VisitAutoSchedule_GetRescheduleProCareRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "recommend Input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.ProCareRescheduleRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetRescheduleCalendarVisitRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get reschedule calendar visit recommend technicians",
        "operationId": "VisitAutoSchedule_GetRescheduleCalendarVisitRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "wo reschedule recommend Input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.WorkOrderRescheduleRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitCalendarRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetRescheduleProCareByServiceCodeRecommendTechnicians": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get reschedule procare by service code recommend technicians",
        "operationId": "VisitAutoSchedule_GetRescheduleProCareByServiceCodeRecommendTechnicians",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "recommend input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.ProCareRescheduleByServiceCodeRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitCalendarRecommendResult"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/RescheduleVisit": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Reschedule visit",
        "operationId": "VisitAutoSchedule_RescheduleVisit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitRescheduleWorkOrderInput",
            "in": "body",
            "description": "visit reschedule wo input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.VisitRescheduleWorkOrderInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetVisitEventLog": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get visit event log",
        "operationId": "VisitAutoSchedule_GetVisitEventLog",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "description": "visit Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Moon.Web.Client.Models.VisitEventLogViewModel"
              }
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/ManualRescheduleVisit": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Manual reschedule visit",
        "operationId": "VisitAutoSchedule_ManualRescheduleVisit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "manualScheduleInput",
            "in": "body",
            "description": "manual schedule input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.ManualScheduleInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/CanAddMaxServiceTimeToVisit": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Can add max service time to visit",
        "operationId": "VisitAutoSchedule_CanAddMaxServiceTimeToVisit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "description": "visit Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/AddServiceTimeToVisit": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Add service time to visit",
        "operationId": "VisitAutoSchedule_AddServiceTimeToVisit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "description": "visit Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "addServiceTimeMin",
            "in": "body",
            "description": "add service time min",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetFutureDateAvailableTimes": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get future date available times",
        "operationId": "VisitAutoSchedule_GetFutureDateAvailableTimes",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "recommendInput",
            "in": "body",
            "description": "visit reschedule recommend input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.VisitRescheduleRecommendInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.VisitFutureDateRecommendResult"
              }
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetMeshServiceSite": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get mesh service site address",
        "operationId": "VisitAutoSchedule_GetMeshServiceSite",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/GetVisitCanSubtractServiceTime": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Get visit can subtract service time",
        "operationId": "VisitAutoSchedule_GetVisitCanSubtractServiceTime",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "description": "visit Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/SubtractServiceTimeToVisit": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Subtract service time to visit",
        "operationId": "VisitAutoSchedule_SubtractServiceTimeToVisit",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "visitId",
            "in": "body",
            "description": "visit Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "serviceTimeMin",
            "in": "body",
            "description": "service time min",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/VisitAutoSchedule/ManualIntradayOptimization": {
      "post": {
        "tags": [
          "VisitAutoSchedule"
        ],
        "summary": "Manual intraday optimization",
        "operationId": "VisitAutoSchedule_ManualIntradayOptimization",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "technicianId",
            "in": "body",
            "description": "technician Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "rearrangeDate",
            "in": "body",
            "description": "rearrange Date",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/WoHistory/Index": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/WoHistory/List": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_List",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoArchiveQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AllStatus": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AllStatus",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AllServiceCategory": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AllServiceCategory",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AllServiceType": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AllServiceType",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceCategoryId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AllServiceCode": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AllServiceCode",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "serviceTypeId",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AllWotype": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "summary": "Get wo type list",
        "operationId": "WoHistory_AllWotype",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
              }
            }
          }
        }
      }
    },
    "/WoHistory/AllPriority": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AllPriority",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/Group": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Group",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/Region": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Region",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/District": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_District",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/GetAllListDatas": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_GetAllListDatas",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/Details": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Details",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/GetResponsibleEntity": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_GetResponsibleEntity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/Landlord": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Landlord",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/WoRequestDetail": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_WoRequestDetail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/Ovw": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_Ovw",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/AddWatch": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_AddWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/WoHistory/RemoveWatch": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_RemoveWatch",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task"
            }
          }
        }
      }
    },
    "/WoHistory/ClientInvoice": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ClientInvoice",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/ClientInvoiceItem": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ClientInvoiceItem",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/ClientProposalArchive": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ClientProposalArchive",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "woId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/ClientProposalItemArchive": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ClientProposalItemArchive",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/ExportWoHistoryExcelByServer": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ExportWoHistoryExcelByServer",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoArchiveQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoHistory/ExportWoHistoryExcelBySendEmail": {
      "post": {
        "tags": [
          "WoHistory"
        ],
        "operationId": "WoHistory_ExportWoHistoryExcelBySendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoArchiveQueryModel"
            }
          },
          {
            "name": "exportEmail",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WoList/Index": {
      "post": {
        "tags": [
          "WoList"
        ],
        "operationId": "WoList_Index",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/WoList/HistorySearch": {
      "post": {
        "tags": [
          "WoList"
        ],
        "operationId": "WoList_HistorySearch",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Web.Mvc.ActionResult"
            }
          }
        }
      }
    },
    "/WoList/QuoteWaitingApprovalList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Quote Waiting Approval List",
        "operationId": "WoList_QuoteWaitingApprovalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          },
          {
            "name": "week",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "format": "int32",
              "enum": [
                0,
                1,
                2
              ],
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalViewModel]"
            }
          }
        }
      }
    },
    "/WoList/OnSiteProposalList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "On Site Proposal List",
        "operationId": "WoList_OnSiteProposalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.OnSiteProposalWoViewModel]"
            }
          }
        }
      }
    },
    "/WoList/NewOnSiteProposalList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "New On Site Proposal List",
        "operationId": "WoList_NewOnSiteProposalList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ClientProposalInfoViewModel]"
            }
          }
        }
      }
    },
    "/WoList/IssuesWoList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Issues Wo List",
        "operationId": "WoList_IssuesWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel]"
            }
          }
        }
      }
    },
    "/WoList/EscWoList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Esc Wo List",
        "operationId": "WoList_EscWoList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel]"
            }
          }
        }
      }
    },
    "/WoList/RequestForInformationList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Request For Information List",
        "operationId": "WoList_RequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RfiWoQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.RFIWoViewModel]"
            }
          }
        }
      }
    },
    "/WoList/PastRequestForInformationList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Past Request For Information List",
        "operationId": "WoList_PastRequestForInformationList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.RFITraceQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.PastRfiModel]"
            }
          }
        }
      }
    },
    "/WoList/ReactiveList": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Reactive List",
        "operationId": "WoList_ReactiveList",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/M2.Entity.ReactiveWoOpenStatusAgingQueryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel]"
            }
          }
        }
      }
    },
    "/WoList/GetFilterData": {
      "post": {
        "tags": [
          "WoList"
        ],
        "summary": "Get Filter Data",
        "operationId": "WoList_GetFilterData",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
              }
            }
          }
        }
      }
    },
    "/WorkingTime/WorkingHoursData": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_WorkingHoursData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/SaveWorkingHour": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_SaveWorkingHour",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "technicianIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/DeleteWorkingHour": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_DeleteWorkingHour",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "week",
            "in": "body",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "technicianIds",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/NonWorkingDaysData": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_NonWorkingDaysData",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/CreateNonWorkingDay": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_CreateNonWorkingDay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "title",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/DeleteNonWorkingDay": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_DeleteNonWorkingDay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "affiliateId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/UpdateNonWorkingDay": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_UpdateNonWorkingDay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "body",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/GetServiceRegion": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_GetServiceRegion",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    },
    "/WorkingTime/IsAffiliateCapacity": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_IsAffiliateCapacity",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "region",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Boolean]"
            }
          }
        }
      }
    },
    "/WorkingTime/UpdateWorkingHourAndWorkDay": {
      "post": {
        "tags": [
          "WorkingTime"
        ],
        "operationId": "WorkingTime_UpdateWorkingHourAndWorkDay",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "employeeId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technician",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "technicianWorkingHourList",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/M2.Entity.WorkingHoursEntity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "System.Web.Mvc.ActionResult": {
      "type": "object",
      "properties": {}
    },
    "System.Threading.Tasks.Task[System.Web.Mvc.ActionResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/System.Web.Mvc.ActionResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.LoginCSSModel": {
      "type": "object",
      "properties": {
        "css": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.String]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Infrastructure.ActionResultViewModel": {
      "type": "object",
      "properties": {
        "isSuccess": {
          "type": "boolean"
        },
        "userTermAccepted": {
          "type": "boolean"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "result": {
          "type": "object"
        },
        "isNeedResetPwd": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.ViewModels.ResetPasswordViewModel": {
      "required": [
        "mail",
        "password"
      ],
      "type": "object",
      "properties": {
        "mail": {
          "type": "string"
        },
        "password": {
          "maxLength": 100,
          "minLength": 8,
          "pattern": "(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,30}",
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.UserProfileModel": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RoleEntity"
          }
        },
        "id": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RoleEntity": {
      "type": "object",
      "properties": {
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "roleType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataKeyValueEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.ProfileForInteractionLogModel": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserOnlineModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userOnlineStatus": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.UserTerms": {
      "type": "object",
      "properties": {
        "isUserTermsAccepted": {
          "type": "boolean"
        },
        "isFirstLogion": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.UserCoverEntity": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "coverUserId": {
          "type": "string"
        },
        "coverStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "coverEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "coverUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserEntity": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "emailConfirmed": {
          "type": "boolean"
        },
        "passwordHash": {
          "type": "string"
        },
        "securityStamp": {
          "type": "string"
        },
        "phoneConfirmed": {
          "type": "boolean"
        },
        "twoFactorEnabled": {
          "type": "boolean"
        },
        "allowLoginStartDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "allowLoginEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "accessFailedCount": {
          "format": "int32",
          "type": "integer"
        },
        "lockoutType": {
          "format": "int32",
          "type": "integer"
        },
        "isAgreement": {
          "type": "boolean"
        },
        "isChangePWD": {
          "type": "boolean"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "approveLimit": {
          "format": "double",
          "type": "number"
        },
        "locationId": {
          "type": "string"
        },
        "locationResidentialId": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "isUserActive": {
          "type": "boolean"
        },
        "externalUserId": {
          "type": "string"
        },
        "sourceId": {
          "format": "int32",
          "type": "integer"
        },
        "roleTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "isActive": {
          "type": "boolean",
          "readOnly": true
        },
        "userTitleId": {
          "format": "int32",
          "type": "integer"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RoleEntity"
          }
        },
        "roleId": {
          "type": "string"
        },
        "permissionGroupId": {
          "type": "string"
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "statusId": {
          "format": "int64",
          "type": "integer"
        },
        "isAllowMobile": {
          "type": "boolean"
        },
        "isAllowWeb": {
          "type": "boolean"
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        },
        "houseOwnerId": {
          "type": "string"
        },
        "acceptStandardNTEComment": {
          "type": "string"
        },
        "coveredUserId": {
          "type": "string"
        },
        "lastLoginTime": {
          "format": "date-time",
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "isTestAccount": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "vertificationCode": {
          "type": "string"
        },
        "sendVertificationCodeTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserCoverQueryModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "coverUserId": {
          "type": "string"
        },
        "coverStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "coverEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.CoverUserModel": {
      "type": "object",
      "properties": {
        "coverUserFullName": {
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "cover": {
          "$ref": "#/definitions/Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.CoverUserListViewModel]"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.CoverUserListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.CoverUserListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.CoverUserListViewModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "coverStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "coverEndTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Web.ViewModels.LoginViewModel": {
      "required": [
        "userName",
        "password",
        "utcOffset",
        "isSupportDST"
      ],
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "rememberMe": {
          "type": "boolean"
        },
        "utcOffset": {
          "format": "int32",
          "type": "integer"
        },
        "isSupportDST": {
          "type": "boolean"
        },
        "portalType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.Report.Client.FinancialOverviewQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.ReactiveWoQueryModel": {
      "type": "object",
      "properties": {
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "userActualParams": {
          "type": "string"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.OperationManagerQuery": {
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationsCount": {
          "format": "int64",
          "type": "integer"
        },
        "level": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoOpenStatusAgingQueryModel": {
      "type": "object",
      "properties": {
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "userActualParams": {
          "type": "string"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ResidentialAdvReportQueryModel": {
      "type": "object",
      "properties": {
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "customWoTypeId": {
          "type": "string"
        },
        "woTypeId": {
          "type": "string"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string"
        },
        "startFiscalMonth": {
          "type": "string"
        },
        "endFiscalMonth": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "monthSpan": {
          "format": "int32",
          "type": "integer"
        },
        "excludeLocationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woClientId": {
          "type": "string"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.JPMCMetricsQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.ResidentialMetricsQueryModel": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.MonthlyPropertyFinancialReportQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "divisions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetManagementExecutives": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.ResidentialReportWoQueryModel": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "completedMonth": {
          "format": "date-time",
          "type": "string"
        },
        "utcOffSet": {
          "format": "int32",
          "type": "integer"
        },
        "isVP": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userVisibleLabeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woReactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woReactiveId": {
          "type": "string"
        },
        "userActualParams": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LeaderBoardQueryModel": {
      "type": "object",
      "properties": {
        "positions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.TrendsQueryModel": {
      "type": "object",
      "properties": {
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "monthSpan": {
          "format": "int32",
          "type": "integer"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DynamicPropertyListQueryModel": {
      "type": "object",
      "properties": {
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SavingsPerPeriodQueryModel": {
      "type": "object",
      "properties": {
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.AccrualReportQueryModel": {
      "type": "object",
      "properties": {
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "customerStatusExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "customWoTypeId": {
          "type": "string"
        },
        "woTypeId": {
          "type": "string"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string"
        },
        "startFiscalMonth": {
          "type": "string"
        },
        "endFiscalMonth": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "monthSpan": {
          "format": "int32",
          "type": "integer"
        },
        "excludeLocationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woClientId": {
          "type": "string"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RetailReportWoQueryModel": {
      "type": "object",
      "properties": {
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "customerStatusExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expenseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "customWoTypeId": {
          "type": "string"
        },
        "woTypeId": {
          "type": "string"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string"
        },
        "startFiscalMonth": {
          "type": "string"
        },
        "endFiscalMonth": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            10,
            11
          ],
          "type": "integer"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "ownerships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "monthSpan": {
          "format": "int32",
          "type": "integer"
        },
        "excludeLocationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woClientId": {
          "type": "string"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Report.Retail.PetSmart.FinancialOverallQueryModel": {
      "type": "object",
      "properties": {
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "budgetStatus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.TechnicianActivityReportQueryModel": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "regionsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateIdExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.BI7ElevenKPIMetricsReportQueryModel": {
      "type": "object",
      "properties": {
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "responseWindows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woServiceCategoryName": {
          "type": "string"
        },
        "woServiceCategoryNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliate": {
          "type": "string"
        },
        "affiliates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateIdExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionsExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RetailMetricsQueryModel": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customWoTypeId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardReactiveWoQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationId": {
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "excludeWOTypes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardWoListViewModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardWoListViewModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.AdvancedReportApiController.FinancialDashboardWoListViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "woServiceCategoryName": {
          "type": "string"
        },
        "woServiceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "completeDate": {
          "format": "date-time",
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "statusName": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "scheduleStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "statusId": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[Moon.WebService.Client.AdvancedReportApiController.ClientFiscalMonthQueryResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.ClientFiscalMonthQueryResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.AdvancedReportApiController.ClientFiscalMonthQueryResult": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.DataServiceCodeResult]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.DataServiceCodeResult"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.AdvancedReportApiController.DataServiceCodeResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "skillLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "abbrName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.Controllers.MetricsReport.MetricsReportQueryModel": {
      "type": "object",
      "properties": {
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "expenseType": {
          "format": "int32",
          "type": "integer"
        },
        "woType": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "statuses": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "propertyManagers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isUsingCustomizedFilters": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludeAffiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inhouseAffiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderCountModel]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderCountModel",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderCountModel": {
      "type": "object",
      "properties": {
        "smsVendor": {
          "format": "int32",
          "type": "integer"
        },
        "inHouseTechnician": {
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Threading.Tasks.Task[Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderAgingCountModel]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderAgingCountModel",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.Controllers.MetricsReport.MetricsReportWorkOrderAgingCountModel": {
      "type": "object",
      "properties": {
        "aging0To7Days": {
          "format": "int32",
          "type": "integer"
        },
        "aging8To14Days": {
          "format": "int32",
          "type": "integer"
        },
        "aging15PlusDays": {
          "format": "int32",
          "type": "integer"
        },
        "total": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.WebService.Client.Controllers.MetricsReport.WorkOrderByPriorityModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.Controllers.MetricsReport.WorkOrderByPriorityModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.Controllers.MetricsReport.WorkOrderByPriorityModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "woNumber": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "percentage": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.IEnumerable[Moon.WebService.Client.AdvancedReportApiController.MertricsReportWoExportModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.AdvancedReportApiController.MertricsReportWoExportModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.AdvancedReportApiController.MertricsReportWoExportModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "woStatus": {
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "woType": {
          "type": "string"
        },
        "openAging": {
          "format": "double",
          "type": "number"
        },
        "glCode": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.Controllers.SLAAgingReportQueryModel": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCatagoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pageType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.AssetQueryModel": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "equipmentTypeName": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "unitNum": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "equipmentType": {
          "type": "string"
        },
        "qrCode": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "length": {
          "type": "string"
        },
        "hasQRCode": {
          "type": "boolean"
        },
        "isWarranty": {
          "type": "boolean"
        },
        "modelNum": {
          "type": "string"
        },
        "clientReferNum": {
          "type": "string"
        },
        "filters": {
          "format": "int32",
          "type": "integer"
        },
        "filterSize1": {
          "type": "string"
        },
        "belts": {
          "format": "int32",
          "type": "integer"
        },
        "beltSizeA": {
          "type": "string"
        },
        "voltage": {
          "format": "double",
          "type": "number"
        },
        "amperage": {
          "format": "int32",
          "type": "integer"
        },
        "unitage": {
          "format": "int32",
          "type": "integer"
        },
        "tonnage": {
          "format": "double",
          "type": "number"
        },
        "heatType": {
          "type": "string"
        },
        "refrigerantType": {
          "type": "string"
        },
        "rawDataAssetId": {
          "format": "int32",
          "type": "integer"
        },
        "isCamelCase": {
          "type": "boolean"
        },
        "isSetUnmatched": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.AssetEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "equipmentType": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "manufacturerProviderNum": {
          "type": "string"
        },
        "modelNum": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "installationDate": {
          "format": "date-time",
          "type": "string"
        },
        "length": {
          "type": "string"
        },
        "width": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "warrantyCoverage": {
          "type": "string"
        },
        "warrantyEffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "unitNum": {
          "type": "string"
        },
        "assetOverallHealthType": {
          "format": "int32",
          "type": "integer"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AssetPartEntity"
          }
        },
        "assetAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationAssetAttachmentEntity"
          }
        },
        "partsCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "clientId": {
          "type": "string"
        },
        "isRelated": {
          "format": "int32",
          "type": "integer"
        },
        "qrCode": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "serviceCategory": {
          "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
        },
        "moneySpent": {
          "format": "double",
          "type": "number"
        },
        "locationAssetAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationAssetAttachmentEntity"
          }
        },
        "extendAttribute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "isRetiredOrReplaced": {
          "type": "boolean"
        },
        "assetRetiredId": {
          "format": "int32",
          "type": "integer"
        },
        "assetRetiredName": {
          "type": "string"
        },
        "manufacturedYear": {
          "format": "int32",
          "type": "integer"
        },
        "clientReferNum": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "healthLevel": {
          "type": "string"
        },
        "splitNum": {
          "type": "string"
        },
        "isCurbAdapter": {
          "type": "boolean"
        },
        "isHailGuards": {
          "type": "boolean"
        },
        "filters": {
          "format": "int32",
          "type": "integer"
        },
        "filterSize1": {
          "type": "string"
        },
        "belts": {
          "format": "int32",
          "type": "integer"
        },
        "beltSizeA": {
          "type": "string"
        },
        "voltage": {
          "format": "double",
          "type": "number"
        },
        "amperage": {
          "format": "int32",
          "type": "integer"
        },
        "unitage": {
          "format": "int32",
          "type": "integer"
        },
        "tonnage": {
          "format": "double",
          "type": "number"
        },
        "heatType": {
          "type": "string"
        },
        "refrigerantType": {
          "type": "string"
        },
        "rawDataAssetId": {
          "format": "int32",
          "type": "integer"
        },
        "isSetUnmatched": {
          "type": "boolean"
        },
        "heatingCapacity": {
          "format": "double",
          "type": "number"
        },
        "damperType": {
          "format": "int32",
          "type": "integer"
        },
        "isSMSVerified": {
          "type": "boolean"
        },
        "locationAreaSysEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "referenceTemperature": {
          "type": "string"
        },
        "supplyTempReading": {
          "type": "string"
        },
        "returnTempReading": {
          "type": "string"
        },
        "clientAreaServedIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "missingOrDuplicateReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AssetPartEntity": {
      "type": "object",
      "properties": {
        "equipmentType": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "manufacturerProviderNum": {
          "type": "string"
        },
        "modelNum": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "installationDate": {
          "format": "date-time",
          "type": "string"
        },
        "warrantyCoverage": {
          "format": "float",
          "type": "number"
        },
        "warrantyEffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "age": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "isRetiredOrReplaced": {
          "type": "boolean"
        },
        "assetRetiredId": {
          "format": "int32",
          "type": "integer"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "exntedAttribute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "savePartAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AssetAttachment"
          }
        },
        "partsAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationAssetAttachmentEntity"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationAssetAttachmentEntity": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "attachmentPath": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "attachmentType": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "partId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "type": "integer"
        },
        "isVisible": {
          "type": "boolean"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "exifOrientation": {
          "format": "int32",
          "type": "integer"
        },
        "pictureShootingAngle": {
          "format": "int32",
          "type": "integer"
        },
        "woRecurrentId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataServiceCategoryEntity": {
      "type": "object",
      "properties": {
        "isClientVisible": {
          "type": "boolean"
        },
        "isHide": {
          "type": "boolean"
        },
        "businessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "isTurnService": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.QuestionAnswerEntity": {
      "required": [
        "questionId"
      ],
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "questionType": {
          "format": "int32",
          "type": "integer"
        },
        "questionOptionId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "answer": {
          "type": "string"
        },
        "question": {
          "$ref": "#/definitions/M2.Entity.QuestionEntity"
        },
        "qustionOptionEntity": {
          "$ref": "#/definitions/M2.Entity.QuestionOptionEntity"
        },
        "qustionOptionEntitys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionOptionEntity"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AssetAttachment": {
      "type": "object",
      "properties": {
        "attachmentPath": {
          "type": "string"
        },
        "attachmentType": {
          "format": "int32",
          "type": "integer"
        },
        "labelName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "capitalizationProcessedFullName": {
          "type": "string",
          "readOnly": true
        },
        "isAllowMobile": {
          "type": "boolean"
        },
        "isAllowWeb": {
          "type": "boolean"
        },
        "roleTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RoleEntity"
          }
        },
        "roleId": {
          "type": "string"
        },
        "approveLimit": {
          "format": "double",
          "type": "number"
        },
        "allowLoginStartDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "allowLoginEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "accessFailedCount": {
          "format": "int32",
          "type": "integer"
        },
        "lockoutType": {
          "format": "int32",
          "type": "integer"
        },
        "isActive": {
          "type": "boolean",
          "readOnly": true
        },
        "typeId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        },
        "houseOwnerId": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationResidentialId": {
          "type": "string"
        },
        "coveredUserId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.QuestionEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            5,
            6
          ],
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "questionTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "parentId": {
          "type": "string"
        },
        "subQuestionId": {
          "type": "string"
        },
        "subQuestionRank": {
          "format": "int32",
          "type": "integer"
        },
        "isHide": {
          "type": "boolean"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "questionOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionOptionEntity"
          }
        },
        "subQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionEntity"
          }
        },
        "answer": {
          "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
        },
        "notIncludedCheckOutStatus": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.QuestionOptionEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "subQuestionId": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isHide": {
          "type": "boolean"
        },
        "woTagIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "subQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionEntity"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataServiceCodeEntity": {
      "type": "object",
      "properties": {
        "skillLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "abbrName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "isSeasonalContractEnable": {
          "type": "boolean"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataServiceTypeEntity": {
      "type": "object",
      "properties": {
        "servcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategory": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.AttachmentEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43
          ],
          "type": "integer"
        },
        "refIdValue": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "resourceCategoryId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            50,
            100
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "videoThumbnailUrl": {
          "type": "string"
        },
        "woUrl": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "notes": {
          "type": "string"
        },
        "photoLabelId": {
          "type": "string"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "avLength": {
          "format": "double",
          "type": "number"
        },
        "isShare": {
          "type": "boolean"
        },
        "locationEntity": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "photoCount": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "qcWoNum": {
          "type": "string"
        },
        "mysqlAttachmentId": {
          "type": "string"
        },
        "sourceType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "photoLabel": {
          "$ref": "#/definitions/M2.Entity.ClientPhotoLabelEntity"
        },
        "extRefId": {
          "format": "int32",
          "type": "integer"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isVisible": {
          "type": "boolean"
        },
        "resourcesTitle": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "attachmentAttribute": {
          "$ref": "#/definitions/M2.Entity.AttachmentInfoAttributeEntity"
        },
        "qcAttachmentId": {
          "type": "string"
        },
        "qcAttachmentType": {
          "format": "int32",
          "type": "integer"
        },
        "photoHashCount": {
          "format": "int32",
          "type": "integer"
        },
        "woRecurrentId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.GPS": {
      "type": "object",
      "properties": {
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.LocationEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "is24HR": {
          "type": "boolean"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "locationServiceProvider": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "callPhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "gateCode": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "floorType": {
          "type": "string"
        },
        "ttsqft": {
          "format": "double",
          "type": "number"
        },
        "truckDay": {
          "type": "string"
        },
        "relocationDate": {
          "format": "date-time",
          "type": "string"
        },
        "primaryAffiliateName": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "isHOA": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "onPlan": {
          "type": "boolean"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "legacyLocationNumber": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "districtManager": {
          "type": "string"
        },
        "isAutoRFI": {
          "type": "boolean"
        },
        "classificationId": {
          "format": "int32",
          "type": "integer"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "clientCustomerType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "isActiveLocation": {
          "type": "boolean"
        },
        "sowTrigger": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientPhotoLabelEntity": {
      "type": "object",
      "properties": {
        "labelName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "labelType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AttachmentInfoAttributeEntity": {
      "type": "object",
      "properties": {
        "attachmentInfoId": {
          "type": "string"
        },
        "photoHash": {
          "type": "string"
        },
        "photoLat": {
          "format": "double",
          "type": "number"
        },
        "photoLng": {
          "format": "double",
          "type": "number"
        },
        "isShowMobile": {
          "type": "boolean"
        },
        "exifOrientation": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Address": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "logoPath": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "clientCode": {
          "type": "string"
        },
        "userCount": {
          "format": "int32",
          "type": "integer"
        },
        "attachmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "isVIP": {
          "type": "boolean"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callCenterNumber": {
          "type": "string"
        },
        "isEnableServiceFee": {
          "type": "boolean"
        },
        "serviceFeeRate": {
          "format": "double",
          "type": "number"
        },
        "isEnablePlatformFee": {
          "type": "boolean"
        },
        "platformFeeRate": {
          "format": "double",
          "type": "number"
        },
        "domain": {
          "type": "string"
        },
        "rspDomain": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "isVirtualClient": {
          "type": "boolean"
        },
        "contact": {
          "$ref": "#/definitions/M2.Entity.Contact"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "customerType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "isConfirmationEmailOptIn": {
          "type": "boolean"
        },
        "isUsesClientPortal": {
          "type": "boolean"
        },
        "houseOwnerDomain": {
          "type": "string"
        },
        "clientPreferredStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isBypassManagerToDoList": {
          "type": "boolean"
        },
        "isInvoiceApprovalActive": {
          "type": "boolean"
        },
        "invoiceApprovalHours": {
          "format": "double",
          "type": "number"
        },
        "customerTypeName": {
          "type": "string"
        },
        "isInHouseInvoiceProcess": {
          "type": "boolean"
        },
        "inHouseInvoiceServiceFeeAmount": {
          "format": "double",
          "type": "number"
        },
        "isInHouseInvoiceServiceFeeTaxable": {
          "type": "boolean"
        },
        "isPassThroughInvoiceProcess": {
          "type": "boolean"
        },
        "passThroughInvoiceServiceFeeAmount": {
          "format": "double",
          "type": "number"
        },
        "isPassThroughInvoiceServiceFeeTaxable": {
          "type": "boolean"
        },
        "passThroughInvoiceProcess": {
          "format": "int32",
          "type": "integer"
        },
        "isConfigDueDate": {
          "type": "boolean"
        },
        "isInvoiceDiscount": {
          "type": "boolean"
        },
        "isEnableTemperaturePriorityConfig": {
          "type": "boolean"
        },
        "isEnableOneRecommendedAffiliate": {
          "type": "boolean"
        },
        "isEnablePriorityExcludeNonWorkingTime": {
          "type": "boolean"
        },
        "isEnabledPreDispatch": {
          "type": "boolean"
        },
        "businessTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isEnableTurnRehabCapitalProject": {
          "type": "boolean"
        },
        "replyRPANeedCCUserType": {
          "format": "int32",
          "type": "integer"
        },
        "isEnableUnderWarranty": {
          "type": "boolean"
        },
        "pcdaPackageId": {
          "format": "int32",
          "type": "integer"
        },
        "pcdaAutomaticDeferralHours": {
          "format": "double",
          "type": "number"
        },
        "woStatusAfterDeclinePCDA": {
          "format": "int32",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Contact": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.JsonResult": {
      "type": "object",
      "properties": {
        "contentEncoding": {
          "$ref": "#/definitions/System.Text.Encoding"
        },
        "contentType": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "jsonRequestBehavior": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "maxJsonLength": {
          "format": "int32",
          "type": "integer"
        },
        "recursionLimit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Text.Encoding": {
      "type": "object",
      "properties": {
        "bodyName": {
          "type": "string",
          "readOnly": true
        },
        "encodingName": {
          "type": "string",
          "readOnly": true
        },
        "headerName": {
          "type": "string",
          "readOnly": true
        },
        "webName": {
          "type": "string",
          "readOnly": true
        },
        "windowsCodePage": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "isBrowserDisplay": {
          "type": "boolean",
          "readOnly": true
        },
        "isBrowserSave": {
          "type": "boolean",
          "readOnly": true
        },
        "isMailNewsDisplay": {
          "type": "boolean",
          "readOnly": true
        },
        "isMailNewsSave": {
          "type": "boolean",
          "readOnly": true
        },
        "isSingleByte": {
          "type": "boolean",
          "readOnly": true
        },
        "encoderFallback": {
          "$ref": "#/definitions/System.Text.EncoderFallback"
        },
        "decoderFallback": {
          "$ref": "#/definitions/System.Text.DecoderFallback"
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "codePage": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "System.Text.EncoderFallback": {
      "type": "object",
      "properties": {
        "maxCharCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "System.Text.DecoderFallback": {
      "type": "object",
      "properties": {
        "maxCharCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.AttachmentModel": {
      "type": "object",
      "properties": {
        "fileList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.AttachmentViewModel"
          }
        },
        "qcPhotos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskQCPhotoViewModel"
          }
        },
        "deletePermission": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.AttachmentViewModel": {
      "type": "object",
      "properties": {
        "isChecked": {
          "type": "boolean"
        },
        "sourceType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43
          ],
          "type": "integer"
        },
        "refIdValue": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "resourceCategoryId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            50,
            100
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "videoThumbnailUrl": {
          "type": "string"
        },
        "woUrl": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "notes": {
          "type": "string"
        },
        "photoLabelId": {
          "type": "string"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "avLength": {
          "format": "double",
          "type": "number"
        },
        "isShare": {
          "type": "boolean"
        },
        "locationEntity": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "photoCount": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "qcWoNum": {
          "type": "string"
        },
        "mysqlAttachmentId": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "photoLabel": {
          "$ref": "#/definitions/M2.Entity.ClientPhotoLabelEntity"
        },
        "extRefId": {
          "format": "int32",
          "type": "integer"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isVisible": {
          "type": "boolean"
        },
        "resourcesTitle": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "attachmentAttribute": {
          "$ref": "#/definitions/M2.Entity.AttachmentInfoAttributeEntity"
        },
        "qcAttachmentId": {
          "type": "string"
        },
        "qcAttachmentType": {
          "format": "int32",
          "type": "integer"
        },
        "photoHashCount": {
          "format": "int32",
          "type": "integer"
        },
        "woRecurrentId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectTaskQCPhotoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "qcWONum": {
          "type": "string"
        },
        "qcPhotos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        }
      }
    },
    "M2.Entity.CoverForLocationKeyValueModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/M2.Entity.CoverForYouLocationValueModel"
        }
      }
    },
    "M2.Entity.CoverForYouLocationValueModel": {
      "type": "object",
      "properties": {
        "addressValue": {
          "type": "string"
        },
        "locationNameValue": {
          "type": "string"
        },
        "locationServiceProvider": {
          "type": "string"
        }
      }
    },
    "M2.Entity.KeyValueModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.APIs.LocationComplexModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isChecked": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.IdNameViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "readOnly": true
        },
        "amount": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.APIs.ActiveLocationComplexModel": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "isChecked": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerUserModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.IdNameModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Web.Mvc.JsonResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/System.Web.Mvc.JsonResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.CallQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "callerId": {
          "type": "string"
        },
        "callRequestNum": {
          "type": "string"
        },
        "callStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "callStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "callStatusIdsExclude": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "callCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "callCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "callCategoryIdsExclude": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "callPriorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "subIssueId": {
          "format": "int32",
          "type": "integer"
        },
        "refNum": {
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompletebyTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompletebyTime": {
          "format": "date-time",
          "type": "string"
        },
        "scopeId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "isAffiliateVisible": {
          "type": "boolean"
        },
        "isCallCategoryAffiliateVisible": {
          "type": "boolean"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "callIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "weekGroup": {
          "type": "string"
        },
        "projectManagerId": {
          "type": "string"
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "maintenanceIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "salesDispositionId": {
          "type": "string"
        },
        "salesDispositionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "frequency": {
          "format": "int32",
          "type": "integer"
        },
        "recurringCallStatus": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "isRecurringCall": {
          "type": "boolean"
        },
        "isComplaint": {
          "type": "boolean"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "endExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginExpirationMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endExpirationMonth": {
          "format": "date-time",
          "type": "string"
        },
        "callContactEmail": {
          "type": "string"
        },
        "woCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "woCreateEndMonth": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeIsNull": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "vrrId": {
          "type": "string"
        },
        "startMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endMonth": {
          "format": "date-time",
          "type": "string"
        },
        "startMonthWOQty": {
          "format": "int32",
          "type": "integer"
        },
        "salePackageId": {
          "format": "int32",
          "type": "integer"
        },
        "salesOMIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeClientHad": {
          "type": "boolean"
        },
        "dayIndex": {
          "format": "int32",
          "type": "integer"
        },
        "endDateIndex": {
          "format": "int32",
          "type": "integer"
        },
        "beginDateIndex": {
          "format": "int32",
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "isCanGenerater": {
          "type": "boolean"
        },
        "salesStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "opsManagerDispositionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCallSIM": {
          "type": "boolean"
        },
        "oM1Ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teamLeadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orgFilterLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "isServicedSinceCall": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "isNoPager": {
          "type": "boolean"
        },
        "ownerName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[System.Object]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataCallCategoryEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "isAffiliateVisible": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.VisitRecommendResult": {
      "type": "object",
      "properties": {
        "pullInRecommend": {
          "$ref": "#/definitions/M2.Entity.VisitPullInRecommend"
        },
        "pushOutRecommend": {
          "$ref": "#/definitions/M2.Entity.VisitPushOutRecommend"
        }
      }
    },
    "M2.Entity.VisitPullInRecommend": {
      "type": "object",
      "properties": {
        "topRecommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitRecommendItem"
          }
        },
        "recommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitRecommendItem"
          }
        },
        "recommendByDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitRecommendItemByDay"
          }
        },
        "technicianRecommendByDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitTechnicianRecommendItemByDay"
          }
        }
      }
    },
    "M2.Entity.VisitPushOutRecommend": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.TechnicianScore"
          }
        },
        "canSelect": {
          "type": "boolean"
        },
        "isHighlight": {
          "type": "boolean"
        },
        "isPrioritySort": {
          "type": "boolean"
        },
        "indexOf": {
          "format": "int32",
          "type": "integer"
        },
        "minScore": {
          "format": "double",
          "type": "number"
        },
        "isSameDayNextDay": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.VisitRecommendItem": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.TechnicianScore"
          }
        },
        "canSelect": {
          "type": "boolean"
        },
        "isHighlight": {
          "type": "boolean"
        },
        "isPrioritySort": {
          "type": "boolean"
        },
        "indexOf": {
          "format": "int32",
          "type": "integer"
        },
        "minScore": {
          "format": "double",
          "type": "number"
        },
        "isSameDayNextDay": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.VisitRecommendItemByDay": {
      "type": "object",
      "properties": {
        "recommendDay": {
          "format": "date-time",
          "type": "string"
        },
        "recommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitRecommendItem"
          }
        }
      }
    },
    "M2.Entity.VisitTechnicianRecommendItemByDay": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianName": {
          "type": "string"
        },
        "recommendByDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitRecommendItemByDay"
          }
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.TechnicianScore": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.WoBaseQueryModel": {
      "type": "object",
      "properties": {
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "ownerId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "assigneeId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DataServiceCodeFilterModel": {
      "type": "object",
      "properties": {
        "isReferredServiceCode": {
          "type": "boolean"
        },
        "referral": {
          "type": "string"
        },
        "referredServiceContact": {
          "type": "string"
        },
        "popupVerbiage": {
          "type": "string"
        },
        "skillLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "abbrName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "isSeasonalContractEnable": {
          "type": "boolean"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataCallSubIssueEntity": {
      "type": "object",
      "properties": {
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callSubIssueName": {
          "type": "string"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.CallEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "callerId": {
          "type": "string"
        },
        "callRequestNum": {
          "type": "string"
        },
        "callStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "callStatusEntity": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "callCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "callContent": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "etaTime": {
          "format": "date-time",
          "type": "string"
        },
        "dateRev": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "callerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "inProgressTime": {
          "format": "date-time",
          "type": "string"
        },
        "callPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "subIssueId": {
          "format": "int32",
          "type": "integer"
        },
        "nte": {
          "format": "double",
          "type": "number"
        },
        "completeBy": {
          "format": "date-time",
          "type": "string"
        },
        "refNum": {
          "type": "string"
        },
        "responseBy": {
          "format": "date-time",
          "type": "string"
        },
        "estTime": {
          "format": "date-time",
          "type": "string"
        },
        "originalESTTime": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "callCategory": {
          "$ref": "#/definitions/M2.Entity.DataCallCategoryEntity"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "isComplaint": {
          "type": "boolean"
        },
        "isAffiliateVisible": {
          "type": "boolean"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "cost": {
          "format": "double",
          "type": "number"
        },
        "callerPosition": {
          "$ref": "#/definitions/M2.Entity.DataCallerPositionEntity"
        },
        "callPriority": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "callSubIssue": {
          "$ref": "#/definitions/M2.Entity.DataCallSubIssueEntity"
        },
        "projectManager": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "callScope": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "salesDisposition": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "version": {
          "type": "string"
        },
        "scopeId": {
          "format": "int32",
          "type": "integer"
        },
        "salesId": {
          "format": "int32",
          "type": "integer"
        },
        "salesDispositionId": {
          "format": "int32",
          "type": "integer"
        },
        "uniqueNumberIdentifier": {
          "type": "string"
        },
        "completeUserId": {
          "type": "string"
        },
        "etaUserId": {
          "type": "string"
        },
        "inProgressUserId": {
          "type": "string"
        },
        "frequency": {
          "format": "int32",
          "type": "integer"
        },
        "recurringCallStatus": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "isRecurringCall": {
          "type": "boolean"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "numOfCanBeCreated": {
          "format": "int32",
          "type": "integer"
        },
        "assigneeId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "salesOMId": {
          "type": "string"
        },
        "startMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endMonth": {
          "format": "date-time",
          "type": "string"
        },
        "startMonthWOQty": {
          "format": "int32",
          "type": "integer"
        },
        "salePackageId": {
          "format": "int32",
          "type": "integer"
        },
        "competitorPrice": {
          "format": "double",
          "type": "number"
        },
        "firstWOPrice": {
          "format": "double",
          "type": "number"
        },
        "assignee": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "salesOM": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "linkType": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "salesStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "opsManagerDispositionId": {
          "format": "int32",
          "type": "integer"
        },
        "lastWOId": {
          "format": "int32",
          "type": "integer"
        },
        "assigneeFullName": {
          "type": "string"
        },
        "assigneeImageUrl": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isClientEscalation": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataCallerPositionEntity": {
      "type": "object",
      "properties": {
        "isInternal": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.LocationProjectManagerEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "projectManager": {
          "type": "string",
          "readOnly": true
        },
        "accountId": {
          "type": "string"
        },
        "teamLead": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "projectManagerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "account": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "titleId": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AffiliateEntity": {
      "type": "object",
      "properties": {
        "resaleCertificatesVersion": {
          "type": "string"
        },
        "affiliateContactsPhones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.AffiliateContactsPhoneModel"
          }
        },
        "classification": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dbaName": {
          "type": "string"
        },
        "payableName": {
          "type": "string",
          "readOnly": true
        },
        "isCanada": {
          "type": "boolean",
          "readOnly": true
        },
        "isGeneralLiabilityExpired": {
          "type": "string"
        },
        "isInsuranceExpired": {
          "type": "string"
        },
        "otherName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "serviceStates": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "tin": {
          "type": "string"
        },
        "bn": {
          "type": "string"
        },
        "sin": {
          "type": "string"
        },
        "entityTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "stateRegistered": {
          "type": "string"
        },
        "webSite": {
          "type": "string"
        },
        "paymentTermsId": {
          "format": "int32",
          "type": "integer"
        },
        "crews": {
          "format": "int32",
          "type": "integer"
        },
        "contractedCrews": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "isCommEmail": {
          "type": "boolean"
        },
        "isCommFax": {
          "type": "boolean"
        },
        "isCommPDF": {
          "type": "boolean"
        },
        "isSourcing": {
          "type": "boolean"
        },
        "isSameBusinessAddr": {
          "type": "boolean"
        },
        "phoneExt": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "mobileCode": {
          "type": "string"
        },
        "mailAddress": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "businessAddress": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "contactId": {
          "format": "int64",
          "type": "integer"
        },
        "dispatcherEmail": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "isReceiveMessage": {
          "type": "boolean"
        },
        "isInHouse": {
          "type": "boolean"
        },
        "serviceRegion": {
          "type": "string"
        },
        "isAutoConfirmSnowAlerts": {
          "type": "boolean"
        },
        "contactInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AffiliateContactInfoEntity"
          }
        },
        "paymentTerms": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "affiliateStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "marketUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "complianceManager": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "insuranceSpecialist": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "compliant": {
          "type": "string"
        },
        "checkReleased": {
          "type": "string"
        },
        "msaCompliant": {
          "type": "string"
        },
        "msaCheckReleased": {
          "type": "string"
        },
        "authorizedDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractName": {
          "type": "string"
        },
        "contractStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractExpiredDate": {
          "format": "date-time",
          "type": "string"
        },
        "complianceManagereEntity": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "complianceManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "insuranceSpecialistEntity": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "insuranceSpecialistId": {
          "format": "int32",
          "type": "integer"
        },
        "marketManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "marketManagerName": {
          "type": "string"
        },
        "achDesignation": {
          "format": "int32",
          "type": "integer"
        },
        "achDesignationEntity": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "isIRSVerification": {
          "type": "boolean"
        },
        "administrativeEmployeesCount": {
          "format": "int32",
          "type": "integer"
        },
        "employedTechniciansCount": {
          "format": "int32",
          "type": "integer"
        },
        "isProvideAfterHoursAndWeekServices": {
          "type": "boolean"
        },
        "isProvideAfterHoursAndWeekServicesint": {
          "format": "int32",
          "type": "integer"
        },
        "haveSmartDevicesCanUtilize": {
          "format": "int32",
          "type": "integer"
        },
        "isServiceRetailType": {
          "type": "boolean"
        },
        "isServiceRestaurantType": {
          "type": "boolean"
        },
        "isServiceResidentialType": {
          "type": "boolean"
        },
        "isServiceOtherType": {
          "type": "boolean"
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataCountryEntity"
          }
        },
        "serviceCountry": {
          "type": "string"
        },
        "soSVerificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.AffiliateContactsPhoneModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "contactsTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "phones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.ContactsPhoneModel"
          }
        }
      }
    },
    "M2.Entity.AffiliateContactInfoEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "isMainContact": {
          "type": "boolean"
        },
        "isSigner": {
          "type": "boolean"
        },
        "contact": {
          "$ref": "#/definitions/M2.Entity.Contact"
        },
        "mobile": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "contactTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "contactTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ContactTypeMappingEntity"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataCountryEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.ContactsPhoneModel": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "phoneType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ContactTypeMappingEntity": {
      "type": "object",
      "properties": {
        "contactId": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.CallCenter.OpenVisitWatcherViewModel": {
      "type": "object",
      "properties": {
        "openDays": {
          "format": "int32",
          "type": "integer"
        },
        "visitCount": {
          "format": "int64",
          "type": "integer"
        },
        "watchers": {
          "format": "int64",
          "type": "integer"
        },
        "isUserWatched": {
          "type": "boolean"
        },
        "monthlyVisitCount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple[System.DateTime,System.Int32]"
          }
        }
      }
    },
    "System.Tuple[System.DateTime,System.Int32]": {
      "type": "object",
      "properties": {
        "item1": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "item2": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.ReactiveWOCreationApiModel": {
      "type": "object",
      "properties": {
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "caller": {
          "type": "string"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswers"
          }
        }
      }
    },
    "M2.Entity.QuestionAnswers": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string"
        },
        "questionId": {
          "type": "string"
        },
        "questionOptionId": {
          "type": "string"
        },
        "questionType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.ResidentialReactiveWoCreateModel": {
      "type": "object",
      "properties": {
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "clientId": {
          "format": "int64",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        },
        "residentId": {
          "format": "int64",
          "type": "integer"
        },
        "positionId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "commonQuestionData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswers"
          }
        },
        "troubleShootingQuestionData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswers"
          }
        }
      }
    },
    "M2.Entity.Module.DTO.ScheduleResult": {
      "type": "object",
      "properties": {
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TechnicianScore"
          }
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "schedulestarttime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleendtime": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "sum": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "distance": {
          "type": "string"
        },
        "distanceScore": {
          "type": "string"
        },
        "skillLevelScore": {
          "type": "string"
        },
        "skillLevel": {
          "type": "string"
        },
        "sameLocation": {
          "type": "string"
        },
        "sameLocationScore": {
          "type": "string"
        },
        "numLocation": {
          "type": "string"
        },
        "numLocationScore": {
          "type": "string"
        },
        "allGPS": {
          "type": "string"
        },
        "weathIcon": {
          "type": "string"
        },
        "lowWeather": {
          "type": "string"
        },
        "maxWeather": {
          "type": "string"
        },
        "drivingTime": {
          "type": "string"
        },
        "onSiteTime": {
          "type": "string"
        },
        "drivingTimeScore": {
          "type": "string"
        },
        "workTime": {
          "type": "string"
        },
        "woSort": {
          "type": "string"
        },
        "scheduleV32": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleV32WebRequestDto"
          }
        },
        "isNoUrgentScheduleTime": {
          "type": "boolean"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "bundleWoIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "bundleDataDirection": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "timeofSlot_Rank": {
          "type": "string"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "isSelectPushOutTechnician": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.TechnicianScore": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.Module.DTO.ScheduleV32WebRequestDto": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scores": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.FridgeListItemAttachmentRequestModel": {
      "type": "object",
      "properties": {
        "fridgeListItemAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Procare.FridgeListItemAttachmentDTO"
          }
        },
        "woId": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.FridgeListItemAttachmentDTO": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "filePath": {
          "description": "Relative file path.",
          "type": "string"
        },
        "dowloadUrl": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.SubtaskRescheduleRecommendRequestModel": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.FridgeListItemRescheduleModel": {
      "type": "object",
      "properties": {
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "rescheduleData": {
          "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
        }
      }
    },
    "M2.Entity.MessageQueryModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "refIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRead": {
          "type": "boolean"
        },
        "affiliateId": {
          "type": "string"
        },
        "orQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageQueryItem"
          }
        },
        "isNotMessageTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.MessageQueryItem": {
      "type": "object",
      "properties": {
        "senderType": {
          "type": "string"
        },
        "senderTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderUserId": {
          "type": "string"
        },
        "senderUserRefId": {
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientUserRefId": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "refId": {
          "type": "string"
        },
        "refIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.MessageContactGroupModel": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "enableRFI": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageContactGroupModel"
          }
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.MessageUserExtensionViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "isPrimary": {
          "type": "boolean"
        },
        "department": {
          "type": "string"
        },
        "isReceiveSms": {
          "type": "boolean"
        },
        "cellPhone": {
          "type": "string"
        },
        "messageUserAccountType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "operationManagerType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "type": "integer"
        },
        "locationEmployeeType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15
          ],
          "type": "integer"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.CommounicationSearchUserViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "isOnline": {
          "type": "boolean"
        },
        "roleId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "isReceiveSms": {
          "type": "boolean"
        },
        "messageUserAccountType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.WOReactiveSmartReplyClickLogQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "clickCount": {
          "type": "string"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Int16]": {
      "type": "object",
      "properties": {
        "result": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "System.Threading.Tasks.Task[System.Web.Mvc.JsonCamelCaseResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/System.Web.Mvc.JsonCamelCaseResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "System.Web.Mvc.JsonCamelCaseResult": {
      "type": "object",
      "properties": {
        "contentEncoding": {
          "$ref": "#/definitions/System.Text.Encoding"
        },
        "contentType": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "enableETag": {
          "type": "boolean",
          "readOnly": true
        },
        "dateTimeFormat": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.IList[M2.Entity.MessageEntity]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageEntity"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.MessageEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "content": {
          "type": "string"
        },
        "alertStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "senderType": {
          "type": "string"
        },
        "senderTypeName": {
          "type": "string"
        },
        "isReplied": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isHidden": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "sourceId": {
          "format": "int32",
          "type": "integer"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageRecipient"
          }
        },
        "ccs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageCCRecipientEntity"
          }
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "photoUrl": {
          "type": "string"
        },
        "isEm": {
          "type": "boolean"
        },
        "isHiddenMakeRead": {
          "type": "boolean"
        },
        "textMessageLog": {
          "$ref": "#/definitions/M2.Entity.TextMessageLogEntity"
        },
        "isArchiveMessage": {
          "type": "boolean"
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "smartReplyClickSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "smartMessageSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "separateMessageId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attemptTypes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "comments": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.MessageRecipient": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        },
        "readBy": {
          "type": "string"
        },
        "readTime": {
          "format": "date-time",
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypeName": {
          "type": "string"
        },
        "recipientUserRefId": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "messageRefId": {
          "type": "string"
        },
        "messageRefType": {
          "format": "int32",
          "type": "integer"
        },
        "senderTypeId": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isReplied": {
          "type": "boolean"
        },
        "createUserId": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isHidden": {
          "type": "boolean"
        },
        "readByUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "messageChannels": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.MessageCCRecipientEntity": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        },
        "recipientUserId": {
          "type": "string"
        },
        "readBy": {
          "type": "string"
        },
        "readTime": {
          "format": "date-time",
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "messageChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "recipientUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypeName": {
          "type": "string"
        },
        "isOnlyCc": {
          "type": "boolean"
        },
        "messageUserAccountType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "isOffline": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TextMessageLogEntity": {
      "type": "object",
      "properties": {
        "providerMessageId": {
          "type": "string"
        },
        "providerId": {
          "type": "string"
        },
        "providerType": {
          "type": "string"
        },
        "providerStatusName": {
          "type": "string"
        },
        "providerErrorCode": {
          "type": "string"
        },
        "providerErrorCodeDescription": {
          "$ref": "#/definitions/M2.Entity.TwilioAPIErrorCodeEntity"
        },
        "providerErrorMessage": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "sendTime": {
          "format": "date-time",
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "recipientUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TwilioAPIErrorCodeEntity": {
      "type": "object",
      "properties": {
        "extErrorCode": {
          "type": "string"
        },
        "extBriefDescription": {
          "type": "string"
        },
        "extDetailedDescription": {
          "type": "string"
        },
        "userDefinedDescription": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.CommentMessageViewmodel": {
      "type": "object",
      "properties": {
        "senderTypeName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "markAsRead": {
          "type": "boolean"
        },
        "level": {
          "format": "int32",
          "type": "integer"
        },
        "canReply": {
          "type": "boolean"
        },
        "isDeleteMessage": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "senderType": {
          "type": "string"
        },
        "isCurrentWoAffiliate": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageRecipient"
          }
        },
        "ccs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageCCRecipientEntity"
          }
        },
        "createUser": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageUserViewModel"
        },
        "childs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
          }
        },
        "readBtnIsOnly": {
          "type": "boolean"
        },
        "isReplied": {
          "type": "boolean"
        },
        "textMessageLog": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.TextMessageLogViewModel"
        },
        "isArchiveMessage": {
          "type": "boolean"
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.MessageUserViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "typeId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.MessageWrapperViewModel": {
      "type": "object",
      "properties": {
        "childs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
          }
        },
        "createUser": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageUserViewModel"
        },
        "textMessageLog": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.TextMessageLogViewModel"
        },
        "markAsRead": {
          "type": "boolean"
        },
        "level": {
          "format": "int32",
          "type": "integer"
        },
        "canReply": {
          "type": "boolean"
        },
        "isDeleteMessage": {
          "type": "boolean"
        },
        "detailUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "content": {
          "type": "string"
        },
        "senderType": {
          "type": "string"
        },
        "isCurrentWoAffiliate": {
          "type": "boolean"
        },
        "senderTypeName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isReplied": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageRecipient"
          }
        },
        "ccs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageCCRecipientEntity"
          }
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "currentUserClientType": {
          "format": "int32",
          "type": "integer"
        },
        "readBtnIsOnly": {
          "type": "boolean"
        },
        "isArchiveMessage": {
          "type": "boolean"
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.TextMessageLogViewModel": {
      "type": "object",
      "properties": {
        "statusName": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.ComboMessageViewModel": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "userTypeId": {
          "type": "string"
        },
        "userType": {
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "sourceType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "sourceTypeName": {
          "type": "string",
          "readOnly": true
        },
        "eventLogRefType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            78,
            79,
            80,
            81
          ],
          "type": "integer"
        },
        "senderTypeName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "markAsRead": {
          "type": "boolean"
        },
        "level": {
          "format": "int32",
          "type": "integer"
        },
        "canReply": {
          "type": "boolean"
        },
        "isDeleteMessage": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "senderType": {
          "type": "string"
        },
        "isCurrentWoAffiliate": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageRecipient"
          }
        },
        "ccs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageCCRecipientEntity"
          }
        },
        "createUser": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageUserViewModel"
        },
        "childs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
          }
        },
        "readBtnIsOnly": {
          "type": "boolean"
        },
        "isReplied": {
          "type": "boolean"
        },
        "textMessageLog": {
          "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.TextMessageLogViewModel"
        },
        "isArchiveMessage": {
          "type": "boolean"
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.MessagePostViewModel": {
      "required": [
        "refId",
        "content"
      ],
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "sendTos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.SendToViewModel"
          }
        },
        "content": {
          "type": "string"
        },
        "messageTypeId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isUseFrontendAffiliateRef": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "smartMessageSourceTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.SendToViewModel": {
      "type": "object",
      "properties": {
        "isGroup": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "imChecked": {
          "type": "boolean"
        },
        "emailChecked": {
          "type": "boolean"
        },
        "textChecked": {
          "type": "boolean"
        },
        "messageUserAccountType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "messageChannels": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer"
          },
          "readOnly": true
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.SmartMessagePostViewModel": {
      "required": [
        "refId",
        "content"
      ],
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "sendTos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.SendToViewModel"
          }
        },
        "content": {
          "type": "string"
        },
        "messageTypeId": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isUseFrontendAffiliateRef": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "smartReplyClickSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "smartMessageSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "attemptTypes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "comments": {
          "type": "string"
        }
      }
    },
    "M2.Entity.MessageResultModel": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        },
        "recipientId": {
          "type": "string"
        },
        "recipientName": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.CommentPostViewModel": {
      "required": [
        "refId",
        "content"
      ],
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "messageTypeId": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.MessageReplyViewModel": {
      "required": [
        "refId",
        "content",
        "parentId",
        "recipientType",
        "recipientUserRefId"
      ],
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        },
        "recipientUserRefId": {
          "type": "string"
        },
        "recipientUserId": {
          "type": "string"
        },
        "isSendAsTxt": {
          "type": "boolean"
        },
        "isSendAsEmail": {
          "type": "boolean"
        },
        "isUseFrontendAffiliateRef": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "smartReplyClickSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "smartMessageSourceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "attemptTypes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "comments": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.IList[Moon.Web.Initializer.ViewModels.MessageWrapperViewModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Initializer.ViewModels.MessageWrapperViewModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.ConfirmViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "description": "Gets or sets the type of the reference.",
          "enum": [
            0,
            1,
            -1
          ],
          "type": "integer"
        },
        "refId": {
          "description": "Gets or sets the reference identifier.",
          "type": "string"
        },
        "rate": {
          "format": "int32",
          "description": "Gets or sets the rate.",
          "type": "integer"
        },
        "rateComments": {
          "description": "Gets or sets the rate comments.",
          "type": "string"
        },
        "confirmType": {
          "format": "int32",
          "description": "Gets or sets the type of the confirm.",
          "type": "integer"
        },
        "confirmTypeName": {
          "description": "Gets or sets the name of the confirm type.",
          "type": "string"
        },
        "confirmBy": {
          "description": "Gets or sets the confirm by.",
          "type": "string"
        },
        "confirmUserName": {
          "description": "Gets or sets the name of the confirm user.",
          "type": "string"
        },
        "confirmEmail": {
          "description": "Gets or sets the confirm email.",
          "type": "string"
        },
        "confirmUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity",
          "description": "Gets or sets the confirm user."
        },
        "confirmTime": {
          "format": "date-time",
          "description": "Gets or sets the confirm time.",
          "type": "string"
        },
        "rateReasonEnumId": {
          "format": "int32",
          "description": "Gets or sets the rate reason enum identifier.",
          "type": "integer"
        },
        "rateReasonEnumName": {
          "description": "Gets or sets the name of the rate reason enum.",
          "type": "string"
        },
        "contactCenterRate": {
          "format": "int32",
          "description": "Gets or sets the contact center rate.",
          "type": "integer"
        },
        "contactCenterRateReasonEnumId": {
          "format": "int32",
          "description": "Gets or sets the contact center rate reason enum identifier.",
          "type": "integer"
        },
        "contactCenterRateComments": {
          "description": "Gets or sets the contact center rate comments.",
          "type": "string"
        },
        "notCompletedReasonEnumId": {
          "format": "int32",
          "description": "Gets or sets the not completed reason enum identifier.",
          "type": "integer"
        },
        "notCompletedComments": {
          "description": "Gets or sets the not completed comments.",
          "type": "string"
        },
        "reRateComments": {
          "description": "Gets or sets the re rate comments.",
          "type": "string"
        },
        "workCompletedStatus": {
          "format": "int32",
          "description": "Gets or sets the work completed status.",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.ConfirmEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            -1
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "isServiced": {
          "type": "boolean"
        },
        "rate": {
          "format": "int32",
          "type": "integer"
        },
        "rateComments": {
          "type": "string"
        },
        "confirmType": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeName": {
          "type": "string"
        },
        "confirmEmail": {
          "type": "string"
        },
        "confirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmBy": {
          "type": "string"
        },
        "confirmUserName": {
          "type": "string"
        },
        "rateSource": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "confirmUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "token": {
          "type": "string"
        },
        "rateReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRate": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRateReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRateComments": {
          "type": "string"
        },
        "notCompletedReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "notCompletedComments": {
          "type": "string"
        },
        "reRateComments": {
          "type": "string"
        },
        "workCompletedStatus": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "isABTestAction": {
          "type": "boolean"
        },
        "isBill": {
          "type": "boolean"
        },
        "isUndo": {
          "type": "boolean"
        },
        "recommendationRate": {
          "format": "int32",
          "type": "integer"
        },
        "easySchedulingRate": {
          "format": "int32",
          "type": "integer"
        },
        "isLocationRatingNotAvailable": {
          "type": "boolean"
        },
        "isNotFacilitiesDepartmentAndInteriorRecurring": {
          "type": "boolean"
        },
        "isPassContactCenterRating": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ConfirmLogEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            -1
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "isServiced": {
          "type": "boolean"
        },
        "rate": {
          "format": "int32",
          "type": "integer"
        },
        "rateComments": {
          "type": "string"
        },
        "confirmType": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeName": {
          "type": "string"
        },
        "confirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmBy": {
          "type": "string"
        },
        "confirmUserName": {
          "type": "string"
        },
        "confirmUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "confirmEmail": {
          "type": "string"
        },
        "rateSource": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "rateReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRate": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRateReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "contactCenterRateComments": {
          "type": "string"
        },
        "notCompletedReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "notCompletedComments": {
          "type": "string"
        },
        "reRateComments": {
          "type": "string"
        },
        "workCompletedStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isBill": {
          "type": "boolean"
        },
        "recommendationRate": {
          "format": "int32",
          "type": "integer"
        },
        "easySchedulingRate": {
          "format": "int32",
          "type": "integer"
        },
        "isPassContactCenterRating": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataConfirmTypeEntity": {
      "type": "object",
      "properties": {
        "isBill": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.CommentRateReasonViewModel": {
      "type": "object",
      "properties": {
        "sysEnumTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "readOnly": true
        },
        "amount": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.DTO.ConfirmRateStatusModel": {
      "type": "object",
      "properties": {
        "isRate": {
          "type": "boolean"
        },
        "workCompleteStatus": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Shared.Confirm.MultipleSelectRatingReasonNotesModel": {
      "type": "object",
      "properties": {
        "serviceRateReasonEnumId": {
          "type": "string"
        },
        "serviceRateReasonNotes": {
          "type": "string"
        }
      }
    },
    "M2.Entity.IdNameModel[System.String]": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Shared.Confirm.ServiceConfirmModel": {
      "type": "object",
      "properties": {
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "woCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.ClientReasonViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "criticalEventReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "criticalEventReason": {
          "type": "string"
        },
        "criticalEventTypeId": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Web.Mvc.FileStreamResult": {
      "type": "object",
      "properties": {
        "fileStream": {
          "$ref": "#/definitions/System.IO.Stream",
          "readOnly": true
        },
        "contentType": {
          "type": "string",
          "readOnly": true
        },
        "fileDownloadName": {
          "type": "string"
        }
      }
    },
    "System.IO.Stream": {
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "readOnly": true
        },
        "canSeek": {
          "type": "boolean",
          "readOnly": true
        },
        "canTimeout": {
          "type": "boolean",
          "readOnly": true
        },
        "canWrite": {
          "type": "boolean",
          "readOnly": true
        },
        "length": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.RecurrentWoQueryModel": {
      "type": "object",
      "properties": {
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isHighPriority": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "beginCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "isFromCall": {
          "type": "boolean"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isFirstWoRecurrent": {
          "type": "boolean"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "operationId": {
          "type": "string"
        },
        "userWOExportId": {
          "type": "string"
        },
        "oM1Ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teamLeadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orgFilterLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "primaryAffiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "primaryAffiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "createMonths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userVisibleLabeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woRecurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woRecurrentId": {
          "type": "string"
        },
        "userActualParams": {
          "type": "string"
        },
        "isPreService": {
          "type": "boolean"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "ownerId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "assigneeId": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DataStateAbbrEntity": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "stateAbbr": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.RetailStopFoodDeliveryWoModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RetailStopFoodDeliveryWoModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.RetailStopFoodDeliveryWoModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityName": {
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "clientNTE": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customerWoStatusName": {
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        },
        "proposalList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalProposalViewModel"
          }
        },
        "timeInStatus": {
          "format": "int64",
          "type": "integer"
        },
        "areas": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.QuoteWaitingApprovalProposalViewModel": {
      "type": "object",
      "properties": {
        "proposalNum": {
          "type": "string"
        },
        "proposalAmount": {
          "format": "double",
          "type": "number"
        },
        "preApprovedBy": {
          "type": "string"
        },
        "preApprovedTime": {
          "format": "date-time",
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPreApproved": {
          "type": "boolean"
        },
        "purposeName": {
          "type": "string"
        },
        "proposalId": {
          "type": "string"
        },
        "preApproveNotes": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.SimWoListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.SimWoListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.SimWoListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "woCategoryName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "serviceRating": {
          "type": "string"
        },
        "customerWoStatusName": {
          "type": "string"
        },
        "visitLog": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "locationName": {
          "type": "string"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.ProjectQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "progress": {
          "format": "double",
          "type": "number"
        },
        "projectNum": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "trpStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "trpStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scopeAppFilterStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "scopeAppFilterStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "actualStart": {
          "format": "date-time",
          "type": "string"
        },
        "actualEnd": {
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "completed": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "assignee": {
          "type": "string"
        },
        "clientAssigneeId": {
          "type": "string"
        },
        "dateofEstimation": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "estimatorPhone": {
          "type": "string"
        },
        "estimatorEmail": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "clientAssigneeName": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "smsNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "initialBudget": {
          "format": "double",
          "type": "number"
        },
        "bidRequestId": {
          "type": "string"
        },
        "qcWalkReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "qcWalkReadyDateHasValue": {
          "type": "boolean"
        },
        "queryCurrentMonth": {
          "type": "boolean"
        },
        "estimatedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateBudget": {
          "format": "double",
          "type": "number"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "isInspection": {
          "type": "boolean"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "projectIconType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "appVersion": {
          "type": "string"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "woNum": {
          "type": "string"
        },
        "outOfScopeStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskAffiliateName": {
          "type": "string"
        },
        "taskAffiliateCode": {
          "type": "string"
        },
        "projectCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "projectCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "completionPercentageRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DoubleRangeModel"
          }
        },
        "createDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "scheduleStartDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "actualStartDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "actualEndDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "orginalScheduleEndDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "estimatedEndDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "expectedCompletionDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "qcWalkReadyDateRange": {
          "$ref": "#/definitions/M2.Entity.DateTimeRangeModel"
        },
        "totalOfCompleteDayRange": {
          "$ref": "#/definitions/M2.Entity.IntRangeModel"
        },
        "budgetRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DecimalRangeModel"
          }
        },
        "marginRange": {
          "$ref": "#/definitions/M2.Entity.DoubleRangeModel"
        },
        "inspectionTime": {
          "format": "date-time",
          "type": "string"
        },
        "expectedCompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "projectTypeName": {
          "type": "string"
        },
        "projectTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "departmentId": {
          "type": "string"
        },
        "turnRehabCapitalProjectStatusEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "trpTurnInitialStatus": {
          "format": "int32",
          "type": "integer"
        },
        "trpAssessmentFinalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isSMSPerformingAssessment": {
          "type": "boolean"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "inProgressStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isInThePastOfScheduleStart": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "isConfiguredWithAB": {
          "type": "boolean"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "invalidStateIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "taskStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "taskServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "maintenanceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "assessmentReviewStatus": {
          "format": "int32",
          "type": "integer"
        },
        "phaseId": {
          "format": "int32",
          "type": "integer"
        },
        "isSingleLocation": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DoubleRangeModel": {
      "type": "object",
      "properties": {
        "start": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "double",
          "type": "number"
        },
        "startValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "endValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "M2.Entity.DateTimeRangeModel": {
      "type": "object",
      "properties": {
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "rangeName": {
          "type": "string"
        },
        "startValue": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "endValue": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "M2.Entity.IntRangeModel": {
      "type": "object",
      "properties": {
        "start": {
          "format": "int32",
          "type": "integer"
        },
        "end": {
          "format": "int32",
          "type": "integer"
        },
        "startValue": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "endValue": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "M2.Entity.DecimalRangeModel": {
      "type": "object",
      "properties": {
        "start": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "double",
          "type": "number"
        },
        "startValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "endValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "M2.Entity.RoleCommunicationConfigEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/M2.Entity.RoleEntity"
        },
        "isTextMessagNotice": {
          "type": "boolean"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair[M2.Entity.DataKeyValueEntity,System.Int32]": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity",
          "readOnly": true
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPCDAPendingModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoClientPCDAPendingModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoClientPCDAPendingModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationZipCode": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "autoApprovalResidueTime": {
          "type": "string"
        },
        "autoApprovalResidueSeconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "signDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "signReasonRemark": {
          "type": "string"
        },
        "signReasonArray": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "M2.Entity.DataWOTypeEntity": {
      "type": "object",
      "properties": {
        "isRecurrent": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.WorkOrdersCreatedByMeQueryModel": {
      "type": "object",
      "properties": {
        "createUserId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "city": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DataWOStatusEntity": {
      "type": "object",
      "properties": {
        "isRecurrent": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEvent": {
          "type": "boolean"
        },
        "customerWOStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.RfiWoQueryModel": {
      "type": "object",
      "properties": {
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "classificationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "maintenanceRoleId": {
          "type": "string"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "address": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "projectStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "projectStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "senderTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRead": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "messageTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "nonTerminalWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "orQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageQueryItem"
          }
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "ageOfRfiStart": {
          "format": "date-time",
          "type": "string"
        },
        "ageOfRfiEnd": {
          "format": "date-time",
          "type": "string"
        },
        "ageofRFI": {
          "format": "int64",
          "type": "integer"
        },
        "beginCreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "trpStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "projectTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RFITraceQueryModel": {
      "type": "object",
      "properties": {
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationId": {
          "type": "string"
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "isTask": {
          "type": "boolean"
        },
        "maintenanceRoleId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "string"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Report.TotalSpendingQueryModel": {
      "type": "object",
      "properties": {
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.TotalSpendingExportQueryModel": {
      "type": "object",
      "properties": {
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RecurrentWoEntity": {
      "type": "object",
      "properties": {
        "isHighPriority": {
          "type": "boolean"
        },
        "woAge": {
          "format": "int32",
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "assigneeId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "beginCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "firstAssetThumbnailUrl": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "woCategoryName": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "assetSerialNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "assetUrl": {
          "type": "string"
        },
        "departmentName": {
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "locationAssignedAffiliate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.KeyValueModel"
          }
        },
        "locationServiceTypeAffiliateId": {
          "type": "string"
        },
        "primaryAffiliateId": {
          "type": "string"
        },
        "secondaryAffiliateId": {
          "type": "string"
        },
        "tertiaryAffiliateId": {
          "type": "string"
        },
        "affiliateCost": {
          "format": "double",
          "type": "number"
        },
        "purchaseNum": {
          "type": "string"
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.WoRecurrentAttributeEntity"
        },
        "canOnTheWay": {
          "type": "boolean",
          "readOnly": true
        },
        "isClientFiscalMonthAbModuleConfiged": {
          "type": "boolean"
        },
        "clientFiscalMonthEntity": {
          "$ref": "#/definitions/M2.Entity.ClientFiscalMonthEntity"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "affiliatePriority": {
          "$ref": "#/definitions/M2.Entity.AffiliatePrioritySettingEntity"
        },
        "isAllowActiveChargeBack": {
          "type": "boolean"
        },
        "affiliateJobOrderNum": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "glCode": {
          "type": "string"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WoRecurrentAttributeEntity": {
      "type": "object",
      "properties": {
        "woRecurrentId": {
          "type": "string"
        },
        "photoCount": {
          "format": "int32",
          "type": "integer"
        },
        "homeAdvisorStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "homeAdvisorStatusUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "homeAdvisorDeclineReason": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "criticalEventReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "criticalEventComments": {
          "type": "string"
        },
        "expirationReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "criticalFlagTime": {
          "format": "date-time",
          "type": "string"
        },
        "deferredReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "onTheWayStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purchaseNum": {
          "type": "string"
        },
        "recommendationRating": {
          "format": "int32",
          "type": "integer"
        },
        "recommendationTime": {
          "format": "date-time",
          "type": "string"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "residentDamageComment": {
          "type": "string"
        },
        "chargeBackAmount": {
          "format": "double",
          "type": "number"
        },
        "isWOCompletedByClient": {
          "type": "boolean"
        },
        "woNotCompleteByClientComment": {
          "type": "string"
        },
        "recommendationComments": {
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "overrideSIDUserId": {
          "type": "string"
        },
        "overrideSIDDate": {
          "format": "date-time",
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "buildingId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientFiscalMonthEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalYear": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalPeriodName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AffiliatePrioritySettingEntity": {
      "type": "object",
      "properties": {
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityAliasName": {
          "type": "string"
        },
        "chartShortName": {
          "type": "string"
        },
        "chartStyle": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataWOCategoryEntity": {
      "type": "object",
      "properties": {
        "isRecurrent": {
          "type": "boolean"
        },
        "isEvent": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataPriorityEntity": {
      "type": "object",
      "properties": {
        "timetoAccept": {
          "format": "int32",
          "type": "integer"
        },
        "timetoArrive": {
          "format": "int32",
          "type": "integer"
        },
        "timetoResolve": {
          "format": "int32",
          "type": "integer"
        },
        "priorityRank": {
          "format": "int32",
          "type": "integer"
        },
        "timeToSchedule": {
          "format": "int32",
          "type": "integer"
        },
        "timeToQuote": {
          "format": "int32",
          "type": "integer"
        },
        "timeToResolveQuotedWork": {
          "format": "int32",
          "type": "integer"
        },
        "timeToInvoice": {
          "format": "int32",
          "type": "integer"
        },
        "abbrName": {
          "type": "string"
        },
        "pImg": {
          "type": "string"
        },
        "chartShortName": {
          "type": "string"
        },
        "chartStyle": {
          "type": "string"
        },
        "chartColor": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataLocationResponsibleEntity": {
      "type": "object",
      "properties": {
        "reEntity": {
          "type": "string"
        },
        "imgLink": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.DataSysEnumEntity": {
      "type": "object",
      "properties": {
        "sysEnumTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "describle": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "sysEnumType": {
          "$ref": "#/definitions/M2.Entity.DataSysEnumTypeEntity"
        },
        "sysEnumTypeName": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRateReasonNotes": {
          "type": "string"
        },
        "groupId": {
          "format": "int32",
          "type": "integer"
        },
        "nextStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataSysEnumTypeEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Areas.StoreManager.Models.EscalatedWoModel": {
      "type": "object",
      "properties": {
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woNum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.ReactiveWoViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isSim": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "locationNumber": {
          "type": "string"
        },
        "woType": {
          "type": "string"
        },
        "missedScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "areasId": {
          "format": "int32",
          "type": "integer"
        },
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "escalateTimeSince": {
          "format": "date-time",
          "type": "string"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "issuesReasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Moon.Web.Client.Areas.StoreManager.Models.OpenWoModel": {
      "type": "object",
      "properties": {
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woNum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.SOM.Models.UserInfoModel": {
      "type": "object",
      "properties": {
        "userFirstName": {
          "type": "string"
        },
        "userLastName": {
          "type": "string"
        },
        "userImgUrl": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WOReactiveMissedAppointmentQueryModel": {
      "type": "object",
      "properties": {
        "missedScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "userActualParams": {
          "type": "string"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Report.RentersWareHouseQueryModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "prioritys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reasons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "userActualParams": {
          "type": "string"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.WOReactiveReasonHistoryQueryModel": {
      "type": "object",
      "properties": {
        "woReactiveId": {
          "type": "string"
        },
        "reasonTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "reason": {
          "type": "string"
        },
        "customerType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "is24HR": {
          "type": "boolean"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "addressFuzzy": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "smsNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "photoLabelId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "isAssignedAffiliate": {
          "type": "boolean"
        },
        "operationManagerName": {
          "type": "string"
        },
        "residentName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "locationStatus": {
          "type": "string"
        },
        "relocationDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "locationComplex": {
          "type": "string"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isGroupBy": {
          "type": "boolean"
        },
        "locationStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "qrCode": {
          "type": "string"
        },
        "legacyLocationNumber": {
          "type": "string"
        },
        "isNotPlanItem": {
          "type": "boolean"
        },
        "isAutoRFI": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task[Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.TriconPendingDispatchModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.TriconPendingDispatchModel]",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.TriconPendingDispatchModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TriconPendingDispatchModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TriconPendingDispatchModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "property": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "problemCode": {
          "type": "string"
        },
        "woType": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "lastNote": {
          "type": "string"
        },
        "lastNoteTime": {
          "format": "date-time",
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "residenName": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "callSource": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientServiceCodeNteQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ServiceCategoryUserMappingQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.AffiliateEmployeeQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateIdExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "employeeNum": {
          "type": "string"
        },
        "employeeNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "employeeUserNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "terminationDate": {
          "format": "date-time",
          "type": "string"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "drugTestDate": {
          "format": "date-time",
          "type": "string"
        },
        "bgCheckDate": {
          "format": "date-time",
          "type": "string"
        },
        "oshaLevel": {
          "type": "string"
        },
        "isPPET": {
          "type": "boolean"
        },
        "confinedTrain": {
          "type": "boolean"
        },
        "confinedTrainDate": {
          "format": "date-time",
          "type": "string"
        },
        "isFallProtection": {
          "type": "boolean"
        },
        "fallProtectionDate": {
          "format": "date-time",
          "type": "string"
        },
        "isLOTO": {
          "type": "boolean"
        },
        "lotoDate": {
          "format": "date-time",
          "type": "string"
        },
        "isFireTrain": {
          "type": "boolean"
        },
        "fireTrainDate": {
          "format": "date-time",
          "type": "string"
        },
        "met": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxCapacity": {
          "type": "string"
        },
        "maxLocations": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "isCanServiceProCare": {
          "type": "boolean"
        },
        "isInHouse": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "isAffiliateOrTechnician": {
          "type": "boolean"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        },
        "findInSetAffiliateServiceRegion": {
          "type": "string"
        },
        "isCertified": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DataAreasMappingEntity": {
      "type": "object",
      "properties": {
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.AverageConfirmationRatingsQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.CompletedServicesQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.EstimatedCurrentMonthlySpendQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.FinancialOverviewMTDQueryModel": {
      "type": "object",
      "properties": {
        "isPersonal": {
          "type": "boolean"
        },
        "isVP": {
          "type": "boolean"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.FinancialOverviewMTDResultModel": {
      "type": "object",
      "properties": {
        "operatingTotal": {
          "format": "double",
          "type": "number"
        },
        "operatingAverageSpendPerProperty": {
          "format": "double",
          "type": "number"
        },
        "operatingAverageSpendPerWorkOrder": {
          "format": "double",
          "type": "number"
        },
        "operatingWOCount": {
          "format": "double",
          "type": "number"
        },
        "operatingAnnualizedCallVolume": {
          "format": "double",
          "type": "number"
        },
        "capitalTotal": {
          "format": "double",
          "type": "number"
        },
        "capitalAverageSpendPerProperty": {
          "format": "double",
          "type": "number"
        },
        "capitalAverageSpendPerWorkOrder": {
          "format": "double",
          "type": "number"
        },
        "capitalWOCount": {
          "format": "double",
          "type": "number"
        },
        "capitalAnnualizedCallVolume": {
          "format": "double",
          "type": "number"
        },
        "averageTotalTimeToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "averageCallToScheduleDays": {
          "format": "double",
          "type": "number"
        },
        "averageScheduleToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "totalSpend": {
          "format": "double",
          "type": "number"
        },
        "averageSpendPerProperty": {
          "format": "double",
          "type": "number"
        },
        "averageSpendPerWorkOrder": {
          "format": "double",
          "type": "number"
        },
        "totalWorkOrderCount": {
          "format": "double",
          "type": "number"
        },
        "annualizedCallVolume": {
          "format": "double",
          "type": "number"
        },
        "averageCustomerRating": {
          "format": "double",
          "type": "number"
        },
        "residentRatePercentage": {
          "format": "double",
          "type": "number"
        },
        "rateAboveThreePercentage": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.TotalOpenReactiveWorkOrdersQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.TotalOpenRecurringWorkOrdersQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersAgingQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersAgingResultModel": {
      "type": "object",
      "properties": {
        "firstWeek": {
          "format": "int64",
          "type": "integer"
        },
        "secondWeek": {
          "format": "int64",
          "type": "integer"
        },
        "thirdWeek": {
          "format": "int64",
          "type": "integer"
        },
        "thirdToFourWeek": {
          "format": "int64",
          "type": "integer"
        },
        "thirdWeekPlus": {
          "format": "int64",
          "type": "integer"
        },
        "fourthWeekPlus": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersByStatusQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWorkOrdersByStatusResultModel": {
      "type": "object",
      "properties": {
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewQueryModel": {
      "type": "object",
      "properties": {
        "beginCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewResultModel": {
      "type": "object",
      "properties": {
        "totalSpend": {
          "format": "double",
          "type": "number"
        },
        "averageSpendPerProperty": {
          "format": "double",
          "type": "number"
        },
        "averageSpendPerWorkOrder": {
          "format": "double",
          "type": "number"
        },
        "totalWorkOrderCount": {
          "format": "int64",
          "type": "integer"
        },
        "annualizedCallVolume": {
          "format": "double",
          "type": "number"
        },
        "averageCustomerRating": {
          "format": "double",
          "type": "number"
        },
        "avoidanceTotalSpend": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PerformanceOverviewResidentialResultModel": {
      "type": "object",
      "properties": {
        "onTimePercentage": {
          "format": "double",
          "type": "number"
        },
        "firstVisitCompletePercentage": {
          "format": "double",
          "type": "number"
        },
        "avoidedWOPercentage": {
          "format": "double",
          "type": "number"
        },
        "recallWOPercentage": {
          "format": "double",
          "type": "number"
        },
        "residentRatePercentage": {
          "format": "double",
          "type": "number"
        },
        "rateAboveThreePercentage": {
          "format": "double",
          "type": "number"
        },
        "avgCustomerRating": {
          "format": "double",
          "type": "number"
        },
        "totalTimeToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "avgCapitalTotalTimeToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "avgOperatingTotalTimeToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "avgTimeCallToSchedule": {
          "format": "double",
          "type": "number"
        },
        "avgCapitalCallToScheduleDays": {
          "format": "double",
          "type": "number"
        },
        "avgOperatingCallToScheduleDays": {
          "format": "double",
          "type": "number"
        },
        "avgTimeScheduleToComplete": {
          "format": "double",
          "type": "number"
        },
        "avgCapitalScheduleToCompleteDays": {
          "format": "double",
          "type": "number"
        },
        "avgOperatingScheduleToCompleteDays": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.ScheduledServicesQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWOsByStatusByRegionCountQueryModel": {
      "type": "object",
      "properties": {
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWOsByStatusByRegionCountResultModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.CriticalEventQueryModel": {
      "type": "object",
      "properties": {
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.EscalationsQueryModel": {
      "type": "object",
      "properties": {
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OnSiteProposalQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiController.OpenWoAgingQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCalltime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.QuotesWaitingApprovalCountQueryModel": {
      "type": "object",
      "properties": {
        "isWph": {
          "type": "boolean"
        },
        "clientRoleId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.UserWatchedWoListQueryModel": {
      "type": "object",
      "properties": {
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.GetUserWatchedWoListResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4
          ],
          "type": "integer"
        },
        "subAreas": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.WebService.Client.DashboardApiController.UserWatchedListViewModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.DashboardApiController.UserWatchedListViewModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.DashboardApiController.UserWatchedListViewModel": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "watchDate": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PastScheduleQueryModel": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.DashboardApiRepo.PastScheduleResultModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PastScheduleResultModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PastScheduleResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationZipCode": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.ProCareAtRiskCountQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.ProCareToBeScheduleCountQueryModel": {
      "type": "object",
      "properties": {
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededQueryModel": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededResultModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededResultModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.ReturnTripNeededResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "timeChangedToRTN": {
          "format": "date-time",
          "type": "string"
        },
        "signReasonRemark": {
          "type": "string"
        },
        "locationZipCode": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.OpenWoQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalResultModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalResultModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.PendingDispatchApprovalResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeName": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "houseOwnerStatus": {
          "type": "string"
        },
        "declineReasonId": {
          "type": "string"
        },
        "houseOwnerDeclineReasonName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "hasHouseOwner": {
          "type": "boolean"
        },
        "timeInPending": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.DashboardApiRepo.RequestAffiliateDispatchQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.WorkOrdersCreatedByMeQueryModel": {
      "type": "object",
      "properties": {
        "createUserId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "city": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[Moon.WebService.Client.WorkOrdersCreatedByMeViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.WorkOrdersCreatedByMeViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.WorkOrdersCreatedByMeViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationNumber": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "statusName": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Report.OpenWoCountModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "servcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "locationIds": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "abbrName": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.MonthToDaySpendViewModel": {
      "type": "object",
      "properties": {
        "spend": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "count": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.DailyServiceSpendModel": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "spend": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.CalendarViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "woTypeId": {
          "type": "string"
        }
      }
    },
    "System.Collections.Generic.KeyValuePair[M2.Entity.DataKeyValueEntity,System.Decimal]": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity",
          "readOnly": true
        },
        "value": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "M2.Entity.DataClassificationEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Infrastructure.IdNameQueryResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPcdaCurrentlyPendingModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoClientPcdaCurrentlyPendingModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoClientPcdaCurrentlyPendingModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationZipCode": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "autoApprovalResidueTime": {
          "type": "string"
        },
        "autoApprovalResidueSeconds": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "signDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "signReasonRemark": {
          "type": "string"
        },
        "signReasonArray": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoClientPcdaPastPcdaDecisionsModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoClientPcdaPastPcdaDecisionsModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoClientPcdaPastPcdaDecisionsModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationZipCode": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "reasonTypeId": {
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyUserName": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "signDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "signReasonRemark": {
          "type": "string"
        },
        "signReasonArray": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "M2.Entity.ExportApiResult": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "fileUrl": {
          "type": "string"
        },
        "requestNum": {
          "type": "string"
        },
        "dataCount": {
          "format": "int64",
          "type": "integer"
        },
        "sendEmail": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.WorkOrderAutomation.PcdaPermissionModel": {
      "type": "object",
      "properties": {
        "pcdaPackageId": {
          "format": "int32",
          "type": "integer"
        },
        "canDoPcdaAction": {
          "type": "boolean"
        },
        "canAutomaticDeferral": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.OpenWOListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.OpenWOListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.OpenWOListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityName": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.Controllers.DataSysEnumQueryModel": {
      "type": "object",
      "properties": {
        "sysEnumName": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "sysEnumType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            20,
            21,
            22,
            23,
            24,
            26,
            28,
            29,
            30,
            31,
            36,
            37
          ],
          "type": "integer"
        },
        "sysEnumTypes": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              20,
              21,
              22,
              23,
              24,
              26,
              28,
              29,
              30,
              31,
              36,
              37
            ],
            "type": "integer"
          }
        },
        "sysEnumTypeName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProposalEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "proposalNum": {
          "type": "string"
        },
        "proposalDate": {
          "format": "date-time",
          "type": "string"
        },
        "proposalText": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "submitUserId": {
          "type": "string"
        },
        "isLaborMaterialPricing": {
          "type": "boolean"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "reviewUserId": {
          "type": "string"
        },
        "reviewDate": {
          "format": "date-time",
          "type": "string"
        },
        "isPermitRequired": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeName": {
          "type": "string"
        },
        "resolutionCodeDescription": {
          "type": "string"
        },
        "templateType": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceTemplateId": {
          "type": "string"
        },
        "templateTypeName": {
          "type": "string"
        },
        "needShowBidDueDate": {
          "type": "boolean"
        },
        "bidDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "approveUserId": {
          "type": "string"
        },
        "approveTime": {
          "format": "date-time",
          "type": "string"
        },
        "approveNotes": {
          "type": "string"
        },
        "declineUserId": {
          "type": "string"
        },
        "declineDate": {
          "format": "date-time",
          "type": "string"
        },
        "declineNotes": {
          "type": "string"
        },
        "declineSubReason": {
          "type": "string"
        },
        "declineReason": {
          "type": "string"
        },
        "declineReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "declineReasonIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "preApproveUserId": {
          "type": "string"
        },
        "preApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "preApproveNotes": {
          "type": "string"
        },
        "isVerbalApproval": {
          "type": "boolean"
        },
        "verbalApprovalUserId": {
          "type": "string"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "invoiceConfig": {
          "$ref": "#/definitions/M2.Entity.InvoiceModelConfig"
        },
        "verbalApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "approveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "declineUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "preApproveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "submitUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "verbalApprovalUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "stat": {
          "$ref": "#/definitions/M2.Entity.ProposalStatModel"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "isReSubmit": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "wo": {
          "$ref": "#/definitions/M2.Entity.WoBaseEntity"
        },
        "isBlindQuote": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceModelConfig": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "platformFeeRate": {
          "format": "double",
          "type": "number"
        },
        "serviceFeeRate": {
          "format": "double",
          "type": "number"
        },
        "defaultMargin": {
          "format": "double",
          "type": "number"
        },
        "laborMargin": {
          "format": "double",
          "type": "number"
        },
        "materialsMargin": {
          "format": "double",
          "type": "number"
        },
        "travelChargeMargin": {
          "format": "double",
          "type": "number"
        },
        "freightMargin": {
          "format": "double",
          "type": "number"
        },
        "otherMargin": {
          "format": "double",
          "type": "number"
        },
        "defaultDescription": {
          "type": "string"
        },
        "jiraOne6076": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ProposalStatModel": {
      "type": "object",
      "properties": {
        "proposalId": {
          "type": "string"
        },
        "totalQty": {
          "format": "int32",
          "type": "integer"
        },
        "totalCost": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalPrice": {
          "format": "double",
          "type": "number"
        },
        "proposalTotal": {
          "format": "double",
          "type": "number"
        },
        "margin": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.DataPurposeEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.WoBaseEntity": {
      "type": "object",
      "properties": {
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "glCode": {
          "type": "string"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.ViewResult": {
      "type": "object",
      "properties": {
        "masterName": {
          "type": "string"
        },
        "model": {
          "type": "object",
          "readOnly": true
        },
        "tempData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "view": {
          "$ref": "#/definitions/System.Web.Mvc.IView"
        },
        "viewBag": {
          "type": "object",
          "readOnly": true
        },
        "viewData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "viewEngineCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Web.Mvc.IViewEngine"
          }
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.IView": {
      "type": "object",
      "properties": {}
    },
    "System.Web.Mvc.IViewEngine": {
      "type": "object",
      "properties": {}
    },
    "M2.Entity.IdName": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.AffiliateEmployeeEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.AffiliateEmployeeEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "employeeNum": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "terminationDate": {
          "format": "date-time",
          "type": "string"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "drugTestDate": {
          "format": "date-time",
          "type": "string"
        },
        "bgCheckDate": {
          "format": "date-time",
          "type": "string"
        },
        "oshaLevel": {
          "type": "string"
        },
        "isPPET": {
          "type": "boolean"
        },
        "confinedTrain": {
          "type": "boolean"
        },
        "confinedTrainDate": {
          "format": "date-time",
          "type": "string"
        },
        "isFallProtection": {
          "type": "boolean"
        },
        "fallProtectionDate": {
          "format": "date-time",
          "type": "string"
        },
        "isLOTO": {
          "type": "boolean"
        },
        "lotoDate": {
          "format": "date-time",
          "type": "string"
        },
        "isFireTrain": {
          "type": "boolean"
        },
        "fireTrainDate": {
          "format": "date-time",
          "type": "string"
        },
        "met": {
          "type": "string"
        },
        "securityID": {
          "type": "string"
        },
        "serviceRegion": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "newPasswordConfirm": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "accountUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "isActive": {
          "type": "boolean"
        },
        "isCanServiceProCare": {
          "type": "boolean"
        },
        "maxCapacity": {
          "type": "string"
        },
        "maxLocations": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "isInHouse": {
          "type": "boolean"
        },
        "isAffiliateOrTechnician": {
          "type": "boolean"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        },
        "roleName": {
          "type": "string"
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "categoryThreeFilename": {
          "type": "string"
        },
        "categoryThreeFilePath": {
          "type": "string"
        },
        "isCertified": {
          "type": "boolean"
        },
        "isHaveCategoryThree": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.EmployeeSkillEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "skillLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategory": {
          "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
        },
        "skillLevel": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TechnicianLaborRateEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "laborRate": {
          "format": "double",
          "type": "number"
        },
        "overtimeLaborRate": {
          "format": "double",
          "type": "number"
        },
        "burden": {
          "format": "double",
          "type": "number"
        },
        "trueLaborRate": {
          "format": "double",
          "type": "number"
        },
        "trueOvertimeRate": {
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.HttpStatusCodeResult": {
      "type": "object",
      "properties": {
        "statusCode": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "statusDescription": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "M2.Entity.EmployeeCertificateEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "certificateId": {
          "format": "int32",
          "type": "integer"
        },
        "certificateStatus": {
          "format": "int32",
          "type": "integer"
        },
        "certificateName": {
          "type": "string"
        },
        "certificate": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.EmployeeTrainingRequestEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.EmployeeTrainingRequestEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.EmployeeTrainingRequestEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "trainingRequest": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.EmployeeServiceAreaEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "area": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "workDay": {
          "type": "string"
        },
        "selectedWorkDays": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.Pager": {
      "type": "object",
      "properties": {
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.EventLogEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.EventLogEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.EventLogEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            78,
            79,
            80,
            81
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "log": {
          "type": "string"
        },
        "isAffiliateVisible": {
          "type": "boolean"
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "preAffiliateId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "eventLogType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            17,
            18,
            19,
            20
          ],
          "type": "integer"
        },
        "eventSource": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "emailId": {
          "type": "string"
        },
        "undoGuid": {
          "type": "string"
        },
        "autoScheduleTechnicianRank": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.EventLogMaskConfigResponse": {
      "type": "object",
      "properties": {
        "eventLogTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyWords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Moon.WebService.Client.Controllers.ExportRecordQuery": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "System.Web.Mvc.ContentResult": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "contentEncoding": {
          "$ref": "#/definitions/System.Text.Encoding"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.PartialViewResult": {
      "type": "object",
      "properties": {
        "model": {
          "type": "object",
          "readOnly": true
        },
        "tempData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "view": {
          "$ref": "#/definitions/System.Web.Mvc.IView"
        },
        "viewBag": {
          "type": "object",
          "readOnly": true
        },
        "viewData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "viewEngineCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Web.Mvc.IViewEngine"
          }
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.FilterEntity": {
      "type": "object",
      "properties": {
        "filterName": {
          "type": "string"
        },
        "filterOption": {
          "type": "string"
        },
        "filterType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            34,
            35,
            36,
            37,
            38,
            39
          ],
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.GPCASurveyApiController.ClientSurveyByGPCAQueryModel": {
      "type": "object",
      "properties": {
        "beginDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationID": {
          "format": "int32",
          "type": "integer"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.GPCASurveyApiController.GPCAReturnModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.GPCASurveyApiController.GPCAReturnModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.GPCASurveyApiController.GPCAReturnModel": {
      "type": "object",
      "properties": {
        "projectLocationID": {
          "format": "int32",
          "type": "integer"
        },
        "completionDate": {
          "format": "date-time",
          "type": "string"
        },
        "surveyorName": {
          "type": "string"
        },
        "answerData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.GPCASurveyApiController.AnswerModel"
          }
        },
        "surveyorPhoto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.GPCASurveyApiController.ClientSurveyPhotoByGPCAModel"
          }
        }
      }
    },
    "Moon.WebService.Client.GPCASurveyApiController.AnswerModel": {
      "type": "object",
      "properties": {
        "pojectAnswerID": {
          "format": "int32",
          "type": "integer"
        },
        "projectQuestionStr": {
          "type": "string"
        },
        "pojectAnswerOptionStr": {
          "type": "string"
        },
        "pojectAnswerComment": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.GPCASurveyApiController.ClientSurveyPhotoByGPCAModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectAnswerId": {
          "format": "int32",
          "type": "integer"
        },
        "contentType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.HomeAdvisor.BillingAddressModel": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.HomeAdvisor.CreditCardBindRecordEntity": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "systemType": {
          "format": "int32",
          "type": "integer"
        },
        "systemVersion": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "emailSubject": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "operationTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.HomeAdvisor.Price.CallSetSimPackageModel": {
      "type": "object",
      "properties": {
        "callId": {
          "type": "string"
        },
        "mainDriveSqFt": {
          "format": "double",
          "type": "number"
        },
        "mainDrivePrice": {
          "format": "double",
          "type": "number"
        },
        "sidewalkPrice": {
          "format": "double",
          "type": "number"
        },
        "pathPrice": {
          "format": "double",
          "type": "number"
        },
        "additionalDriveSqFt": {
          "format": "double",
          "type": "number"
        },
        "additionalDrivePrice": {
          "format": "double",
          "type": "number"
        },
        "sidewalkSqFt": {
          "format": "double",
          "type": "number"
        },
        "servicePackageId": {
          "format": "double",
          "type": "number"
        },
        "serviceProgramId": {
          "type": "string"
        },
        "serviceProgramName": {
          "type": "string"
        },
        "seasonPriceTotal": {
          "format": "double",
          "type": "number"
        },
        "affiliateCost": {
          "format": "double",
          "type": "number"
        },
        "tax": {
          "format": "double",
          "type": "number"
        },
        "quantity": {
          "format": "int32",
          "type": "integer"
        },
        "generated": {
          "format": "int32",
          "type": "integer"
        },
        "paidQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "paidTotalNum": {
          "format": "int32",
          "type": "integer"
        },
        "lastPaidDate": {
          "format": "date-time",
          "type": "string"
        },
        "margin": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.Web.Client.Areas.HomeAdvisor.Models.SimPcakagePayment]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Areas.HomeAdvisor.Models.SimPcakagePayment"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Areas.HomeAdvisor.Models.SimPcakagePayment": {
      "type": "object",
      "properties": {
        "dateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "perMonthPrice": {
          "format": "double",
          "type": "number"
        },
        "perMonthPriceTax": {
          "format": "double",
          "type": "number"
        },
        "total": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.Web.Client.Areas.HomeAdvisor.Models.PayInfoViewModel": {
      "type": "object",
      "properties": {
        "callId": {
          "type": "string"
        },
        "paymentNonce": {
          "type": "string"
        },
        "price": {
          "format": "double",
          "type": "number"
        },
        "billingAddress": {
          "$ref": "#/definitions/M2.Entity.Module.HomeAdvisor.BillingAddressModel"
        },
        "isSimPackage": {
          "type": "boolean"
        },
        "currentDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.HouseOwnerQueryModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "houseOwner": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isOptIn": {
          "type": "boolean"
        },
        "district": {
          "type": "string"
        },
        "districtForHo": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "houseOwners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "districtsRegexp": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.HouseOwner.AutoCompleteClientDistrictQueryViewModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.HouseOwner.HOAccountCreateViewModel": {
      "required": [
        "userName",
        "email",
        "lockoutEnabled",
        "isReceiveEmail",
        "isReceiveSMSAlert",
        "isAcceptStandardNTE"
      ],
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "phone": {
          "pattern": "^\\d{3}-\\d{3}-\\d{4}$|^\\((\\d{3}\\))\\s\\d{3}-\\d{4}$",
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "approveLimit": {
          "format": "double",
          "type": "number"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerInformationViewModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "isHouseOwner": {
          "type": "boolean"
        },
        "homeOwnerName": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cellPhone": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserPatchModel": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "emailConfirmed": {
          "type": "boolean"
        },
        "passwordHash": {
          "type": "string"
        },
        "securityStamp": {
          "type": "string"
        },
        "phoneConfirmed": {
          "type": "boolean"
        },
        "twoFactorEnabled": {
          "type": "boolean"
        },
        "allowLoginStartDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "allowLoginEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "accessFailedCount": {
          "format": "int32",
          "type": "integer"
        },
        "lockoutType": {
          "format": "int32",
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "approveLimit": {
          "format": "double",
          "type": "number"
        },
        "phoneExt": {
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "isChangePWD": {
          "type": "boolean"
        },
        "locationId": {
          "type": "string"
        },
        "locationResidentialId": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "roleTypeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "externalUserId": {
          "type": "string"
        },
        "sourceId": {
          "format": "int32",
          "type": "integer"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "isAllowMobile": {
          "type": "boolean"
        },
        "isAllowWeb": {
          "type": "boolean"
        },
        "isAgreement": {
          "type": "boolean"
        },
        "userTitleId": {
          "format": "int32",
          "type": "integer"
        },
        "isReceiveEmail": {
          "type": "boolean"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        },
        "houseOwnerId": {
          "type": "string"
        },
        "coveredUserId": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "isAddSMSAlertLog": {
          "type": "boolean"
        },
        "isTestAccount": {
          "type": "boolean"
        },
        "vertificationCode": {
          "type": "string"
        },
        "sendVertificationCodeTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.UserDefinedTemplateSearchByTitleQueryViewModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UserDefinedTemplateCreateViewModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.UserDefinedTemplateQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UserDefinedTemplateUpdateViewModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserDefinedTemplateCheckTitleViewModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Boolean]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.APIs.HrDataApiQueryModel": {
      "required": [
        "token"
      ],
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SingleSignOnEntity"
          }
        },
        "requestorFullname": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SingleSignOnEntity": {
      "type": "object",
      "properties": {
        "sId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "building": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "costCenter": {
          "type": "string"
        },
        "legalEntity": {
          "type": "string"
        },
        "saplob": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.InboundApiController.ApiFileModel": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string"
        },
        "content_type": {
          "type": "string"
        },
        "binary_data": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "child": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.ProposalApiQueryModel": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "child": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "functional_status": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "proposal_id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.InboundApiController.UpdateWOPriorityQueryModel": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "string"
        },
        "child": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "work_notes": {
          "type": "string"
        },
        "function_status": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.APIs.InboundApiController.WOCreationApiQueryModel": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "caller": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "asset_tag": {
          "type": "string"
        },
        "asset_serial_number": {
          "type": "string"
        },
        "asset_model_number": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "asset_qr_code": {
          "type": "string"
        },
        "warranty_expiration": {
          "format": "date-time",
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        },
        "nte": {
          "type": "string"
        },
        "functional_status": {
          "type": "string"
        },
        "short_description": {
          "type": "string"
        },
        "work_order_type": {
          "type": "string"
        },
        "insurance_loss_number": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "child": {
          "type": "string"
        },
        "date_reported": {
          "format": "date-time",
          "type": "string"
        },
        "sys_id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InspectionProjectModel": {
      "type": "object",
      "properties": {
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "inspectionTime": {
          "format": "date-time",
          "type": "string"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "inspectionEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isUtilitiesOn": {
          "type": "boolean"
        },
        "utilities": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ownerContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        },
        "hourseKeeperContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "specialInstructions": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectContactInfoEntity": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "contactTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TurnRehabCapitalProjectModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "projectTypeId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "assessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "assessmentEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "assigneeId": {
          "type": "string"
        },
        "otherDescription": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "clientTitle": {
          "type": "string"
        },
        "clientPhone": {
          "type": "string"
        },
        "clientEmail": {
          "type": "string"
        },
        "clientReferNumber": {
          "type": "string"
        },
        "earliestAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "earliestProjectStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "projectedCompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "propertyReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "isOccupied": {
          "type": "boolean"
        },
        "occupiedName": {
          "type": "string"
        },
        "occupiedTitle": {
          "type": "string"
        },
        "occupiedPhone": {
          "type": "string"
        },
        "occupiedEmail": {
          "type": "string"
        },
        "isSMSPerformingAssessment": {
          "type": "boolean"
        },
        "locationId": {
          "type": "string"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "isInspection": {
          "type": "boolean"
        },
        "trpTypeId": {
          "type": "string"
        },
        "utilities": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ownerContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        },
        "houseKeeperContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        }
      }
    },
    "Moon.Web.Controller.InspectionExportQueryModel": {
      "type": "object",
      "properties": {
        "inspectionId": {
          "type": "string"
        },
        "maintenanceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsReviewStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "curViewTypeStatus": {
          "format": "int32",
          "type": "integer"
        },
        "projectInspectionScopeId": {
          "format": "int32",
          "type": "integer"
        },
        "scopeName": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.QueryCondition": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "srNum": {
          "type": "string"
        },
        "createStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "createEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "messageChannelId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "orQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.MessageQueryItem"
          }
        },
        "isMergeMessageChannel": {
          "type": "boolean"
        },
        "messageRoles": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "orQuerySql": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.MessageQueryItem": {
      "type": "object",
      "properties": {
        "senderType": {
          "type": "string"
        },
        "senderTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderUserId": {
          "type": "string"
        },
        "senderUserRefId": {
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientUserRefId": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "refId": {
          "type": "string"
        },
        "refIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.InteractionLogResult": {
      "type": "object",
      "properties": {
        "logType": {
          "format": "int32",
          "type": "integer"
        },
        "srId": {
          "type": "string"
        },
        "srNum": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "senderTypeId": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.UserResult"
        },
        "woId": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.RecipientResult"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.NoteResult"
          }
        },
        "parentId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.UserResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roleType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "imagePath": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.RecipientResult": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        },
        "recipientUserId": {
          "type": "string"
        },
        "readByUserId": {
          "type": "string"
        },
        "recipientUser": {
          "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.UserResult"
        },
        "isRead": {
          "type": "boolean"
        },
        "readTime": {
          "format": "date-time",
          "type": "string"
        },
        "readBy": {
          "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.UserResult"
        },
        "messageChannelId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "messageChannelIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3
            ],
            "type": "integer"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.AttachmentResult"
          }
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.NoteResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.NoteAttachmentResult"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "createUser": {
          "$ref": "#/definitions/Moon.WebService.Client.InteractionLogApiController.UserResult"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.AttachmentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "attachmentType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29
          ],
          "type": "integer"
        },
        "extRefId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.InteractionLogApiController.NoteAttachmentResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "noteId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        }
      }
    },
    "M2.Entity.BatchInvoiceQueryModel": {
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "batchInvoiceNum": {
          "type": "string"
        },
        "batchInvoiceNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "checkNum": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "chosenBatchIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isClientVisible": {
          "type": "boolean"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "serviceRequestCategory": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.BatchInvoiceEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.BatchInvoiceEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.BatchInvoiceEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceNum": {
          "type": "string"
        },
        "searchStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "businessUnit": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "department": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "avalaraBatchId": {
          "format": "int64",
          "type": "integer"
        },
        "avalaraBatchStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isNeedSaveToAvalara": {
          "type": "boolean"
        },
        "earlyPaymentRequestUserId": {
          "format": "int32",
          "type": "integer"
        },
        "earlyPaymentRequestUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "earlyPaymentRequestTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ServiceTypeBatchInvoiceStatModel": {
      "type": "object",
      "properties": {
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeGLName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "subTotalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFee": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFee": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalFeeTaxes": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ServiceTypeInvoiceStatQueryModel": {
      "type": "object",
      "properties": {
        "workOrderType": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "beginServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "endServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalYear": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCodeId": {
          "type": "string"
        },
        "naturalYear": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalMonthId": {
          "type": "string"
        },
        "isOpenWOIncluded": {
          "type": "string"
        },
        "isExpenseByLocation": {
          "type": "boolean"
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ServiceTypeInvoiceStatModel": {
      "type": "object",
      "properties": {
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeGLName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFee": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFee": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalFeeTaxes": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ServiceTypeInvoiceLocationBudgetQueryModel": {
      "type": "object",
      "properties": {
        "workOrderType": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "beginServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "endServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalYear": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCodeId": {
          "type": "string"
        },
        "naturalYear": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonth": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalMonthId": {
          "type": "string"
        },
        "smsNumbersExclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ServiceTypeInvoiceLocationBudgetViewModel": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ServiceTypeInvoiceLocationBudgetModel"
          }
        },
        "expense": {
          "format": "double",
          "type": "number"
        },
        "totalExpense": {
          "format": "double",
          "type": "number"
        },
        "opExBudget": {
          "format": "double",
          "type": "number"
        },
        "capExBudget": {
          "format": "double",
          "type": "number"
        },
        "remaining": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ServiceTypeInvoiceLocationBudgetModel": {
      "type": "object",
      "properties": {
        "isReactive": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeGLName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFee": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFee": {
          "format": "double",
          "type": "number"
        },
        "totalPlatformFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalServiceFeeTax": {
          "format": "double",
          "type": "number"
        },
        "totalFeeTaxes": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ClientFiscalYearEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "year": {
          "format": "int32",
          "type": "integer"
        },
        "endMonth": {
          "format": "date-time",
          "type": "string"
        },
        "startMonth": {
          "format": "date-time",
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceQueryModel": {
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "batchInvoiceNum": {
          "type": "string"
        },
        "invoiceNum": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "checkNum": {
          "type": "string"
        },
        "issueDate": {
          "format": "date-time",
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "subInvoiceNum": {
          "type": "string"
        },
        "subInvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "approveUserId": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "refIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateId": {
          "type": "string"
        },
        "isProjectInvoice": {
          "type": "boolean"
        },
        "isCanBatch": {
          "type": "boolean"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "serviceRequestCategory": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.InvoiceEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.InvoiceEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.InvoiceEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "invoiceNum": {
          "type": "string"
        },
        "callerName": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "isPermitRequired": {
          "format": "int32",
          "type": "integer"
        },
        "checkNum": {
          "type": "string"
        },
        "issueDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "subAffiliateCost": {
          "format": "double",
          "type": "number"
        },
        "subInvoiceNum": {
          "type": "string"
        },
        "subInvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "taxReturn": {
          "format": "double",
          "type": "number"
        },
        "approveUserId": {
          "type": "string"
        },
        "approveTime": {
          "format": "date-time",
          "type": "string"
        },
        "approveNotes": {
          "type": "string"
        },
        "preApproveUserId": {
          "type": "string"
        },
        "preApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "preApproveNotes": {
          "type": "string"
        },
        "clientApproveUserId": {
          "type": "string"
        },
        "clientApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientApproveNotes": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "submitUserId": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "reviewUserId": {
          "type": "string"
        },
        "reviewDate": {
          "format": "date-time",
          "type": "string"
        },
        "isNoServiceFee": {
          "type": "boolean"
        },
        "serviceFeeRate": {
          "format": "double",
          "type": "number"
        },
        "platformFeeRate": {
          "format": "double",
          "type": "number"
        },
        "isFixedServiceFee": {
          "type": "boolean"
        },
        "isFixedPlatformFee": {
          "type": "boolean"
        },
        "isCanBatch": {
          "type": "boolean"
        },
        "glCode": {
          "type": "string"
        },
        "subledger": {
          "type": "string"
        },
        "buildingId": {
          "type": "string"
        },
        "glDescription": {
          "type": "string"
        },
        "glCodeId": {
          "type": "string"
        },
        "isGLCodeConfiged": {
          "type": "boolean"
        },
        "isCheckReleaseAuthorization": {
          "type": "boolean"
        },
        "checkReleaseAuthorizationReasonEnumIds": {
          "type": "string"
        },
        "isTaxRateUpdate": {
          "type": "boolean"
        },
        "taxRateUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "isExceedCustomerNTE": {
          "type": "boolean"
        },
        "checkReleaseAuthorizationDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "submitUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "approveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "preApproveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "clientApproveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "batchInvoice": {
          "$ref": "#/definitions/M2.Entity.BatchInvoiceEntity"
        },
        "stat": {
          "$ref": "#/definitions/M2.Entity.InvoiceStatModel"
        },
        "wo": {
          "$ref": "#/definitions/M2.Entity.WoBaseEntity"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "nteApproveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "nteApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "nteApproveNotes": {
          "type": "string"
        },
        "ntePreApproveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "ntePreApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "ntePreApproveNotes": {
          "type": "string"
        },
        "templateType": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeName": {
          "type": "string"
        },
        "resolutionCodeDescription": {
          "type": "string"
        },
        "resolutionCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "templateTypeName": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceStatModel": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string"
        },
        "totalQty": {
          "format": "int32",
          "type": "integer"
        },
        "totalCost": {
          "format": "double",
          "type": "number"
        },
        "totalItemsCost": {
          "format": "double",
          "type": "number"
        },
        "totalPrice": {
          "format": "double",
          "type": "number"
        },
        "invoiceTotalPrice": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "invoiceTotalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "invoiceTotalTax": {
          "format": "double",
          "type": "number"
        },
        "serviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "margin": {
          "format": "double",
          "type": "number"
        },
        "platformFeeTotal": {
          "format": "double",
          "type": "number"
        },
        "serviceFeeTotal": {
          "format": "double",
          "type": "number"
        },
        "feeTaxesTotal": {
          "format": "double",
          "type": "number"
        },
        "isReactive": {
          "type": "boolean"
        },
        "managedOrOwned": {
          "type": "string"
        },
        "laborTotal": {
          "format": "double",
          "type": "number"
        },
        "materialsTotal": {
          "format": "double",
          "type": "number"
        },
        "travelChargesTotal": {
          "format": "double",
          "type": "number"
        },
        "freightChargesTotal": {
          "format": "double",
          "type": "number"
        },
        "otherTotal": {
          "format": "double",
          "type": "number"
        },
        "totalAmountNotNeededFee": {
          "format": "double",
          "type": "number"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ClientBatchInvoiceDetailQueryModel": {
      "type": "object",
      "properties": {
        "isReative": {
          "type": "boolean"
        },
        "isResident": {
          "type": "boolean"
        },
        "showServiceFee": {
          "type": "boolean"
        },
        "invoiceNum": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "invoiceQueryModel": {
          "$ref": "#/definitions/M2.Entity.InvoiceQueryModel"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.WoBaseEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.WoBaseEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ServiceTypeBatchInvoiceStatQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "serviceTypeId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.InvoiceItemQueryModel": {
      "type": "object",
      "properties": {
        "invoiceId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "chargeCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "isCapex": {
          "type": "boolean"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "unitCost": {
          "format": "double",
          "type": "number"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.PhotoConfirmModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.PhotoConfirmModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.PhotoConfirmModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            50,
            100
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "woUrl": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "notes": {
          "type": "string"
        },
        "photoLabelId": {
          "type": "string"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "avLength": {
          "format": "double",
          "type": "number"
        },
        "isShare": {
          "type": "boolean"
        },
        "locationEntity": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "photoCount": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "photoLabel": {
          "$ref": "#/definitions/M2.Entity.ClientPhotoLabelEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        }
      }
    },
    "M2.Entity.LinkWoModel": {
      "type": "object",
      "properties": {
        "linkId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "request": {
          "type": "string"
        },
        "woUrl": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "woType": {
          "type": "string"
        },
        "woStatus": {
          "type": "string"
        },
        "customerNTE": {
          "format": "double",
          "type": "number"
        },
        "customerTotalInvoice": {
          "type": "string"
        },
        "affiliate": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "linkType": {
          "type": "string"
        },
        "linkComment": {
          "type": "string"
        },
        "customerWoStatus": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LinkEntity": {
      "type": "object",
      "properties": {
        "sourceId": {
          "type": "string"
        },
        "sourceType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "targetId": {
          "type": "string"
        },
        "targetType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "linkTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "linkType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "comment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "is24HR": {
          "type": "boolean"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "addressFuzzy": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "smsNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "photoLabelId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "isAssignedAffiliate": {
          "type": "boolean"
        },
        "operationManagerName": {
          "type": "string"
        },
        "residentName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "locationStatus": {
          "type": "string"
        },
        "relocationDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "locationComplex": {
          "type": "string"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isGroupBy": {
          "type": "boolean"
        },
        "locationStatuses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "qrCode": {
          "type": "string"
        },
        "legacyLocationNumber": {
          "type": "string"
        },
        "isNotPlanItem": {
          "type": "boolean"
        },
        "isAutoRFI": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.LocationEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.LocationResidentialQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "residentialNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "qrCode": {
          "type": "string"
        },
        "locationComplex": {
          "type": "string"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "additionalInformation": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationTypeQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationTypeEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationDataModel": {
      "type": "object",
      "properties": {
        "getLocationTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationTypeEntity"
          }
        },
        "regionsDat": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districtsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.LocationDetailModel": {
      "type": "object",
      "properties": {
        "locationEntity": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "landlordEntity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationLandlordEntity"
          }
        },
        "landlordComments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageEntity"
          }
        },
        "locationAttributeEntity": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "rvp": {
          "type": "string"
        },
        "vp": {
          "type": "string"
        },
        "dm": {
          "type": "string"
        },
        "leaseRemaining": {
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isShowLeaseRemaining": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationLandlordEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "landlordName": {
          "type": "string"
        },
        "landlordCode": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zippostal": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "houseOwnerId": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "locationEntity": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationAttributeEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "unitStatus": {
          "type": "string"
        },
        "warranty": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "ruralUrbanId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "msa": {
          "type": "string"
        },
        "unitCode": {
          "type": "string"
        },
        "securitization": {
          "type": "string"
        },
        "isTrusteeOccupied": {
          "type": "boolean"
        },
        "acquisitionEntity": {
          "type": "string"
        },
        "lotSize": {
          "type": "string"
        },
        "yearBuilt": {
          "format": "date-time",
          "type": "string"
        },
        "bathRooms": {
          "format": "double",
          "type": "number"
        },
        "ttsqft": {
          "format": "double",
          "type": "number"
        },
        "pool": {
          "type": "string"
        },
        "gateCode": {
          "type": "string"
        },
        "acquiredDate": {
          "format": "date-time",
          "type": "string"
        },
        "isLandscapingNeeded": {
          "type": "boolean"
        },
        "specialCircumstances": {
          "type": "string"
        },
        "bedRooms": {
          "format": "int32",
          "type": "integer"
        },
        "propertyHmy": {
          "format": "int32",
          "type": "integer"
        },
        "firstRentRevenueDate": {
          "format": "date-time",
          "type": "string"
        },
        "propertyCode": {
          "type": "string"
        },
        "propertyStatus": {
          "type": "string"
        },
        "landscapingServiceType": {
          "type": "string"
        },
        "isRecurringLandscapingNeeded": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "inventoryDate": {
          "format": "date-time",
          "type": "string"
        },
        "ruralUrban": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "isRepeatOffender": {
          "type": "boolean"
        },
        "county": {
          "type": "string"
        },
        "ownership": {
          "type": "string"
        },
        "dispositionType": {
          "type": "string"
        },
        "poolMaint": {
          "type": "string"
        },
        "sidewalkSize": {
          "type": "string"
        },
        "applicableServiceArea": {
          "type": "string"
        },
        "isHasPath": {
          "format": "int32",
          "type": "integer"
        },
        "pathCount": {
          "format": "int32",
          "type": "integer"
        },
        "surveyComplete": {
          "type": "string"
        },
        "isTurf": {
          "type": "boolean"
        },
        "isIrrigation": {
          "type": "boolean"
        },
        "landscapingSize": {
          "format": "float",
          "type": "number"
        },
        "floorType": {
          "type": "string"
        },
        "vctsqtf": {
          "type": "string"
        },
        "carpetsqft": {
          "type": "string"
        },
        "concretesqft": {
          "type": "string"
        },
        "frequency": {
          "type": "string"
        },
        "restrooms": {
          "type": "string"
        },
        "truckDay": {
          "type": "string"
        },
        "pm": {
          "type": "string"
        },
        "mainDriveSqFt": {
          "format": "double",
          "type": "number"
        },
        "additionalDriveSqFt": {
          "format": "double",
          "type": "number"
        },
        "bedArea": {
          "format": "double",
          "type": "number"
        },
        "locationPhoto": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "buildingId": {
          "type": "string"
        },
        "retentionPondSize": {
          "format": "double",
          "type": "number"
        },
        "mulchType": {
          "type": "string"
        },
        "nonPalmTrees": {
          "format": "double",
          "type": "number"
        },
        "palmTrees": {
          "format": "double",
          "type": "number"
        },
        "parkingLotSize": {
          "format": "double",
          "type": "number"
        },
        "isSmartHome": {
          "type": "boolean"
        },
        "isHOA": {
          "type": "boolean"
        },
        "insideMapWalkthroughURL": {
          "type": "string"
        },
        "insideMap3DModelURL": {
          "type": "string"
        },
        "dronebaseURL": {
          "type": "string"
        },
        "lvtsqft": {
          "format": "double",
          "type": "number"
        },
        "community": {
          "type": "string"
        },
        "maintenanceHoldEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "remodelDate": {
          "format": "date-time",
          "type": "string"
        },
        "riskClass": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "string"
        },
        "primaryResidentStatus": {
          "type": "string"
        },
        "newBuildWarrantyEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveinReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "lockboxCode": {
          "type": "string"
        },
        "accessCode": {
          "type": "string"
        },
        "assignedEstimator": {
          "type": "string"
        },
        "assignedSuperintendent": {
          "type": "string"
        },
        "brokerPartner": {
          "type": "string"
        },
        "sellingContractEffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "sellingClosingDate": {
          "format": "date-time",
          "type": "string"
        },
        "activedbyNDCPJob": {
          "type": "boolean"
        },
        "isAirFilterDelivered": {
          "type": "boolean"
        },
        "portfolioDirector": {
          "type": "string"
        },
        "isSmartHomeInstalled": {
          "type": "boolean"
        },
        "isSHVideoDoorbellInstalled": {
          "type": "boolean"
        },
        "sowTrigger": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationServiceTypeResponsibleQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "maintenanceId": {
          "format": "int32",
          "type": "integer"
        },
        "maintenancePartyId": {
          "format": "int32",
          "type": "integer"
        },
        "repairPartyId": {
          "format": "int32",
          "type": "integer"
        },
        "replacePartyId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.LocationServiceTypeResponsibleEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationServiceTypeResponsibleEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.LocationServiceTypeResponsibleEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "maintenanceId": {
          "format": "int32",
          "type": "integer"
        },
        "maintenancePartyId": {
          "format": "int32",
          "type": "integer"
        },
        "repairPartyId": {
          "format": "int32",
          "type": "integer"
        },
        "replacePartyId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "notice": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "maintenance": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "maintenanceParty": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "repairParty": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "replaceParty": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.CommentEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "alertStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationLandlordQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "landlordName": {
          "type": "string"
        },
        "landlordCode": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zippostal": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "houseOwnerId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.LocationLandlordEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationLandlordEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.LocationLawInsuranceEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "complianceWithLaws": {
          "type": "string"
        },
        "propertyInsurance": {
          "type": "string"
        },
        "noticeRequirements": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Location.IberiaLocationAttrViewModel": {
      "type": "object",
      "properties": {
        "dm": {
          "description": "Gets or sets the dm.",
          "type": "string"
        },
        "facilityName": {
          "description": "Gets or sets the name of the facility.",
          "type": "string"
        },
        "dmEmail": {
          "description": "Gets or sets the dm email.",
          "type": "string"
        },
        "dmPhone": {
          "description": "Gets or sets the dm phone.",
          "type": "string"
        },
        "ownership": {
          "description": "Gets or sets the ownership.",
          "type": "string"
        },
        "landscapeResponsible": {
          "description": "Gets or sets the landscape responsible.",
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiSurveyProjectHistoryListModel": {
      "type": "object",
      "properties": {
        "historyYear": {
          "type": "string"
        },
        "completeYear": {
          "type": "string",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiSurveyProjectHistoryModel"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiSurveyProjectHistoryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "surveyorName": {
          "type": "string"
        },
        "historyTime": {
          "format": "date-time",
          "type": "string"
        },
        "historyYear": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "completeYear": {
          "type": "string",
          "readOnly": true
        },
        "photosList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
          }
        },
        "photoGalleryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryEntity"
          }
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
          },
          "readOnly": true
        },
        "morePhotosCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "hasMorePhotos": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.SurveyPhotosEntity": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "additionalServiceId": {
          "type": "string"
        },
        "photoName": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "section": {
          "format": "int32",
          "type": "integer"
        },
        "filePath": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SurveyPhotoGalleryEntity": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "photoName": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.LastTwoYearsSpentViewModel": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Gets or sets the data.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "yearHasValue": {
          "description": "Gets or sets a value indicating whether [year has value].",
          "type": "boolean"
        },
        "oldYearHasValue": {
          "description": "Gets or sets a value indicating whether [old year has value].",
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoHistoryEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoHistoryEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoHistoryEntity": {
      "type": "object",
      "properties": {
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "invoicetotal": {
          "format": "double",
          "type": "number"
        },
        "statusName": {
          "type": "string"
        },
        "serviceCodeNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "additionalDetails": {
          "type": "string"
        },
        "assetSerialNum": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "unitNum": {
          "type": "string"
        },
        "assetUrl": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "timeToComplete": {
          "format": "int32",
          "type": "integer"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "isHaveLinkedWo": {
          "type": "boolean"
        },
        "departmentName": {
          "type": "string"
        },
        "isTask": {
          "type": "boolean"
        },
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "glCode": {
          "type": "string"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ReactiveWoHistoryEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoHistoryEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.WeatherSummary": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "maxTemp": {
          "format": "double",
          "type": "number"
        },
        "minTemp": {
          "format": "double",
          "type": "number"
        },
        "snowFall": {
          "format": "double",
          "type": "number"
        },
        "precipitation": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "currentTemp": {
          "format": "double",
          "type": "number"
        },
        "currentIcon": {
          "type": "string"
        },
        "currentApparentTemp": {
          "format": "double",
          "type": "number"
        },
        "windSpeed": {
          "format": "double",
          "type": "number"
        },
        "windBearing": {
          "format": "double",
          "type": "number"
        },
        "cloudCover": {
          "format": "double",
          "type": "number"
        },
        "apparentTemperatureMax": {
          "format": "double",
          "type": "number"
        },
        "apparentTemperatureMin": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.Module.Location.LocationCreateViewModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "isSuccess": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.StaffsCardModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Location.Commercial.CommercialLocationSummary": {
      "type": "object",
      "properties": {
        "locationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "mainPhone": {
          "type": "string"
        },
        "temperature": {
          "format": "double",
          "type": "number"
        },
        "feelsLike": {
          "format": "double",
          "type": "number"
        },
        "currentIcon": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "isActiveLocation": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.CoverForYouViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "coverStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "coverEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "userFullName": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "coverUserId": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.LocationApiRepo.LocationTypeQueryModel": {
      "type": "object",
      "properties": {
        "locationTypeId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.LocationApiController.GetAllListDatasModel": {
      "type": "object",
      "properties": {
        "getLocationTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.LocationApiRepo.LocationTypeViewModel"
          }
        },
        "regionsDat": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districtsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Moon.WebService.Client.LocationApiRepo.LocationTypeViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.LocationApiRepo.LocationListQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "qrCode": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationStatus": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.LocationApiRepo.LocationListViewModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.APIs.LocationQueryApiModel": {
      "required": [
        "token"
      ],
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationAPIPatchModel"
          }
        },
        "requestorFullname": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/M2.Entity.LocationQueryModel"
        },
        "token": {
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.APIs.LocationAPIPatchModel": {
      "type": "object",
      "properties": {
        "locationNumber": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationServiceProvider": {
          "type": "string"
        },
        "isHOA": {
          "type": "boolean"
        },
        "currentMIRVendor": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "bathRooms": {
          "format": "double",
          "type": "number"
        },
        "bedRooms": {
          "format": "int32",
          "type": "integer"
        },
        "lotSize": {
          "type": "string"
        },
        "ttsqft": {
          "format": "double",
          "type": "number"
        },
        "gateCode": {
          "type": "string"
        },
        "isTrusteeOccupied": {
          "type": "boolean"
        },
        "isLandscapingNeeded": {
          "type": "boolean"
        },
        "pool": {
          "type": "string"
        },
        "isRecurringLandscapingNeeded": {
          "type": "boolean"
        },
        "isSmartHome": {
          "type": "boolean"
        },
        "unitCode": {
          "type": "string"
        },
        "yearBuilt": {
          "format": "date-time",
          "type": "string"
        },
        "moveinReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "lockboxCode": {
          "type": "string"
        },
        "accessCode": {
          "type": "string"
        },
        "assignedEstimator": {
          "type": "string"
        },
        "assignedSuperintendent": {
          "type": "string"
        },
        "brokerPartner": {
          "type": "string"
        },
        "sellingContractEffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "sellingClosingDate": {
          "format": "date-time",
          "type": "string"
        },
        "resident": {
          "$ref": "#/definitions/Moon.Web.Client.Models.APIs.LocationAPIResidentViewModel"
        },
        "propertyStatus": {
          "type": "string"
        },
        "propertyType": {
          "type": "string"
        },
        "locationStoreHoursInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationStoreHoursInfoEntity"
          }
        }
      }
    },
    "Moon.Web.Client.Models.APIs.LocationAPIResidentViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "residentialNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationStoreHoursInfoEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "locationId": {
          "format": "int64",
          "type": "integer"
        },
        "dayofWeek": {
          "format": "int32",
          "type": "integer"
        },
        "openTime": {
          "type": "string"
        },
        "closeTime": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.LocationDetailApiController.ServiceRequestQuery": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "srStatusId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "includedWoId": {
          "type": "string"
        },
        "isEdit": {
          "type": "boolean"
        },
        "serviceRequestIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woBelongType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isProCare": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.LocationDetailApiController.ServiceRequestViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.LocationDetailApiController.ServiceRequestViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.LocationDetailApiController.ServiceRequestViewModel": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "serviceRequestNumber": {
          "type": "string"
        },
        "serviceRequestName": {
          "type": "string"
        },
        "proCareStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isProcare": {
          "type": "boolean"
        },
        "isFlagged": {
          "type": "boolean"
        },
        "proCareId": {
          "type": "string"
        },
        "woList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.LocationDetailApiController.WoInfoResult"
          }
        },
        "invoiceCostTotal": {
          "type": "string"
        },
        "isLockedServiceRequest": {
          "type": "boolean"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestCategoryName": {
          "type": "string"
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.LocationDetailApiController.WoInfoResult": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "reasonCode": {
          "type": "string"
        },
        "serviceRequestWOReactiveId": {
          "type": "string"
        },
        "woType": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "problemCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "timeToComplete": {
          "format": "int32",
          "type": "integer"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "isRootCause": {
          "type": "boolean"
        },
        "statusName": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "woFlags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isScheduled": {
          "type": "boolean"
        },
        "invoicetotal": {
          "format": "double",
          "type": "number"
        },
        "invoiceText": {
          "type": "string"
        },
        "woCreateTime": {
          "format": "date-time",
          "type": "string"
        },
        "relatedWOReactiveId": {
          "type": "string"
        },
        "reasonCodeId": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        },
        "reasonCodeName": {
          "type": "string"
        },
        "isDependency": {
          "type": "boolean"
        },
        "dependentedWOId": {
          "type": "string"
        },
        "dependentedWONum": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "isHighLight": {
          "type": "boolean"
        },
        "timeInStatus": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.LocationDetailApiController.ServiceRequestSummaryResult": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "problemCode": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "zipCode": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.LocationInfoApiController.ClassificationTypeList": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "classificationName": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.MessageViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "senderTypeName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "senderType": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageUserViewModel"
        },
        "ccs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageCcsViewModel"
          }
        },
        "data": {
          "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageWoViewModel"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageAttachmentsViewModel"
          }
        },
        "recipients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageRecipientsViewModel"
          }
        },
        "isSmart": {
          "type": "boolean"
        },
        "smartMenuId": {
          "format": "int32",
          "type": "integer"
        },
        "smartMessageSourceTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageUserViewModel": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageCcsViewModel": {
      "type": "object",
      "properties": {
        "recipientUser": {
          "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageRecipientUserViewModel"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageWoViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageLocationViewModel"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageAttachmentsViewModel": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageRecipientsViewModel": {
      "type": "object",
      "properties": {
        "isRead": {
          "type": "boolean"
        },
        "recipientTypeName": {
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageRecipientUserViewModel": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageLocationViewModel": {
      "type": "object",
      "properties": {
        "locationNumber": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.MessageLocationAddress"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.MessageLocationAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.DashboardMessageWoViewModel": {
      "type": "object",
      "properties": {
        "stateusName": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "rate": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "createUserName": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "customerNTE": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "positionName": {
          "type": "string"
        },
        "refNum": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "part": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTimeToLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTimeToLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTimeToLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "purchaseNum": {
          "type": "string"
        },
        "problemDescription": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "responsibilityEntity": {
          "type": "string"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "customerWoStatus": {
          "type": "string"
        },
        "sourceOfWoName": {
          "type": "string"
        },
        "woCategoryName": {
          "type": "string"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "isSim": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.List[Moon.Web.Client.Areas.SOM.Models.WoMessageModel]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Areas.SOM.Models.WoMessageModel"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Areas.SOM.Models.WoMessageModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        },
        "propertyId": {
          "type": "string"
        },
        "createType": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "sendType": {
          "type": "string"
        },
        "sendTypeName": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "userImageUrl": {
          "type": "string"
        },
        "recipientType": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        }
      }
    },
    "Moon.Web.Initializer.ViewModels.UnReadMessagesViewModel": {
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageCenterMessageEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.MessageCenterMessageEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "refMessageId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "isPushed": {
          "type": "boolean"
        },
        "isReaded": {
          "type": "boolean"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "user": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "woNum": {
          "type": "string"
        },
        "callNum": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Initializer.Controllers.MessageCenterBaseController.PollResult": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/M2.Entity.MessageCenterMessageEntity"
        },
        "ticks": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.MessagesApiRepo.ReactiveMessagesQueryModel": {
      "type": "object",
      "properties": {
        "isHidden": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "messageTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRead": {
          "type": "boolean"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCcToMe": {
          "type": "boolean"
        },
        "ccUserId": {
          "type": "string"
        },
        "senderRoleType": {
          "type": "string"
        },
        "senderTypeIds": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.MessagesApiRepo.RecurrentMessagesQueryModel": {
      "type": "object",
      "properties": {
        "isHidden": {
          "type": "boolean"
        },
        "messageTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "messageTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipientType": {
          "type": "string"
        },
        "recipientTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRead": {
          "type": "boolean"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCcToMe": {
          "type": "boolean"
        },
        "ccUserId": {
          "type": "string"
        },
        "senderRoleType": {
          "type": "string"
        },
        "senderTypeIds": {
          "type": "string"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "clientRoleId": {
          "type": "string"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationNumber": {
          "type": "string"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Areas.StoreManager.Models.ConfirmWoModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Areas.StoreManager.Models.ConfirmWoModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Areas.StoreManager.Models.ConfirmWoModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "isReactive": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.WoServiceReasonModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.WoServiceReasonModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.WoServiceReasonModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "isReactive": {
          "type": "boolean"
        },
        "vendor": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "attachmentResult": {
          "$ref": "#/definitions/M2.Entity.Module.AttachmentInfoAttribute.AttachmentResult"
        },
        "isModifyRatingPrompt": {
          "type": "boolean"
        },
        "woReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        }
      }
    },
    "M2.Entity.Module.AttachmentInfoAttribute.AttachmentResult": {
      "type": "object",
      "properties": {
        "isServicePhoto": {
          "type": "boolean"
        },
        "photoDomain": {
          "type": "string"
        },
        "beforePhotoTitle": {
          "type": "string"
        },
        "afterPhotoTitle": {
          "type": "string"
        },
        "beforePhoto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "afterPhoto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        }
      }
    },
    "Moon.Web.Client.Areas.SOM.Models.LocationAddressViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullAddress": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationResidentialEntity": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "residentialNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "additionalInformation": {
          "type": "string"
        },
        "rspUsername": {
          "type": "string"
        },
        "isPrimaryResident": {
          "type": "boolean"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "primaryPhoneType": {
          "format": "int32",
          "type": "integer"
        },
        "flagofPhonesForTextMessagingApproved": {
          "type": "string"
        },
        "enableResidentPhones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ReactiveWoEntity": {
      "type": "object",
      "properties": {
        "currentStatusTimeSpan": {
          "type": "string"
        },
        "clientPrioritySetting": {
          "$ref": "#/definitions/M2.Entity.ClientPrioritySettingModel"
        },
        "hide": {
          "type": "string"
        },
        "caller": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "callerPositionId": {
          "format": "int32",
          "type": "integer"
        },
        "callPhone": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "problemDescription": {
          "type": "string"
        },
        "dispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "dispatchUserId": {
          "type": "string"
        },
        "dispatchUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "acceptOrDeclineBy": {
          "type": "string"
        },
        "acceptOrDeclineTime": {
          "format": "date-time",
          "type": "string"
        },
        "purchaseNum": {
          "type": "string"
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "woAge": {
          "format": "int32",
          "type": "integer"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "invoiceApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "timeToDispute": {
          "format": "int32",
          "type": "integer"
        },
        "callerPosition": {
          "$ref": "#/definitions/M2.Entity.DataCallerPositionEntity"
        },
        "paymentMethod": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "timeToRespond": {
          "format": "int32",
          "type": "integer"
        },
        "timeToArrive": {
          "format": "int32",
          "type": "integer"
        },
        "assigneeId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "dayRems": {
          "format": "int32",
          "type": "integer"
        },
        "hoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "comments": {
          "type": "string"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "pendingDispatchApproval": {
          "type": "string"
        },
        "attachmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "roomName": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isTurn": {
          "type": "boolean"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "firstAssetThumbnailUrl": {
          "type": "string"
        },
        "affiliatePhone": {
          "type": "string"
        },
        "ageDays": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callSource": {
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "assetSerialNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "assetUrl": {
          "type": "string"
        },
        "departmentName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "invoiceDetails": {
          "type": "string"
        },
        "timeToComplete": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceApprovalHours": {
          "format": "int32",
          "type": "integer"
        },
        "tempGLCode": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "wbsNumber": {
          "type": "string"
        },
        "poStatus": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalFlag": {
          "format": "int32",
          "type": "integer"
        },
        "pcdaReasonStatus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "isAutoSchedule": {
          "type": "boolean"
        },
        "invoicedTime": {
          "format": "date-time",
          "type": "string"
        },
        "isScheduleWorkOrderViaSO": {
          "type": "boolean"
        },
        "preDispatchRouteId": {
          "format": "int32",
          "type": "integer"
        },
        "statusAge": {
          "type": "string",
          "readOnly": true
        },
        "helperTechnicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.HelperTechnicianId"
          }
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string"
        },
        "projectTaskId": {
          "type": "string"
        },
        "specialBillingId": {
          "format": "int32",
          "type": "integer"
        },
        "specialBillingIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              76,
              108,
              109,
              110,
              112,
              113,
              114,
              115,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              148,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              173,
              174,
              192,
              193,
              244,
              245,
              246,
              252,
              253,
              254,
              255,
              275,
              276,
              277,
              278,
              284,
              285,
              287,
              289,
              342,
              350,
              351,
              352,
              453,
              456,
              504,
              508,
              510,
              511,
              526,
              530,
              532,
              533
            ],
            "type": "integer"
          }
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.WoReactiveAttributeEntity"
        },
        "missedScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "woCountDownTime": {
          "$ref": "#/definitions/M2.Entity.WoCountDownTime"
        },
        "canOnTheWay": {
          "type": "boolean",
          "readOnly": true
        },
        "isOnSite": {
          "type": "boolean",
          "readOnly": true
        },
        "canDispute": {
          "type": "boolean"
        },
        "isShownDispute": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "escalateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "unScheduleDateReason": {
          "type": "string"
        },
        "isUrgent": {
          "type": "boolean"
        },
        "currentUserRoles": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "latitude": {
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "type": "number"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "callTimeForZipCode": {
          "format": "date-time",
          "type": "string"
        },
        "initialVendorInvoiceReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "issuesReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoIssuesReasonModel"
          }
        },
        "priorityHasValue": {
          "type": "boolean"
        },
        "affiliatePriority": {
          "$ref": "#/definitions/M2.Entity.AffiliatePrioritySettingEntity"
        },
        "isAllowActiveChargeBack": {
          "type": "boolean"
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestDueDateLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientPrioritySettingModel": {
      "type": "object",
      "properties": {
        "timeToArrive": {
          "format": "int32",
          "type": "integer"
        },
        "timeToSchedule": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "timetoAccept": {
          "format": "int32",
          "type": "integer"
        },
        "timetoArrive": {
          "format": "int32",
          "type": "integer"
        },
        "timetoResolve": {
          "format": "int32",
          "type": "integer"
        },
        "pImg": {
          "type": "string"
        },
        "timeToQuote": {
          "format": "int32",
          "type": "integer"
        },
        "timeToResolveQuotedWork": {
          "format": "int32",
          "type": "integer"
        },
        "timeToInvoice": {
          "format": "int32",
          "type": "integer"
        },
        "abbrName": {
          "type": "string"
        },
        "chartShortName": {
          "type": "string"
        },
        "chartStyle": {
          "type": "string"
        },
        "chartColor": {
          "type": "string"
        },
        "priorityRank": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.HelperTechnicianId": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WoReactiveAttributeEntity": {
      "type": "object",
      "properties": {
        "woReactiveId": {
          "type": "string"
        },
        "photoCount": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "assignTime": {
          "format": "date-time",
          "type": "string"
        },
        "accessEntry": {
          "type": "string"
        },
        "isHasPets": {
          "type": "boolean"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "unitStatus": {
          "type": "string"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "maintenanceHoldEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "dispatchReason": {
          "type": "string"
        },
        "primaryAffiliateId": {
          "type": "string"
        },
        "ansignAffiliateRank": {
          "format": "int32",
          "type": "integer"
        },
        "tripChangeGroup": {
          "type": "string"
        },
        "houseOwnerStatus": {
          "format": "int32",
          "type": "integer"
        },
        "houseOwnerStatusUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "houseOwnerStatusUpdateUserId": {
          "type": "string"
        },
        "houseOwnerDeclineReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "isRejectedByInHouseTechnician": {
          "type": "boolean"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "houseOwnerDeclineComment": {
          "type": "string"
        },
        "inHouseFlagStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "criticalEventReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "criticalEventComments": {
          "type": "string"
        },
        "criticalFlagTime": {
          "format": "date-time",
          "type": "string"
        },
        "areasId": {
          "format": "int32",
          "type": "integer"
        },
        "chargeBackAmount": {
          "format": "double",
          "type": "number"
        },
        "chargeBackReason": {
          "type": "string"
        },
        "missETAFlagStatus": {
          "format": "int32",
          "type": "integer"
        },
        "onTheWayStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginTripTime": {
          "format": "date-time",
          "type": "string"
        },
        "cancelTripTime": {
          "format": "date-time",
          "type": "string"
        },
        "travelEstimatedMin": {
          "format": "int32",
          "type": "integer"
        },
        "returnTripNeededReasonEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "returnTripNeededReasonEnumName": {
          "type": "string"
        },
        "houseOwnerDeclineSubReason": {
          "type": "string"
        },
        "isCopyWO": {
          "type": "boolean"
        },
        "recommendationRating": {
          "format": "int32",
          "type": "integer"
        },
        "recommendationTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "sourceClientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "isWOCompletedByClient": {
          "type": "boolean"
        },
        "woNotCompleteByClientComment": {
          "type": "string"
        },
        "recommendationComments": {
          "type": "string"
        },
        "unScheduleDateReason": {
          "type": "string"
        },
        "insuranceLossNumber": {
          "type": "string"
        },
        "parentReferWONum": {
          "type": "string"
        },
        "clientWOId": {
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "overrideSIDUserId": {
          "format": "int32",
          "type": "integer"
        },
        "overrideSIDDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isOvertimeApproved": {
          "type": "boolean"
        },
        "overtimeApprovedUserId": {
          "format": "int32",
          "type": "integer"
        },
        "overtimeApprovedSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "isHistoryEscortWo": {
          "type": "boolean"
        },
        "isScheduleWorkOrderViaSO": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WoCountDownTime": {
      "type": "object",
      "properties": {
        "timeToAccept": {
          "format": "int32",
          "type": "integer"
        },
        "timeToAcceptBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToSchedule": {
          "format": "int32",
          "type": "integer"
        },
        "timeToScheduleBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToArrive": {
          "format": "int32",
          "type": "integer"
        },
        "timeToArriveBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToQuote": {
          "format": "int32",
          "type": "integer"
        },
        "timeToQuoteBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToResolve": {
          "format": "int32",
          "type": "integer"
        },
        "timeToResolveBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToResolveQuotedWork": {
          "format": "int32",
          "type": "integer"
        },
        "timeToResolveQuotedWorkBy": {
          "format": "date-time",
          "type": "string"
        },
        "timeToInvoice": {
          "format": "int32",
          "type": "integer"
        },
        "timeToInvoiceBy": {
          "format": "date-time",
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "locationCurrentTime": {
          "format": "date-time",
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "acceptLogTime": {
          "format": "date-time",
          "type": "string"
        },
        "configResult": {
          "$ref": "#/definitions/M2.Entity.GetExcludeNonWorkingTimeConfigResult"
        }
      }
    },
    "M2.Entity.ReactiveWoIssuesReasonModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "issuesReasonName": {
          "type": "string"
        },
        "issuesReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.GetExcludeNonWorkingTimeConfigResult": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ExcludeNonWorkingTimeConfigDto"
          }
        }
      }
    },
    "M2.Entity.ExcludeNonWorkingTimeConfigDto": {
      "type": "object",
      "properties": {
        "countDownType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isExcludeNonWorking": {
          "type": "boolean"
        },
        "pauseType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNextNonWorkingTimeNotPause": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.DTO.AvailableScheduleDTO": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "isSchedule": {
          "type": "boolean"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Location.LocationResidentialViewModel": {
      "type": "object",
      "properties": {
        "residentId": {
          "type": "string"
        },
        "residentName": {
          "type": "string"
        },
        "residentPhone": {
          "type": "string"
        },
        "residentEmail": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "residentialNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "additionalInformation": {
          "type": "string"
        },
        "rspUsername": {
          "type": "string"
        },
        "isPrimaryResident": {
          "type": "boolean"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "primaryPhoneType": {
          "format": "int32",
          "type": "integer"
        },
        "flagofPhonesForTextMessagingApproved": {
          "type": "string"
        },
        "enableResidentPhones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ReactiveWoContactEntity": {
      "type": "object",
      "properties": {
        "woReactiveId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneType": {
          "format": "int32",
          "type": "integer"
        },
        "phoneTwo": {
          "type": "string"
        },
        "phoneTypeTwo": {
          "format": "int32",
          "type": "integer"
        },
        "phoneThree": {
          "type": "string"
        },
        "phoneTypeThree": {
          "format": "int32",
          "type": "integer"
        },
        "phoneFour": {
          "type": "string"
        },
        "phoneTypeFour": {
          "format": "int32",
          "type": "integer"
        },
        "primaryPhoneType": {
          "format": "int32",
          "type": "integer"
        },
        "additionalPhone": {
          "type": "string"
        },
        "flagofPhonesForTextMessagingApproved": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.WoCreateViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "isSnow": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woStatusId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.LocationViewModel": {
      "type": "object",
      "properties": {
        "locationAttribute": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "is24HR": {
          "type": "boolean"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "locationServiceProvider": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "callPhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "gateCode": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "floorType": {
          "type": "string"
        },
        "ttsqft": {
          "format": "double",
          "type": "number"
        },
        "truckDay": {
          "type": "string"
        },
        "relocationDate": {
          "format": "date-time",
          "type": "string"
        },
        "primaryAffiliateName": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "isHOA": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "onPlan": {
          "type": "boolean"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "legacyLocationNumber": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "districtManager": {
          "type": "string"
        },
        "isAutoRFI": {
          "type": "boolean"
        },
        "classificationId": {
          "format": "int32",
          "type": "integer"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "clientCustomerType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "isActiveLocation": {
          "type": "boolean"
        },
        "sowTrigger": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.WoServiceCodeViewModel": {
      "type": "object",
      "properties": {
        "abbrName": {
          "description": "Gets or sets the name of the abbr.",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "isClientVisible": {
          "description": "Gets or sets a value indicating whether this instance is client visible.",
          "type": "boolean"
        },
        "isSeasonalContractEnable": {
          "description": "Gets or sets a value indicating whether this instance is seasonal contract enable.",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "description": "Gets or sets the service type identifier.",
          "type": "integer"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity",
          "description": "Gets or sets the type of the service."
        },
        "skillLevelId": {
          "format": "int32",
          "description": "Gets or sets the skill level identifier.",
          "type": "integer"
        },
        "isReferredServiceCode": {
          "description": "Gets or sets a value indicating whether this instance is referred service code.",
          "type": "boolean"
        },
        "referral": {
          "description": "Gets or sets the referral.",
          "type": "string"
        },
        "referredServiceContact": {
          "description": "Gets or sets the referred service contact.",
          "type": "string"
        },
        "popupVerbiage": {
          "description": "Gets or sets the popup verbiage.",
          "type": "string"
        },
        "hyperlink": {
          "description": "Gets or sets the hyperlink.",
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientServiceCodePriorityEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "clientServiceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.ReactiveWoEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ScheduleTimeResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
          }
        },
        "currentLocationTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.DTO.GradeDTO": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "grade": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.Module.DTO.AvailableScheduleV3DTO": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "isSchedule": {
          "type": "boolean"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            51,
            52,
            53,
            54,
            55,
            57,
            59,
            60,
            61,
            63,
            65,
            66,
            67,
            70,
            72,
            73,
            80,
            92
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.ClientLocationServiceCategoryDisableQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Future24HoursMaxApparentTempModel": {
      "type": "object",
      "properties": {
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "maxApparentTemp": {
          "format": "double",
          "type": "number"
        },
        "actualTemperature": {
          "format": "double",
          "type": "number"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.HouseOwner.Models.LocationAddressViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullAddress": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.PermissionApiRepo.UserPermissionResourceQueryModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "permissionResourceType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ProCareViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProCareViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ProCareViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "assigneeUserName": {
          "type": "string"
        },
        "createUserName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "subTaskCount": {
          "format": "int32",
          "type": "integer"
        },
        "visitTypeName": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.ProcareViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "assigneeUserName": {
          "type": "string"
        },
        "createUserName": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "openDays": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "description": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianName": {
          "type": "string"
        },
        "technicianList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "version": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDateFormatString": {
          "type": "string"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.TechnicianWorkingHoursEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "week": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectReactiveWoQueryModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "specialCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isBundle": {
          "type": "boolean"
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "batchInvoiceId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "assignToIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technicians": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "begingCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "endCustomerNte": {
          "format": "double",
          "type": "number"
        },
        "begingAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "endAffiliateNte": {
          "format": "double",
          "type": "number"
        },
        "reactiveTagId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceStatusId": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "isChargeback": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isOnlyForMe": {
          "type": "string"
        },
        "isTaskWo": {
          "type": "boolean"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "assigneeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ownerId": {
          "type": "string"
        },
        "ownerIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientRoleId": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "beginAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endAffiliateProposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "endSubProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "beginStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "endStayInStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "weeksType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "locationResidentialName": {
          "type": "string"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "operationsSpecialist": {
          "type": "string"
        },
        "agesStart": {
          "format": "int32",
          "type": "integer"
        },
        "agesEnd": {
          "format": "int32",
          "type": "integer"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isFromCalendar": {
          "type": "boolean"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "mainAreas": {
          "type": "string"
        },
        "areasIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subAreas": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "tradeName": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "customDateRangeBegin": {
          "format": "date-time",
          "type": "string"
        },
        "customDateRangeEnd": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeId": {
          "type": "string"
        },
        "trpProjectType": {
          "format": "int32",
          "type": "integer"
        },
        "woStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disputeAgeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectAssigneeName": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "closedNoInvoiceNecesaryInHouse": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryAvoided": {
          "type": "boolean"
        },
        "closedNoInvoiceNecesaryExcluded": {
          "type": "boolean"
        },
        "customizeClosedStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "otherStatusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerStatusFlag": {
          "type": "boolean"
        },
        "isFirstWo": {
          "type": "boolean"
        },
        "userWOExportId": {
          "type": "string"
        },
        "hasMissETAReason": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "deferredReasonId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            76,
            108,
            109,
            110,
            112,
            113,
            114,
            115,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            148,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161,
            162,
            163,
            164,
            173,
            174,
            192,
            193,
            244,
            245,
            246,
            252,
            253,
            254,
            255,
            275,
            276,
            277,
            278,
            284,
            285,
            287,
            289,
            342,
            350,
            351,
            352,
            453,
            456,
            504,
            508,
            510,
            511,
            526,
            530,
            532,
            533
          ],
          "type": "integer"
        },
        "ajaxRequestPortal": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "isNullProposal": {
          "type": "boolean"
        },
        "proposalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "proposalStatuss": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isCitation": {
          "type": "boolean"
        },
        "isTurnWo": {
          "type": "boolean"
        },
        "isResidential": {
          "type": "boolean"
        },
        "operationManagerByAging": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isMIYO": {
          "type": "boolean"
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "financialOverviewByWoStatus": {
          "format": "int32",
          "type": "integer"
        },
        "fiscalMonthes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "finscalStatus": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creatorId": {
          "type": "string"
        },
        "isClientFromCalendar": {
          "type": "boolean"
        },
        "customerNTEModifyUserId": {
          "type": "string"
        },
        "isContainsGLCode": {
          "type": "boolean"
        },
        "labelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "proposalDeclineReasonIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliatePriorityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsProcareBundleFlag": {
          "type": "boolean"
        },
        "containsRecentlyMovedinFlag": {
          "type": "boolean"
        },
        "userActualParams": {
          "type": "string"
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "preDispatchReview": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isGetTotalCount": {
          "type": "boolean"
        },
        "preDispatchReviewRouteIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isPreService": {
          "type": "boolean"
        },
        "postpone": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "department": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "projectManagerId": {
          "type": "string"
        },
        "departmentIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woNumFuzzy": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientVisibleServiceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "recurrentWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reactiveWoOpenedStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeRecurrentWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "excludeReactiveWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "smsLocationNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "citys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "woNums": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isScheduledForToday": {
          "type": "boolean"
        },
        "scheduledTodayStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledTodayEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "missedEtaCurrentUtcTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endStatusLastUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "endModifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "endConfirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "referWoNumPrecise": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "noIncluedeWoTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isRemoveBundleWo": {
          "type": "boolean"
        },
        "isRemoveProjectWo": {
          "type": "boolean"
        },
        "isRemoveTurnProjectWo": {
          "type": "boolean"
        },
        "isBundleWo": {
          "type": "boolean"
        },
        "isProjectWo": {
          "type": "boolean"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "isToConfirm": {
          "type": "boolean"
        },
        "confirmRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmRates": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "confirmTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woStatuseListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeListIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technician": {
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "technicianFullName": {
          "type": "string"
        },
        "isAssignedTechnician": {
          "type": "boolean"
        },
        "helperTechnician": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reactiveIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isVpMaintenance": {
          "type": "boolean"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceOfWOIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "photoActionStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "isExcludeClientNotVisible": {
          "type": "boolean"
        },
        "customerWoStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationComplex": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "notInCludeSMSNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "hasReactive": {
          "type": "boolean"
        },
        "hasRecurrent": {
          "type": "boolean"
        },
        "isClientPortal": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachmentTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              46,
              50,
              100
            ],
            "type": "integer"
          }
        },
        "contentTypeList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmTypeList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createYear": {
          "format": "int32",
          "type": "integer"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isWph": {
          "type": "boolean"
        },
        "isWphRsp": {
          "type": "boolean"
        },
        "isNotResidential": {
          "type": "boolean"
        },
        "isAffiliatePortal": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "workOrderType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "ownerName": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "ownerFirstName": {
          "type": "string",
          "readOnly": true
        },
        "ownerLastName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeFirstName": {
          "type": "string",
          "readOnly": true
        },
        "assigneeLastName": {
          "type": "string",
          "readOnly": true
        },
        "declineReasonId": {
          "type": "string"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "isBi": {
          "type": "boolean"
        },
        "countNumber": {
          "format": "int32",
          "type": "integer"
        },
        "origin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "originAndCommunitysIsNull": {
          "type": "boolean",
          "readOnly": true
        },
        "version": {
          "type": "string"
        },
        "missWoIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResidentialSearch": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "lowConfirmType": {
          "type": "string"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "modifiedSince": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Procare.ReactiveWoIndexListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Procare.ReactiveWoIndexListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.ReactiveWoIndexListViewModel": {
      "type": "object",
      "properties": {
        "projectTaskId": {
          "type": "string"
        },
        "additionalDetail": {
          "type": "string"
        },
        "subTaskStatusId": {
          "type": "string"
        },
        "customerWOStatusId": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "woCreateDate": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "serviceTypeId": {
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "woStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isContainsCancellWo": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.Location.LocationResidentialListViewModel": {
      "type": "object",
      "properties": {
        "residentId": {
          "type": "string"
        },
        "residentName": {
          "type": "string"
        },
        "residentPhone": {
          "type": "string"
        },
        "residentCellPhone": {
          "type": "string"
        },
        "residentOfficePhone": {
          "type": "string"
        },
        "residentHomePhone": {
          "type": "string"
        },
        "residentEmail": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.LocationAttributesViewModel": {
      "type": "object",
      "properties": {
        "gateCode": {
          "type": "string"
        },
        "yearBuilt": {
          "format": "date-time",
          "type": "string"
        },
        "isHOA": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Controllers.UpdateProCareInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.PredictServiceViewModel": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "string"
        },
        "predictservice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ServicePredictionViewModel"
          }
        }
      }
    },
    "M2.Entity.ServicePredictionViewModel": {
      "type": "object",
      "properties": {
        "serviceCategory": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCode": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "probability": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Moon.Web.Client.Models.Procare.SubTaskCreatedOutput": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "M2.Entity.VisitIsCanScheduleSubTaskResult": {
      "type": "object",
      "properties": {
        "isCanScheduleSubTask": {
          "type": "boolean"
        },
        "scheduleSubTaskResult": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectTaskEntity": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "pmId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "smsReviewStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "taskTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "duration": {
          "format": "double",
          "type": "number"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "actualStart": {
          "format": "date-time",
          "type": "string"
        },
        "actualEnd": {
          "format": "date-time",
          "type": "string"
        },
        "customerNTE": {
          "format": "double",
          "type": "number"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "remark": {
          "type": "string"
        },
        "roomName": {
          "type": "string"
        },
        "completedWeight": {
          "format": "int32",
          "type": "integer"
        },
        "lead": {
          "format": "double",
          "type": "number"
        },
        "lag": {
          "format": "double",
          "type": "number"
        },
        "note": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "progress": {
          "format": "double",
          "type": "number"
        },
        "completed": {
          "format": "int32",
          "type": "integer"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceAmount": {
          "format": "double",
          "type": "number"
        },
        "isOutOfScope": {
          "type": "boolean"
        },
        "outOfScopeNote": {
          "type": "string"
        },
        "outOfScopeApproveNote": {
          "type": "string"
        },
        "outOfScopeApproveUserId": {
          "type": "string"
        },
        "outOfScopeApproveDate": {
          "format": "date-time",
          "type": "string"
        },
        "outOfScopeStatus": {
          "format": "int32",
          "type": "integer"
        },
        "isDispatched": {
          "type": "boolean"
        },
        "initialAffiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "projectInspectionScopeId": {
          "format": "int32",
          "type": "integer"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "inspectionTemplateItemId": {
          "format": "int32",
          "type": "integer"
        },
        "maintenanceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "scopeReName": {
          "type": "string"
        },
        "uom": {
          "type": "string"
        },
        "isProposalSubmitted": {
          "type": "boolean"
        },
        "costType": {
          "format": "int32",
          "type": "integer"
        },
        "depends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskDependEntity"
          }
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
          }
        },
        "workOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectReactiveWoEntity"
          }
        },
        "woNum": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "projectManager": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "taskType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "costTypeEntiy": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "status": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "smsReviewStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "maintenanceType": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "isEscalateForProCare": {
          "type": "boolean"
        },
        "isCheckedByQCWO": {
          "type": "boolean"
        },
        "billTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "taskSourceType": {
          "format": "int32",
          "type": "integer"
        },
        "margin": {
          "format": "double",
          "type": "number"
        },
        "briefDescription": {
          "type": "string"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "reactiveInvoiceItemId": {
          "format": "int32",
          "type": "integer"
        },
        "totalClientPrice": {
          "format": "double",
          "type": "number"
        },
        "woStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "additionalData": {
          "type": "string"
        },
        "scopeAreaId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceItemId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceComboId": {
          "format": "int32",
          "type": "integer"
        },
        "assessmentItemType": {
          "format": "int32",
          "type": "integer"
        },
        "configToolsTaskModel": {
          "$ref": "#/definitions/M2.Entity.ScopeConfigToolDtoModel"
        },
        "assessmentTaskData": {
          "$ref": "#/definitions/M2.Entity.ScopeConfigToolDtoModel"
        },
        "assessmentItemsPopupType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "assessmentItemsValueType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "assessmentItemsDataType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            99,
            100
          ],
          "type": "integer"
        },
        "isNeedCompare": {
          "type": "boolean"
        },
        "tradeName": {
          "type": "string"
        },
        "tradeId": {
          "format": "int32",
          "type": "integer"
        },
        "predecessor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
          },
          "readOnly": true
        },
        "isNotChangOrder": {
          "type": "boolean",
          "readOnly": true
        },
        "successor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
          },
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectTaskDependEntity": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "dependTaskId": {
          "type": "string"
        },
        "dependType": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "task": {
          "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
        },
        "dependTask": {
          "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
        },
        "dependTypeEntity": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectReactiveWoEntity": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "hasReSchedule": {
          "type": "boolean"
        },
        "invoiceAmount": {
          "format": "double",
          "type": "number"
        },
        "woReactive": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "task": {
          "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "locationId": {
          "type": "string"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "affiliateProposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProposalEntity"
          }
        },
        "smsProposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProposalEntity"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ScopeConfigToolDtoModel": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/M2.Entity.ConfigToolTaskModel"
        },
        "material": {
          "$ref": "#/definitions/M2.Entity.ConfigToolMaterialModel"
        },
        "labor": {
          "$ref": "#/definitions/M2.Entity.ConfigToolLaborModel"
        },
        "flatRate": {
          "$ref": "#/definitions/M2.Entity.ConfigToolFlatRateModel"
        }
      }
    },
    "M2.Entity.ConfigToolTaskModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "uom": {
          "type": "string"
        },
        "pricingType": {
          "format": "int32",
          "type": "integer"
        },
        "margin": {
          "format": "double",
          "type": "number"
        },
        "serviceCodeFullDescription": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ConfigToolMaterialModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "format": "double",
          "type": "number"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ConfigToolLaborModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "format": "double",
          "type": "number"
        },
        "hrsPer": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ConfigToolFlatRateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ProCareModel": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "servcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "isFirstProCare": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TechnicianScore"
          }
        }
      }
    },
    "Moon.Web.Client.Models.WoProfileViewModel": {
      "type": "object",
      "properties": {
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isWPH": {
          "type": "boolean"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientLogoUrl": {
          "type": "string"
        },
        "clientTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "isActive": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "locationSMSNumber": {
          "type": "string"
        },
        "locationAdress": {
          "type": "string"
        },
        "locationPhone": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateEmail": {
          "type": "string"
        },
        "affiliatePhone": {
          "type": "string"
        },
        "isCurrentUserWatch": {
          "type": "boolean"
        },
        "watchCount": {
          "format": "int64",
          "type": "integer"
        },
        "watchers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.WatchersViewModel"
          }
        },
        "visitCount": {
          "format": "int64",
          "type": "integer"
        },
        "monthlyVisitCount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple[System.DateTime,System.Int32]"
          }
        },
        "openDays": {
          "format": "int32",
          "type": "integer"
        },
        "openWOCount": {
          "format": "int32",
          "type": "integer"
        },
        "primaryOM": {
          "type": "string"
        },
        "callPhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "ownerShip": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.WatchersViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userRoleTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "canDelete": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ReactiveOpenWosSummaryViewModel": {
      "type": "object",
      "properties": {
        "lastServiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "openWOsCount": {
          "format": "int32",
          "type": "integer"
        },
        "historyWOsCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalSpend": {
          "format": "double",
          "type": "number"
        },
        "avgAgeOfOpenWOs": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "referWONum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationID": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "customerWoStatusName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "statusName": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.RecurrentWoQueryModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RecurrentWoQueryModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ResidentContactInfoQuery": {
      "type": "object",
      "properties": {
        "profileReferenceType": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.WoContactInfoEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ContactModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "contactType": {
          "type": "string"
        },
        "phoneItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.ProjectForClientPatchModel": {
      "type": "object",
      "properties": {
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "assessmentStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "assessmentEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "progress": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "projectNum": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "statusId": {
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "actualStart": {
          "format": "date-time",
          "type": "string"
        },
        "actualEnd": {
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "completed": {
          "format": "int32",
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "turnProjectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "clientAssigneeId": {
          "type": "string"
        },
        "dateofEstimation": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "estimatorPhone": {
          "type": "string"
        },
        "estimatorEmail": {
          "type": "string"
        },
        "budget": {
          "format": "double",
          "type": "number"
        },
        "initialBudget": {
          "format": "double",
          "type": "number"
        },
        "qcWalkReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "estimatedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateBudget": {
          "format": "double",
          "type": "number"
        },
        "completeRatio": {
          "format": "double",
          "type": "number"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "inspectionTime": {
          "format": "date-time",
          "type": "string"
        },
        "inspectionEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isUtilitiesOn": {
          "type": "boolean"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "inspectionPrice": {
          "format": "double",
          "type": "number"
        },
        "inspectionCost": {
          "format": "double",
          "type": "number"
        },
        "affiliateReportSqft": {
          "type": "string"
        },
        "affiliateReportBedRoom": {
          "type": "string"
        },
        "affiliateReportBathRoom": {
          "type": "string"
        },
        "isInspection": {
          "type": "boolean"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "departmentId": {
          "type": "string"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "cancelReason": {
          "type": "string"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "specialInstructions": {
          "type": "string"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "turnRehabCapitalProjectStatusEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "trpVersion": {
          "format": "int32",
          "type": "integer"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "propertyReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "earliestAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsFinalApprovaDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalApprovalDate": {
          "format": "date-time",
          "type": "string"
        },
        "expectedCompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalSignOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientRevisionRequestDate": {
          "format": "date-time",
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "assessmentReviewStatus": {
          "format": "int32",
          "type": "integer"
        },
        "phaseId": {
          "format": "int32",
          "type": "integer"
        },
        "isSingleLocation": {
          "type": "boolean"
        },
        "extClientProjectNum": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ProjectAnswerBatchApiController.ProjectAnswerBatchQueryModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "beginSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endSubmitDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ProjectLocationApiController.IdNameViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ProjectLocationApiController.SurveyProjectLocationQuery": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ProjectLocationApiController.SurveyDetailViewModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "surveyer": {
          "type": "string"
        },
        "surveyerName": {
          "type": "string"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "surveyNum": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.Property.PropertyDetailViewModel": {
      "type": "object",
      "properties": {
        "residential": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationResidentialEntity"
          }
        },
        "mir": {
          "$ref": "#/definitions/M2.Entity.LocationMIREntity"
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        }
      }
    },
    "M2.Entity.LocationMIREntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "firstMIRDate": {
          "format": "date-time",
          "type": "string"
        },
        "certificationEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentMIRVendor": {
          "type": "string"
        },
        "financialStableDate": {
          "format": "date-time",
          "type": "string"
        },
        "newBuildWarrantyEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentMIRDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentMIRType": {
          "type": "string"
        },
        "unitHmy": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.Property.SurveyListViewModel": {
      "type": "object",
      "properties": {
        "serviceCategoryName": {
          "type": "string"
        },
        "questionName": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        }
      }
    },
    "M2.Entity.SugarModel.Entity.V_SurverySummaryEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "surveryCount": {
          "format": "int32",
          "type": "integer"
        },
        "questionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SugarModel.Generated.survey_Question"
          }
        },
        "projectLocationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyProjectLocationEntity"
          }
        }
      }
    },
    "M2.Entity.SugarModel.Generated.survey_Question": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "questionName": {
          "type": "string"
        },
        "questionTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "questionRank": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "format": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "categoryName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "format": "int32",
          "type": "integer"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "additionTitle": {
          "type": "string"
        },
        "t_QuestionOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SugarModel.Generated.survey_QuestionOption"
          }
        },
        "answerSummary": {
          "$ref": "#/definitions/M2.Entity.SugarModel.Entity.QuestionAnswerSummary"
        },
        "t_Data_BusinessUnitName": {
          "type": "string"
        },
        "t_IsAdditionInfo": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SurveyProjectLocationEntity": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/M2.Entity.SurveyProjectEntity"
        },
        "locationId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "landscapingQuote": {
          "format": "double",
          "type": "number"
        },
        "parkingLotQuote": {
          "format": "double",
          "type": "number"
        },
        "isMaintenanceShow": {
          "type": "boolean"
        },
        "surveyer": {
          "type": "string"
        },
        "surveyerEntity": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "clientId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "answerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SugarModel.Entity.SurverySummaryModel"
          }
        },
        "gpcaReferenceNumber": {
          "type": "string"
        },
        "canSubmitSurvey": {
          "type": "boolean"
        },
        "surveyNum": {
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "questionnaireId": {
          "format": "int32",
          "type": "integer"
        },
        "auditStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "auditorName": {
          "type": "string"
        },
        "auditorTitleId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SugarModel.Generated.survey_QuestionOption": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "questionOptionName": {
          "type": "string"
        },
        "questionOptionRank": {
          "format": "int32",
          "type": "integer"
        },
        "subQuestionId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "format": "int32",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "isAdditionInfo": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SugarModel.Entity.QuestionAnswerSummary": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SurveyProjectEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "isEnable": {
          "type": "boolean"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "isShowAffiliate": {
          "type": "boolean"
        },
        "isShowClient": {
          "type": "boolean"
        },
        "isClientMarkup": {
          "type": "boolean"
        },
        "isShowMobile": {
          "type": "boolean"
        },
        "projectLocationId": {
          "type": "string"
        },
        "pendingCount": {
          "format": "int32",
          "type": "integer"
        },
        "completedCount": {
          "format": "int32",
          "type": "integer"
        },
        "cancelledCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "answer": {
          "type": "string"
        },
        "isMarkup": {
          "type": "boolean"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "completeRate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SugarModel.Entity.SurverySummaryModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "answerId": {
          "format": "int32",
          "type": "integer"
        },
        "answerValue": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.Property.LocationResidentViewModel": {
      "type": "object",
      "properties": {
        "receiveSMSAlertValue": {
          "type": "string"
        },
        "isDueMoveout": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "userId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "residentialNum": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isReceiveSMSAlert": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "additionalInformation": {
          "type": "string"
        },
        "rspUsername": {
          "type": "string"
        },
        "isPrimaryResident": {
          "type": "boolean"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "primaryPhoneType": {
          "format": "int32",
          "type": "integer"
        },
        "flagofPhonesForTextMessagingApproved": {
          "type": "string"
        },
        "enableResidentPhones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Location.Residential.ResidentViewModel": {
      "type": "object",
      "properties": {
        "residentId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "phoneList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Location.Residential.Phone"
          }
        },
        "additionalPhoneList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Location.Residential.Phone"
          }
        },
        "dwellingStatus": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.Location.Residential.Phone": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string"
        },
        "isPrimaryPhone": {
          "type": "boolean"
        },
        "isTextMessagingApproved": {
          "type": "boolean"
        },
        "phoneType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.Location.Residential.ResidentModel": {
      "type": "object",
      "properties": {
        "residentId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "positionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "preferredCallBackPhone": {
          "type": "string"
        },
        "isCanCreateOrUpdateResident": {
          "type": "boolean"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "phoneList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Location.Residential.Phone"
          }
        },
        "additionalPhoneList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Location.Residential.Phone"
          }
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[Moon.Web.Client.Areas.Residential.Models.Property.PropertyIndexViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Areas.Residential.Models.Property.PropertyIndexViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.Property.PropertyIndexViewModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "is24HR": {
          "type": "boolean"
        },
        "locationTypeId": {
          "type": "string"
        },
        "locationSubTypeId": {
          "type": "string"
        },
        "openDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationSubTypeName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "locationServiceProvider": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "callPhone": {
          "type": "string"
        },
        "homePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "gateCode": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "floorType": {
          "type": "string"
        },
        "ttsqft": {
          "format": "double",
          "type": "number"
        },
        "truckDay": {
          "type": "string"
        },
        "relocationDate": {
          "format": "date-time",
          "type": "string"
        },
        "primaryAffiliateName": {
          "type": "string"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "isHOA": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "onPlan": {
          "type": "boolean"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "legacyLocationNumber": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "districtManager": {
          "type": "string"
        },
        "isAutoRFI": {
          "type": "boolean"
        },
        "classificationId": {
          "format": "int32",
          "type": "integer"
        },
        "editOldValue": {
          "type": "string"
        },
        "editNewValue": {
          "type": "string"
        },
        "clientCustomerType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "isActiveLocation": {
          "type": "boolean"
        },
        "sowTrigger": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.RedirectToRouteResult": {
      "type": "object",
      "properties": {
        "permanent": {
          "type": "boolean",
          "readOnly": true
        },
        "routeName": {
          "type": "string",
          "readOnly": true
        },
        "routeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.HouseOwner.HouseOwnerNteOptModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "serviceCategoryId": {
          "type": "string"
        },
        "isAcceptStandardNTE": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationTimeLineQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "utcOffSet": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationTimeLineReportViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "timeline": {
          "format": "date-time",
          "type": "string"
        },
        "locationInformationTypeId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryName": {
          "type": "string"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeName": {
          "type": "string"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateName": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "qcWalkReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "surveyCompletedDate": {
          "format": "date-time",
          "type": "string"
        },
        "highRisk": {
          "type": "string"
        },
        "warranty": {
          "type": "string"
        },
        "newBuildWarrantyEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "moveOutDate": {
          "format": "date-time",
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "loadDate": {
          "format": "date-time",
          "type": "string"
        },
        "budget": {
          "format": "double",
          "type": "number"
        },
        "expense": {
          "format": "double",
          "type": "number"
        },
        "callDate": {
          "format": "date-time",
          "type": "string"
        },
        "customerWOStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWOStatusName": {
          "type": "string"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "isRequestInfo": {
          "type": "boolean"
        },
        "isChargeBack": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isIssues": {
          "type": "boolean"
        },
        "refTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "inspectionsDate": {
          "format": "date-time",
          "type": "string"
        },
        "leaseStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "acquistionDate": {
          "format": "date-time",
          "type": "string"
        },
        "residentialName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationPlanItemQueryModel": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "budgetId": {
          "type": "string"
        },
        "planMonth": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationSmsNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "type": "string"
        },
        "budgetMonth": {
          "format": "date-time",
          "type": "string"
        },
        "statusId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "departmentType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.PlanItemModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.PlanItemModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.PlanItemModel": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "planMonth": {
          "format": "date-time",
          "type": "string"
        },
        "fiscalPeriodName": {
          "type": "string"
        },
        "budgetItemServiceCount": {
          "format": "int32",
          "type": "integer"
        },
        "budgetItemAmount": {
          "format": "double",
          "type": "number"
        },
        "budgetItemPrice": {
          "format": "double",
          "type": "number"
        },
        "isWoGenerated": {
          "type": "boolean"
        },
        "planName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "locationSMSNumber": {
          "type": "string"
        },
        "serviceCount": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "abbrName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "originalCount": {
          "format": "int32",
          "type": "integer"
        },
        "completedCount": {
          "format": "int32",
          "type": "integer"
        },
        "createdCount": {
          "format": "int32",
          "type": "integer"
        },
        "remainsCount": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        }
      }
    },
    "M2.Entity.ReactiveWoExpenseEntity": {
      "type": "object",
      "properties": {
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "categoryWoInvoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "categoryWoCount": {
          "format": "int64",
          "type": "integer"
        },
        "expenseWoCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "M2.Entity.RecurrentWoExpenseEntity": {
      "type": "object",
      "properties": {
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "categoryWoInvoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "categoryWoCount": {
          "format": "int64",
          "type": "integer"
        },
        "expenseWoCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "M2.Entity.WoPhotoGalleryViewModel": {
      "type": "object",
      "properties": {
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.PhotoGalleryViewModel"
          }
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woStatus": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "uploadDate": {
          "format": "date-time",
          "type": "string"
        },
        "woCreateDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.PhotoGalleryViewModel": {
      "type": "object",
      "properties": {
        "attachmentType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            50,
            100
          ],
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        },
        "woNum": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "woStatus": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "uploadDate": {
          "format": "date-time",
          "type": "string"
        },
        "woCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "uploadUserId": {
          "type": "string"
        },
        "uploadUser": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "createUserType": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationTimeLineGroupReportViewModel": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Threading.Tasks.Task[M2.Entity.LocationResidentialEntity]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/M2.Entity.LocationResidentialEntity",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.RequestWOListModel": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "radStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Areas.StoreManager.Models.WoDetailRatingViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceDescription": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "clientCode": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "canRating": {
          "type": "boolean"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "recommendationRating": {
          "format": "int32",
          "type": "integer"
        },
        "recommendationComments": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Areas.StoreManager.Models.ReactiveWoModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRate": {
          "format": "int32",
          "type": "integer"
        },
        "confirmType": {
          "format": "int32",
          "type": "integer"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "estimatedTotal": {
          "type": "string"
        },
        "tax": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "problemSummary": {
          "type": "string"
        },
        "additionalDetail": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "noServiceRateArr": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRateArr": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createMon": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "userEntity": {
          "$ref": "#/definitions/M2.Entity.CallContactEntity"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "isRspCreate": {
          "type": "boolean"
        },
        "canRating": {
          "type": "boolean"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "affiliateName": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "version": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "woStatusName": {
          "type": "string"
        },
        "onTheWayStatus": {
          "format": "int32",
          "type": "integer"
        },
        "beginTripTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "recommendationRating": {
          "format": "int32",
          "type": "integer"
        },
        "recommendationComments": {
          "type": "string"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "clientCode": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "attachmentResult": {
          "$ref": "#/definitions/M2.Entity.Module.AttachmentInfoAttribute.AttachmentResult"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "isModifyRatingPrompt": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.CallContactEntity": {
      "type": "object",
      "properties": {
        "callId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phone2": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WoCompleteRateModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "rate": {
          "format": "int32",
          "type": "integer"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            -1
          ],
          "type": "integer"
        },
        "sendEmailUserId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SocialMediaPagesEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "google": {
          "type": "string"
        },
        "yelp": {
          "type": "string"
        },
        "facebook": {
          "type": "string"
        },
        "trustpilot": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Web.Mvc.EmptyResult": {
      "type": "object",
      "properties": {}
    },
    "M2.Entity.WorkingHoursEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "week": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "isWorkingHourChecked": {
          "type": "boolean"
        },
        "isAdded": {
          "type": "boolean"
        },
        "startLocalTime": {
          "type": "string"
        },
        "endLocalTime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.NonWorkingDayEntity": {
      "type": "object",
      "properties": {
        "affiliateId": {
          "type": "string"
        },
        "nonWorkingStartDay": {
          "format": "date-time",
          "type": "string"
        },
        "nonWorkingEndDay": {
          "format": "date-time",
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Reactive.CalendarScheduledWOViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "technician": {
          "type": "string"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "locationId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "version": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "type": "string"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "isAutoScheduleRegion": {
          "type": "boolean"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "departmentName": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.ReactiveWoEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TechnicianCalendarCountModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "securityID": {
          "type": "string"
        },
        "recentWoDate": {
          "format": "date-time",
          "type": "string"
        },
        "technicianEntity": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "technicianFullName": {
          "type": "string"
        },
        "isCertified": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UpdateResult": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataUserScheduleReasonEntity": {
      "type": "object",
      "properties": {
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.UserScheduleEntity": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "reasonId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "userModel": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "reason": {
          "$ref": "#/definitions/M2.Entity.DataUserScheduleReasonEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "locationAddressText": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WoScheduleEntity": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "technitionId": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "technition": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "reactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "employee": {
          "$ref": "#/definitions/M2.Entity.AffiliateEmployeeEntity"
        },
        "onSiteTime": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TechnicianHandledWoQueryModel": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TechnicianHandledWoResultModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "handledWoCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.AffiliateTechnicianInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.DTO.WoDetailPageScheduleResult": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "scheduleTime": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleTimeDTO"
          }
        }
      }
    },
    "M2.Entity.Module.DTO.ScheduleTimeDTO": {
      "type": "object",
      "properties": {
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "workTime": {
          "type": "string"
        },
        "woSort": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "canBeSelected": {
          "type": "boolean"
        },
        "sum": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "bundleWoIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Business.Modules.Export.DuplicatedExportResult": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string"
        },
        "requestStatus": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Reactive.ReactiveWoDeclineInfoViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "proposalNum": {
          "type": "string"
        },
        "proposalAmount": {
          "format": "double",
          "type": "number"
        },
        "repairOrReplace": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "subReason": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Moon.Web.ViewModels.TargetItemModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "targetId": {
          "type": "string"
        },
        "chargeCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "isIncurred": {
          "type": "boolean"
        },
        "otherName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "isCapex": {
          "type": "boolean"
        },
        "unitCost": {
          "format": "double",
          "type": "number"
        },
        "version": {
          "type": "string"
        },
        "solution1Id": {
          "format": "int32",
          "type": "integer"
        },
        "solution2Id": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionName": {
          "type": "string"
        },
        "isApplyingFee": {
          "type": "boolean"
        },
        "isCreatedByContractTemplate": {
          "type": "boolean"
        },
        "serviceCombo": {
          "type": "string"
        },
        "trpLineItemWoId": {
          "type": "string"
        },
        "templateType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.WOReactiveAttemptViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "isCallStore": {
          "type": "boolean"
        },
        "storeContact": {
          "type": "string"
        },
        "isCallLandlord": {
          "type": "boolean"
        },
        "landlordContact": {
          "type": "string"
        },
        "isMail": {
          "type": "boolean"
        },
        "mailNumber": {
          "type": "string"
        },
        "isEmail": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "isFax": {
          "type": "boolean"
        },
        "fax": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "storeContactName": {
          "type": "string"
        },
        "landlordContactName": {
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "createUserFullName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ReactiveWoOpenStatusAgingStatusModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "woCount": {
          "format": "int32",
          "type": "integer"
        },
        "allDays": {
          "format": "int64",
          "type": "integer"
        },
        "dayTypeCountOne": {
          "format": "int64",
          "type": "integer"
        },
        "dayTypeCountTwo": {
          "format": "int64",
          "type": "integer"
        },
        "dayTypeCountThree": {
          "format": "int64",
          "type": "integer"
        },
        "dayTypeCountFour": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.GLcodeInfo": {
      "type": "object",
      "properties": {
        "gLcode": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "wbsNumberEntity": {
          "$ref": "#/definitions/M2.Entity.KeyValueModel"
        }
      }
    },
    "Moon.Web.ViewModels.TargetModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "targetNum": {
          "type": "string"
        },
        "targetDate": {
          "format": "date-time",
          "type": "string"
        },
        "targetText": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "isLaborMaterialPricing": {
          "type": "boolean"
        },
        "isLaborMaterialPricingString": {
          "type": "string",
          "readOnly": true
        },
        "issueDate": {
          "format": "date-time",
          "type": "string"
        },
        "checkNum": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "submitBy": {
          "type": "string"
        },
        "declineUser": {
          "type": "string"
        },
        "declineDate": {
          "format": "date-time",
          "type": "string"
        },
        "declineNotes": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyBy": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "subCost": {
          "format": "double",
          "type": "number"
        },
        "subDate": {
          "format": "date-time",
          "type": "string"
        },
        "subNum": {
          "type": "string"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "isPermitRequired": {
          "format": "int32",
          "type": "integer"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "paymentMethod": {
          "$ref": "#/definitions/M2.Entity.Module.Data.DataPayment.DataPaymentMethodEntity"
        },
        "checkList": {
          "$ref": "#/definitions/M2.Entity.Module.WorkOrder.ReactiveWo.SmsInvoiceCheckList"
        },
        "approveUser": {
          "type": "string"
        },
        "approveDate": {
          "format": "date-time",
          "type": "string"
        },
        "preApproveUser": {
          "type": "string"
        },
        "preApproveDate": {
          "format": "date-time",
          "type": "string"
        },
        "preApproveNotes": {
          "type": "string"
        },
        "clientApproveNotes": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "isVerbalApproval": {
          "type": "boolean"
        },
        "verbalApprovalUserId": {
          "type": "string"
        },
        "verbalApprovalUser": {
          "type": "string"
        },
        "verbalApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "isNoServiceFee": {
          "type": "boolean"
        },
        "serviceFeeRate": {
          "format": "double",
          "type": "number"
        },
        "platformFeeRate": {
          "format": "double",
          "type": "number"
        },
        "invoiceConfig": {
          "$ref": "#/definitions/M2.Entity.InvoiceModelConfig"
        },
        "createUserTypeId": {
          "type": "string"
        },
        "isFixedServiceFee": {
          "type": "boolean"
        },
        "isFixedPlatformFee": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "glDescription": {
          "type": "string"
        },
        "glCodeId": {
          "type": "string"
        },
        "isGLCodeConfiged": {
          "type": "boolean"
        },
        "assetFullName": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.ViewModels.TargetItemModel"
          }
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "resolutionCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeName": {
          "type": "string"
        },
        "resolutionCodeDescription": {
          "type": "string"
        },
        "templateType": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceTemplateId": {
          "type": "string"
        },
        "templateTypeName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "needShowBidDueDate": {
          "type": "boolean"
        },
        "bidDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "isBlindQuote": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Data.DataPayment.DataPaymentMethodEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.WorkOrder.ReactiveWo.SmsInvoiceCheckList": {
      "type": "object",
      "properties": {
        "containFirstPersonPronouns": {
          "type": "boolean"
        },
        "isMarginCorrect": {
          "type": "boolean"
        },
        "containTax": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.LocationComplexInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isChecked": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.IssuesUpdateModel": {
      "type": "object",
      "properties": {
        "reasonCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Identity.ICurrentUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "readOnly": true
        },
        "coveredUserId": {
          "type": "string",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        },
        "fullName": {
          "type": "string",
          "readOnly": true
        },
        "refId": {
          "type": "string",
          "readOnly": true
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "roleIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "resources": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "businessUnits": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "departments": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "abFeatures": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "areaRole": {
          "type": "string",
          "readOnly": true
        },
        "district": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "timeZone": {
          "type": "object",
          "readOnly": true
        },
        "isMobileLogIn": {
          "type": "boolean",
          "readOnly": true
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.WoNotesEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "problemDescription": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "chargeBackReason": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.ReactiveWoChangeStatusViewModel": {
      "required": [
        "woId",
        "status",
        "version"
      ],
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            -1
          ],
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "resolvedWithoutInvoiceReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "returnTripNeededReasonId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.DTO.ScheduleTimeRequestQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "woClientId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "reDispatch": {
          "type": "boolean"
        },
        "bundleDataDirection": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.ClientServiceCodeWOTypeQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.WOGLCodeEntity": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "tempGLCode": {
          "type": "string"
        },
        "woServcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "woClientId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "capitalType": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "servcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "wbsNumber": {
          "type": "string"
        },
        "wbsDescription": {
          "type": "string"
        },
        "parts": {
          "type": "string"
        },
        "labor": {
          "type": "string"
        },
        "freight": {
          "type": "string"
        },
        "equipment": {
          "type": "string"
        },
        "managementFee": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "secondaryCode": {
          "type": "string"
        },
        "secondaryCodeDescription": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AssetPartQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "equipmentType": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "manufacturerProviderNum": {
          "type": "string"
        },
        "modelNum": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "installationDate": {
          "format": "date-time",
          "type": "string"
        },
        "warrantyCoverage": {
          "format": "float",
          "type": "number"
        },
        "warrantyEffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Invoice.InvoiceSplitModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceId": {
          "format": "int32",
          "type": "integer"
        },
        "isInvoiceSplit": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "invoiceSplitDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Invoice.InvoiceSplitDetail"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Invoice.InvoiceSplitDetail": {
      "type": "object",
      "properties": {
        "glCode": {
          "type": "string"
        },
        "invoiceSplitType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "percentCost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.Module.Invoice.InvoiceSplitQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "woReactiveId": {
          "type": "string"
        },
        "invoiceId": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Invoice.InvoiceSplitGLCodeInfoEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceSplitType": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceId": {
          "format": "int32",
          "type": "integer"
        },
        "glCodeValue": {
          "type": "string"
        },
        "invoiceSplitPercentRate": {
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "System.Threading.Tasks.Task[System.Web.Mvc.EmptyResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/System.Web.Mvc.EmptyResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.PCDA.PcdaPermissionViewModel": {
      "type": "object",
      "properties": {
        "pcdaPackageId": {
          "format": "int32",
          "type": "integer"
        },
        "canDoPcdaAction": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.DispatchModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "acceptOrDecline": {
          "type": "boolean"
        },
        "acceptOrDeclineBy": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "sum": {
          "type": "string"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "technician": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "sendEmail": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sendPhone": {
          "type": "string"
        },
        "dispatchReason": {
          "type": "string"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "worktime": {
          "type": "string"
        },
        "wosort": {
          "type": "string"
        },
        "scheduleV32": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleV32WebRequestDto"
          }
        },
        "isRedispatch": {
          "type": "boolean"
        },
        "isAutoDispatch": {
          "type": "boolean"
        },
        "isOvertimeApproved": {
          "type": "boolean"
        },
        "tradeCoverageRank": {
          "format": "int32",
          "type": "integer"
        },
        "dispatchSource": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "alignmentType": {
          "format": "int32",
          "type": "integer"
        },
        "alignmentTypeRank": {
          "format": "int32",
          "type": "integer"
        },
        "recommendReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "dbReactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "updatedReactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "oldReactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "tradeId": {
          "format": "int32",
          "type": "integer"
        },
        "autoScheduleModel": {
          "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
        },
        "isProCareBundleWo": {
          "type": "boolean"
        },
        "isSmartReply": {
          "type": "boolean"
        },
        "smartReplyOptionId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            100,
            101,
            102,
            103,
            104,
            105,
            106
          ],
          "type": "integer"
        },
        "smartReplyEventLogType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            17,
            18,
            19,
            20
          ],
          "type": "integer"
        },
        "originWoTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.AffiliaitesForAutomaticDispatchQueryModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "isWarranty": {
          "type": "boolean"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dbaName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "serviceStates": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "tin": {
          "type": "string"
        },
        "entityTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "stateRegistered": {
          "type": "string"
        },
        "webSite": {
          "type": "string"
        },
        "paymentTermsId": {
          "format": "int32",
          "type": "integer"
        },
        "isCommEmail": {
          "type": "boolean"
        },
        "isCommFax": {
          "type": "boolean"
        },
        "isCommPDF": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classification": {
          "type": "string"
        },
        "classifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSourcing": {
          "type": "boolean"
        },
        "isSameBusinessAddr": {
          "type": "boolean"
        },
        "contactPhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "businessAddressState": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "mobileCode": {
          "type": "string"
        },
        "excludeAffiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dispatcherEmail": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "isReceiveMessage": {
          "type": "boolean"
        },
        "isInHouse": {
          "type": "boolean"
        },
        "serviceRegion": {
          "type": "string"
        },
        "serviceZipcode": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "affiliateCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchAllServiceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationId": {
          "type": "string"
        },
        "complianceManager": {
          "type": "string"
        },
        "complianceManagerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "insuranceSpecialist": {
          "type": "string"
        },
        "marketManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "complianceManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "insuranceSpecialistId": {
          "format": "int32",
          "type": "integer"
        },
        "achDesignation": {
          "format": "int32",
          "type": "integer"
        },
        "contactName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "insuranceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "expired": {
          "type": "boolean"
        },
        "includeExpiring30": {
          "type": "boolean"
        },
        "includeExpiring60": {
          "type": "boolean"
        },
        "includeExpiring90": {
          "type": "boolean"
        },
        "isAutoConfirmSnowAlerts": {
          "type": "boolean"
        },
        "compliant": {
          "type": "string"
        },
        "checkReleased": {
          "type": "string"
        },
        "authorizedDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchFromDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "traingSessionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractName": {
          "type": "string"
        },
        "contractStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractExpiredDate": {
          "format": "date-time",
          "type": "string"
        },
        "businessUnitId": {
          "type": "string"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isCompletedServices": {
          "type": "boolean"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractClientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractClientTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "contractServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "channelId": {
          "format": "int32",
          "type": "integer"
        },
        "countryId": {
          "format": "int32",
          "type": "integer"
        },
        "groupByKey": {
          "type": "string"
        },
        "hasSecurityId": {
          "type": "boolean"
        },
        "scoreCardStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoreCardEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "tradeId": {
          "format": "int32",
          "type": "integer"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woZipCode": {
          "type": "string"
        },
        "soSVerificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "marketManagerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "resaleCertificatesVersion": {
          "type": "string"
        },
        "excludedResaleCertificatesVersion": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.PagerResult": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Reactive.ReactiveWoListViewModel"
          }
        },
        "totalItemCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.ReactiveWoViewModel": {
      "type": "object",
      "properties": {
        "currentStatusTimeSpan": {
          "type": "string"
        },
        "isProposalPreApproved": {
          "type": "boolean"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isMaintenanceHold": {
          "type": "boolean"
        },
        "houseOwnerStatus": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "assetName": {
          "type": "string"
        },
        "partName": {
          "type": "string"
        },
        "inHouseFlagStatus": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "criticalEventLogList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.CriticalEventViewModel"
          }
        },
        "helperTechnicianNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "helperTechnicianIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scheduleStartLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTimeLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "scheduleStartUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTimezone": {
          "type": "string"
        },
        "completeTimezone": {
          "type": "string"
        },
        "locationCurrentTime": {
          "format": "date-time",
          "type": "string"
        },
        "mainAreasList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
          }
        },
        "subAreasList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
          }
        },
        "wbsNumberList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.KeyValueModel"
          }
        },
        "wbsNumberEntity": {
          "$ref": "#/definitions/M2.Entity.KeyValueModel"
        },
        "chargeBackReason": {
          "type": "string"
        },
        "chargeBackAmount": {
          "format": "double",
          "type": "number"
        },
        "contact": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoContactEntity"
        },
        "isEditWoDetial": {
          "type": "boolean"
        },
        "isServiceRequest": {
          "type": "boolean"
        },
        "isCreateUser": {
          "type": "boolean"
        },
        "independentOperaterGLCode": {
          "type": "string"
        },
        "customerGLCode": {
          "type": "string"
        },
        "isPreServiceConfirmation": {
          "type": "boolean"
        },
        "isPreServiceConfirmationYes": {
          "type": "boolean"
        },
        "clientPrioritySetting": {
          "$ref": "#/definitions/M2.Entity.ClientPrioritySettingModel"
        },
        "hide": {
          "type": "string"
        },
        "caller": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "callerPositionId": {
          "format": "int32",
          "type": "integer"
        },
        "callPhone": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "problemDescription": {
          "type": "string"
        },
        "dispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "dispatchUserId": {
          "type": "string"
        },
        "dispatchUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "acceptOrDecline": {
          "format": "int32",
          "type": "integer"
        },
        "acceptOrDeclineBy": {
          "type": "string"
        },
        "acceptOrDeclineTime": {
          "format": "date-time",
          "type": "string"
        },
        "purchaseNum": {
          "type": "string"
        },
        "isIssues": {
          "type": "boolean"
        },
        "issuesDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "woAge": {
          "format": "int32",
          "type": "integer"
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "paymentMethodId": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "taskId": {
          "type": "string"
        },
        "isLandlordProcess": {
          "type": "boolean"
        },
        "invoiceApproveTime": {
          "format": "date-time",
          "type": "string"
        },
        "timeToDispute": {
          "format": "int32",
          "type": "integer"
        },
        "callerPosition": {
          "$ref": "#/definitions/M2.Entity.DataCallerPositionEntity"
        },
        "paymentMethod": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "timeToRespond": {
          "format": "int32",
          "type": "integer"
        },
        "timeToArrive": {
          "format": "int32",
          "type": "integer"
        },
        "assigneeId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "dayRems": {
          "format": "int32",
          "type": "integer"
        },
        "hoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "comments": {
          "type": "string"
        },
        "maintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "previousMaintenanceRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "pendingDispatchApproval": {
          "type": "string"
        },
        "attachmentCount": {
          "format": "int32",
          "type": "integer"
        },
        "roomName": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isTurn": {
          "type": "boolean"
        },
        "isDispatchApproval": {
          "type": "boolean"
        },
        "firstAssetThumbnailUrl": {
          "type": "string"
        },
        "affiliatePhone": {
          "type": "string"
        },
        "ageDays": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "callSource": {
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        },
        "assetSerialNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "assetUrl": {
          "type": "string"
        },
        "departmentName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "invoiceDetails": {
          "type": "string"
        },
        "timeToComplete": {
          "format": "int32",
          "type": "integer"
        },
        "invoiceApprovalHours": {
          "format": "int32",
          "type": "integer"
        },
        "tempGLCode": {
          "type": "string"
        },
        "purchaseOrderNumber": {
          "type": "string"
        },
        "wbsNumber": {
          "type": "string"
        },
        "poStatus": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalFlag": {
          "format": "int32",
          "type": "integer"
        },
        "pcdaReasonStatus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "isAutoSchedule": {
          "type": "boolean"
        },
        "invoicedTime": {
          "format": "date-time",
          "type": "string"
        },
        "isScheduleWorkOrderViaSO": {
          "type": "boolean"
        },
        "preDispatchRouteId": {
          "format": "int32",
          "type": "integer"
        },
        "statusAge": {
          "type": "string",
          "readOnly": true
        },
        "helperTechnicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.HelperTechnicianId"
          }
        },
        "isQuoteApproved": {
          "type": "boolean"
        },
        "projectId": {
          "type": "string"
        },
        "projectTaskId": {
          "type": "string"
        },
        "specialBillingId": {
          "format": "int32",
          "type": "integer"
        },
        "specialBillingIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              76,
              108,
              109,
              110,
              112,
              113,
              114,
              115,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              148,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              173,
              174,
              192,
              193,
              244,
              245,
              246,
              252,
              253,
              254,
              255,
              275,
              276,
              277,
              278,
              284,
              285,
              287,
              289,
              342,
              350,
              351,
              352,
              453,
              456,
              504,
              508,
              510,
              511,
              526,
              530,
              532,
              533
            ],
            "type": "integer"
          }
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.WoReactiveAttributeEntity"
        },
        "missedScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "woCountDownTime": {
          "$ref": "#/definitions/M2.Entity.WoCountDownTime"
        },
        "canOnTheWay": {
          "type": "boolean",
          "readOnly": true
        },
        "isOnSite": {
          "type": "boolean",
          "readOnly": true
        },
        "canDispute": {
          "type": "boolean"
        },
        "isShownDispute": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "escalateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "unScheduleDateReason": {
          "type": "string"
        },
        "isUrgent": {
          "type": "boolean"
        },
        "currentUserRoles": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "latitude": {
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "type": "number"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "callTimeForZipCode": {
          "format": "date-time",
          "type": "string"
        },
        "initialVendorInvoiceReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "issuesReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ReactiveWoIssuesReasonModel"
          }
        },
        "priorityHasValue": {
          "type": "boolean"
        },
        "affiliatePriority": {
          "$ref": "#/definitions/M2.Entity.AffiliatePrioritySettingEntity"
        },
        "isAllowActiveChargeBack": {
          "type": "boolean"
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestDueDateLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.CriticalEventViewModel": {
      "type": "object",
      "properties": {
        "isTurnOn": {
          "type": "boolean"
        },
        "avatarUri": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Reactive.LocationAttributesViewModel": {
      "type": "object",
      "properties": {
        "hasResident": {
          "type": "boolean"
        },
        "moveInDate": {
          "type": "string"
        },
        "gateCode": {
          "type": "string"
        },
        "leaseRemaining": {
          "type": "string"
        },
        "leaseEndDate": {
          "type": "string"
        },
        "leaseStartDate": {
          "type": "string"
        },
        "yearBuilt": {
          "format": "date-time",
          "type": "string"
        },
        "ownerShip": {
          "type": "string"
        },
        "isHOA": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationLandscapingEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "isTurf": {
          "type": "boolean"
        },
        "isIrrigation": {
          "type": "boolean"
        },
        "landscapingSize": {
          "format": "float",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationFloorCareEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "floorType": {
          "type": "string"
        },
        "vctsqtf": {
          "type": "string"
        },
        "carpetsqft": {
          "type": "string"
        },
        "concretesqft": {
          "type": "string"
        },
        "frequency": {
          "type": "string"
        },
        "restrooms": {
          "format": "int32",
          "type": "integer"
        },
        "truckDay": {
          "type": "string"
        },
        "pm": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.IvrLogModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "woStatus": {
          "format": "int32",
          "type": "integer"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "ivrType": {
          "format": "int32",
          "type": "integer"
        },
        "platform": {
          "format": "int32",
          "type": "integer"
        },
        "ivrTime": {
          "format": "date-time",
          "type": "string"
        },
        "ivrTimeUTC": {
          "format": "date-time",
          "type": "string"
        },
        "ivrLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "localTimezone": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "scheduleStartTimezone": {
          "type": "string"
        },
        "scheduleEndTimezone": {
          "type": "string"
        },
        "callerPhoneNum": {
          "type": "string"
        },
        "woPreStatus": {
          "format": "int32",
          "type": "integer"
        },
        "voicePath": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "helperTechnicianIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technician": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "sequentialNumber": {
          "format": "int32",
          "type": "integer"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RescheduleLogEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "rescheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "rescheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "rescheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "changeTime": {
          "format": "date-time",
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "reason": {
          "format": "int32",
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "taskId": {
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.OvwOutput": {
      "type": "object",
      "properties": {
        "openDays": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "visitCount": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "watchers": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "isUserWatched": {
          "type": "boolean",
          "readOnly": true
        },
        "monthlyVisitCount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple[System.DateTime,System.Int32]"
          },
          "readOnly": true
        }
      }
    },
    "Moon.Web.Client.Models.AssignOptionsOutput": {
      "type": "object",
      "properties": {
        "isAssignToMe": {
          "type": "boolean",
          "readOnly": true
        },
        "canCancel": {
          "type": "boolean",
          "readOnly": true
        },
        "canAssignSeniorManager": {
          "type": "boolean",
          "readOnly": true
        },
        "canAssignJuniorManager": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "M2.Entity.WoAssignHistoryEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "assignToRoleId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "assignToRole": {
          "$ref": "#/definitions/M2.Entity.RoleEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.ReactiveWoDataInfo": {
      "type": "object",
      "properties": {
        "woStatusesData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
          }
        },
        "getServiceCategoryData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
          }
        },
        "getWoTypeData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "getPriorityData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
          }
        },
        "getCustomerWoStatusData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
          }
        },
        "districtsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "getAllStateAbbrdata": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "advanceSearchAllWoType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
          }
        },
        "allOwnership": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confirmStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "mainAreasList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataAreasMappingEntity"
          }
        },
        "communityData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allOrigin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "getClassificationData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataClassificationEntity"
          }
        },
        "woLabelData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Label.Core.Entity.LabelEntity"
          }
        },
        "serviceRequestCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Infrastructure.IdNameQueryResult"
          }
        },
        "currentLocationId": {
          "type": "string"
        }
      }
    },
    "Moon.Label.Core.Entity.LabelEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.ProposalHistoryEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "proposalNum": {
          "type": "string"
        },
        "proposalDate": {
          "format": "date-time",
          "type": "string"
        },
        "proposalText": {
          "type": "string"
        },
        "approveUserId": {
          "type": "string"
        },
        "approveTime": {
          "format": "date-time",
          "type": "string"
        },
        "approveNotes": {
          "type": "string"
        },
        "declineUserId": {
          "type": "string"
        },
        "declineDate": {
          "format": "date-time",
          "type": "string"
        },
        "declineNotes": {
          "type": "string"
        },
        "declineReasonId": {
          "format": "int32",
          "type": "integer"
        },
        "declineReasonIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "submitUserId": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "archiveUserId": {
          "type": "string"
        },
        "archiveTime": {
          "format": "date-time",
          "type": "string"
        },
        "isValid": {
          "type": "boolean"
        },
        "modifyUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "submitUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "declineUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProposalItem"
          }
        },
        "isApprove": {
          "type": "boolean"
        },
        "operatorUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "operatorUserId": {
          "type": "string"
        },
        "isLaborMaterialPricing": {
          "type": "boolean"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "isPermitRequired": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "resolutionCodeName": {
          "type": "string"
        },
        "resolutionCodeDescription": {
          "type": "string"
        },
        "isBlindQuote": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProposalItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "chargeCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "resolutionName": {
          "type": "string"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "unitCost": {
          "format": "double",
          "type": "number"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "isIncurred": {
          "type": "boolean"
        },
        "otherName": {
          "type": "string"
        },
        "archiveUserId": {
          "type": "string"
        },
        "archiveTime": {
          "format": "date-time",
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceHistoryEntity": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "batchInvoiceNum": {
          "type": "string"
        },
        "invoiceNum": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "checkNum": {
          "type": "string"
        },
        "issueDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "subAffiliateCost": {
          "format": "double",
          "type": "number"
        },
        "subInvoiceNum": {
          "type": "string"
        },
        "subInvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "purposeId": {
          "format": "int32",
          "type": "integer"
        },
        "isNoServiceFee": {
          "type": "boolean"
        },
        "approveUserId": {
          "type": "string"
        },
        "approveTime": {
          "format": "date-time",
          "type": "string"
        },
        "approveNotes": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "archiveUserId": {
          "type": "string"
        },
        "archiveTime": {
          "format": "date-time",
          "type": "string"
        },
        "submitUserId": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.InvoiceHistoryItemEntity"
          }
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "approveUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "submitUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "purpose": {
          "$ref": "#/definitions/M2.Entity.DataPurposeEntity"
        },
        "isPermitRequired": {
          "format": "int32",
          "type": "integer"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceHistoryItemEntity": {
      "type": "object",
      "properties": {
        "chargeCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "isCapex": {
          "type": "boolean"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "unitCost": {
          "format": "double",
          "type": "number"
        },
        "taxRate": {
          "format": "double",
          "type": "number"
        },
        "otherName": {
          "type": "string"
        },
        "resolutionName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "chargeCategory": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InvoiceBaseLineItemEntity": {
      "type": "object",
      "properties": {
        "chargeCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "qty": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "double",
          "type": "number"
        },
        "isIncurred": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UpdateWoLockModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "technicianName": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleStartDate": {
          "type": "string"
        },
        "scheduleEndDate": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.TechnicianInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.WorkOrderStatusConst": {
      "type": "object",
      "properties": {}
    },
    "M2.Entity.ExportResult": {
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "fileUrl": {
          "type": "string"
        },
        "requestNum": {
          "type": "string"
        },
        "dataCount": {
          "format": "int64",
          "type": "integer"
        },
        "sendEmail": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.WoBaseInfoForIMViewModel": {
      "type": "object",
      "properties": {
        "ownerId": {
          "format": "int32",
          "type": "integer"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ReactiveWoApiRepo.WoBundleProCareQueryModel": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ReactiveWoApiRepo.WoBundleProCareResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isProject": {
          "type": "boolean"
        },
        "servcieCombination": {
          "type": "string"
        },
        "isDetach": {
          "type": "boolean"
        }
      }
    },
    "System.Threading.Tasks.Task[Moon.WebService.Client.GLCodeQueryResult]": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/Moon.WebService.Client.GLCodeQueryResult",
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.GLCodeQueryResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "capitalType": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "servcieCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "wbsNumber": {
          "type": "string"
        },
        "wbsDescription": {
          "type": "string"
        },
        "parts": {
          "type": "string"
        },
        "labor": {
          "type": "string"
        },
        "freight": {
          "type": "string"
        },
        "equipment": {
          "type": "string"
        },
        "managementFee": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Infrastructure.DataKeyValueQueryResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ReactiveWoApiRepo.RecentMoveInWoQueryModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "primaryResidentId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ResidentReactiveWoQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isHighRisk": {
          "type": "boolean"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "endDispatchTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "residentialOwnership": {
          "type": "string"
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "beginMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "endMoveInTime": {
          "format": "date-time",
          "type": "string"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.RetailReactiveWoQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "referWoNum": {
          "type": "string"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "confirmTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "customerWoStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isOnSiteProposal": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        }
      }
    },
    "Moon.Label.Core.Entity.WoLabelEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "labelId": {
          "format": "int32",
          "type": "integer"
        },
        "labelName": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Label.Core.Model.LabelPermissionModel": {
      "type": "object",
      "properties": {
        "labelId": {
          "format": "int32",
          "type": "integer"
        },
        "labelName": {
          "type": "string"
        },
        "permissions": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            9
          ],
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        },
        "isMarked": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ReactiveWOCallModel": {
      "type": "object",
      "properties": {
        "callName": {
          "type": "string"
        },
        "callPhone": {
          "type": "string"
        },
        "callEmail": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SmartQ.AttachmentRequestModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "callName": {
          "type": "string"
        },
        "callPhone": {
          "type": "string"
        },
        "textPrompt": {
          "type": "string"
        },
        "callEmail": {
          "type": "string"
        },
        "isSendTextMessage": {
          "type": "boolean"
        },
        "isSendEmail": {
          "type": "boolean"
        },
        "isAutomaticPush": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.RecurrentWoListViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.RecurrentWoListViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.RecurrentWoListViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "woCategoryName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationID": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "serviceRating": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "customerWoStatusName": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.WoDataInfo": {
      "type": "object",
      "properties": {
        "getServiceCategoryData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
          }
        },
        "districtsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regionsData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "getCustomerWoStatusData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
          }
        },
        "getWoStatusData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
          }
        },
        "getOwnershipData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allOrigin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "getAllStateAbbrdata": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "getConfirmTypeData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataConfirmTypeEntity"
          }
        },
        "getClassificationData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataClassificationEntity"
          }
        },
        "woLabelData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Label.Core.Entity.LabelEntity"
          }
        }
      }
    },
    "Moon.Web.Client.Models.RecurrentWoViewModel": {
      "type": "object",
      "properties": {
        "scheduleLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeUTCTime": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "scheduleEndTimezone": {
          "type": "string"
        },
        "completeTimezone": {
          "type": "string"
        },
        "locationCurrentTime": {
          "format": "date-time",
          "type": "string"
        },
        "customerPrice": {
          "format": "double",
          "type": "number"
        },
        "isResidentDamage": {
          "type": "boolean"
        },
        "isClientFiscalMonthAbModuleConfiged": {
          "type": "boolean"
        },
        "clientFiscalMonth": {
          "$ref": "#/definitions/M2.Entity.ClientFiscalMonthEntity"
        },
        "isPreServiceConfirmation": {
          "type": "boolean"
        },
        "isPreServiceConfirmationYes": {
          "type": "boolean"
        },
        "isHighPriority": {
          "type": "boolean"
        },
        "woAge": {
          "format": "int32",
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "assigneeId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "locationPriorityId": {
          "format": "int32",
          "type": "integer"
        },
        "beginCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateMonth": {
          "format": "date-time",
          "type": "string"
        },
        "firstAssetThumbnailUrl": {
          "type": "string"
        },
        "woStatusName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "woCategoryName": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "assetSerialNum": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "invoiceTotal": {
          "format": "double",
          "type": "number"
        },
        "assetUrl": {
          "type": "string"
        },
        "departmentName": {
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "locationAssignedAffiliate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.KeyValueModel"
          }
        },
        "locationServiceTypeAffiliateId": {
          "type": "string"
        },
        "primaryAffiliateId": {
          "type": "string"
        },
        "secondaryAffiliateId": {
          "type": "string"
        },
        "tertiaryAffiliateId": {
          "type": "string"
        },
        "affiliateCost": {
          "format": "double",
          "type": "number"
        },
        "purchaseNum": {
          "type": "string"
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.WoRecurrentAttributeEntity"
        },
        "canOnTheWay": {
          "type": "boolean",
          "readOnly": true
        },
        "clientFiscalMonthEntity": {
          "$ref": "#/definitions/M2.Entity.ClientFiscalMonthEntity"
        },
        "isEHS": {
          "type": "boolean"
        },
        "isLOBChargeBack": {
          "type": "boolean"
        },
        "affiliatePriority": {
          "$ref": "#/definitions/M2.Entity.AffiliatePrioritySettingEntity"
        },
        "isAllowActiveChargeBack": {
          "type": "boolean"
        },
        "affiliateJobOrderNum": {
          "type": "string"
        },
        "callId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleUserId": {
          "type": "string"
        },
        "scheduleByTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmationStatus": {
          "type": "string"
        },
        "confirmationRating": {
          "format": "int32",
          "type": "integer"
        },
        "visitLog": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInBy": {
          "type": "string"
        },
        "checkOutBy": {
          "type": "string"
        },
        "checkProStatus": {
          "format": "int32",
          "type": "integer"
        },
        "referWONum": {
          "type": "string"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "glCode": {
          "type": "string"
        },
        "sapglCode": {
          "type": "string"
        },
        "woClientId": {
          "format": "int64",
          "type": "integer"
        },
        "serviceRating": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woServiceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isCriticalEvent": {
          "type": "boolean"
        },
        "isCriticalEventDisabled": {
          "type": "boolean"
        },
        "isOpenStatus": {
          "type": "boolean"
        },
        "isByAutoSchedule": {
          "type": "boolean"
        },
        "assignTo": {
          "format": "int64",
          "type": "integer"
        },
        "photoActionStatus": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime2": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime3": {
          "format": "date-time",
          "type": "string"
        },
        "oldScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkInOpertionTime": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "byPassComplianceId": {
          "format": "int32",
          "type": "integer"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationResidentialId": {
          "format": "int64",
          "type": "integer"
        },
        "instruction": {
          "type": "string"
        },
        "sourceOfWOId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDuration": {
          "format": "int32",
          "type": "integer"
        },
        "completionAge": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceAge": {
          "format": "int32",
          "type": "integer"
        },
        "isAccessedByMobile": {
          "type": "boolean"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "addtionalDetail": {
          "type": "string"
        },
        "leaveNote": {
          "type": "string"
        },
        "invoiceText": {
          "type": "string"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "woCategory": {
          "$ref": "#/definitions/M2.Entity.DataWOCategoryEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "technicianHelpers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        },
        "byPassCompliance": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "sourceOfWO": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "asset": {
          "$ref": "#/definitions/M2.Entity.AssetEntity"
        },
        "assetPart": {
          "$ref": "#/definitions/M2.Entity.AssetPartEntity"
        },
        "priority": {
          "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
        },
        "responsibleEntityId": {
          "format": "int32",
          "type": "integer"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "responsibleEntity": {
          "$ref": "#/definitions/M2.Entity.DataLocationResponsibleEntity"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "clientPayStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isPersonal": {
          "type": "boolean"
        },
        "requestUserId": {
          "type": "string"
        },
        "accesccInformation": {
          "type": "string"
        },
        "isFreeCharging": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean",
          "readOnly": true
        },
        "primaryOM": {
          "$ref": "#/definitions/M2.Entity.LocationProjectManagerEntity"
        },
        "technicianScheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianHoursSinceScheduled": {
          "format": "double",
          "type": "number"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "isSnow": {
          "type": "boolean"
        },
        "isRefund": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "isOverrideSID": {
          "type": "boolean"
        },
        "isPassThrough": {
          "type": "boolean"
        },
        "woCommentsReasonList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataSysEnumEntity"
          }
        },
        "multipleSelectRatingReasonNotesModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.IdNameModel[System.String]"
          }
        },
        "isJPMCServiceConfirm": {
          "type": "boolean"
        },
        "smsProposalTotal": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.OvwInfo": {
      "type": "object",
      "properties": {
        "openDays": {
          "format": "int32",
          "type": "integer"
        },
        "visitCount": {
          "format": "int64",
          "type": "integer"
        },
        "watchers": {
          "format": "int64",
          "type": "integer"
        },
        "isUserWatched": {
          "type": "boolean"
        },
        "monthlyVisitCount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Tuple[System.DateTime,System.Int32]"
          }
        }
      }
    },
    "M2.Business.RegionScriptInput": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "sourceData": {
          "$ref": "#/definitions/M2.Business.RegionalScriptingSourceData"
        },
        "eventLogReferenceType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            78,
            79,
            80,
            81
          ],
          "type": "integer"
        }
      }
    },
    "M2.Business.RegionalScriptingSourceData": {
      "type": "object",
      "properties": {
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.TurnDashboardQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "projectNum": {
          "type": "string"
        },
        "propertyNum": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "marketIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnProjectTypeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnRehabCapitalProjectStatus": {
          "format": "int32",
          "type": "integer"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "turnRehabCapitalProjectStatusList": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.ServiceCatetoryAndRegion": {
      "type": "object",
      "properties": {
        "serviceCategoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
          }
        },
        "regionsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.RequestWOListClientQueryModel": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "radStatusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAssigneeToMe": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "district": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "serviceRequestCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.AutoScheduleWoQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.IsAutoScheduleModel": {
      "type": "object",
      "properties": {
        "isAutoSchedule": {
          "type": "boolean"
        },
        "isAutoScheduleServiceRegion": {
          "type": "boolean"
        },
        "isByVisitDriven": {
          "type": "boolean"
        },
        "isAutoSchedulePriority": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RequestWoAffiliateAndTechnician": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "technicianList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.UserModel"
          }
        }
      }
    },
    "M2.Entity.RequestWOQueryModel": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "originalRefId": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "originalRefType": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "additionalDetail": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDoToday": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RequestWOResultModel": {
      "type": "object",
      "properties": {
        "requestWO": {
          "$ref": "#/definitions/M2.Entity.RequestWOEntity"
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "callPhone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "locationPhone": {
          "type": "string"
        },
        "isResidential": {
          "type": "boolean"
        },
        "smsNumber": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RequestWOEntity": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "originalRefId": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "originalRefType": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "additionalDetail": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "rejectUserId": {
          "type": "string"
        },
        "rejectDate": {
          "format": "date-time",
          "type": "string"
        },
        "refNum": {
          "type": "string"
        },
        "assigneeId": {
          "format": "int64",
          "type": "integer"
        },
        "isDoToday": {
          "type": "boolean"
        },
        "latitude": {
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "type": "number"
        },
        "isFeelsLike": {
          "type": "boolean"
        },
        "isCreateNewServiceRequest": {
          "type": "boolean"
        },
        "actualTemperature": {
          "format": "double",
          "type": "number"
        },
        "apparentTemperature": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RequestWoModel": {
      "type": "object",
      "properties": {
        "affiliateRequestWoId": {
          "type": "string"
        },
        "originalrefId": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isCancel": {
          "type": "boolean"
        },
        "requestActionType": {
          "format": "int32",
          "type": "integer"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "isOriginalServiceRequest": {
          "type": "boolean"
        },
        "isNewServiceRequest": {
          "type": "boolean"
        },
        "mainAreas": {
          "type": "string"
        },
        "subAreas": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Controllers.CreateRequestWoViewModel": {
      "type": "object",
      "properties": {
        "wo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionEntity"
          }
        },
        "allServiceCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "prioritys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.DataPriorityEntity"
          }
        },
        "locationAttribute": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "woTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "timezone": {
          "type": "string"
        },
        "locationCurrentTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.RequestWOPatchModel": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "originalRefId": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "originalRefType": {
          "format": "int32",
          "type": "integer"
        },
        "woReactiveId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "assetId": {
          "type": "string"
        },
        "assetPartId": {
          "type": "string"
        },
        "additionalDetail": {
          "type": "string"
        },
        "rejectUserId": {
          "type": "string"
        },
        "rejectDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "refNum": {
          "type": "string"
        },
        "assigneeId": {
          "format": "int64",
          "type": "integer"
        },
        "isDoToday": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ResidentPreferredScheduleViewModel": {
      "type": "object",
      "properties": {
        "firstPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "firstPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "firstPreferredScheduleTime": {
          "type": "string"
        },
        "firstPreferredInSLA": {
          "type": "boolean"
        },
        "secondPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "secondPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "secondPreferredScheduleTime": {
          "type": "string"
        },
        "secondPreferredInSLA": {
          "type": "boolean"
        },
        "thirdPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "thirdPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "thirdPreferredScheduleTime": {
          "type": "string"
        },
        "thirdPreferredInSLA": {
          "type": "boolean"
        },
        "isExistSLA": {
          "type": "boolean"
        },
        "slaStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "slaEndTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.ScheduleSLATimeViewModel": {
      "type": "object",
      "properties": {
        "timeZone": {
          "type": "string"
        },
        "slaStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "slaEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "formattedSLAEndTime": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.RoleViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ClientResourceQuery": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "resourceType": {
          "format": "int32",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.RoleResourceViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "resourceType": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "parentId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ResourceQuery": {
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "resourceId": {
          "format": "int32",
          "type": "integer"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Web.Mvc.RedirectResult": {
      "type": "object",
      "properties": {
        "permanent": {
          "type": "boolean",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.DailySummaryQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.DailySummaryResultModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "locationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalMiles": {
          "format": "double",
          "type": "number"
        },
        "totalDriveTime": {
          "format": "int32",
          "type": "integer"
        },
        "assignedWoCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.ExportDailySummaryResultModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "locationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalMiles": {
          "type": "string"
        },
        "totalDriveTime": {
          "type": "string"
        },
        "assignedWoCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.LocationRegionQueryModel": {
      "type": "object",
      "properties": {
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.RegionCurrentTimeViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currentTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.TechnicianDetailQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TechnicianDetailViewModel": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "workingTime": {
          "format": "int32",
          "type": "integer"
        },
        "driveTime": {
          "format": "int32",
          "type": "integer"
        },
        "hoursAvaliable": {
          "format": "int32",
          "type": "integer"
        },
        "blockedTimeOff": {
          "format": "int32",
          "type": "integer"
        },
        "totalHours": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "totalLocations": {
          "format": "int32",
          "type": "integer"
        },
        "totalWorkOrders": {
          "format": "int32",
          "type": "integer"
        },
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "startLat": {
          "format": "double",
          "type": "number"
        },
        "startLng": {
          "format": "double",
          "type": "number"
        },
        "canRearranged": {
          "type": "boolean"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TechnicianTimeShaft.TimeShaftNode"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TechnicianTimeShaft.TimeShaftNode": {
      "type": "object",
      "properties": {
        "timePointType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "timePointName": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.TimerShaftQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TimerShaftViewModel": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TimerShaftSummaryViewModel"
        },
        "technicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TechnicianTimeShaftViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TimerShaftSummaryViewModel": {
      "type": "object",
      "properties": {
        "totalWoCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalTechnicianCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalLocationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCheckInCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCompletedCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TechnicianTimeShaftViewModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "startLat": {
          "format": "double",
          "type": "number"
        },
        "startLng": {
          "format": "double",
          "type": "number"
        },
        "canRearranged": {
          "type": "boolean"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.TechnicianTimeShaft.TimeShaftNode"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.TechnicianWorkQueryModel": {
      "type": "object",
      "properties": {
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.TechnicianWorkViewModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "isAssigned": {
          "type": "boolean"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.VisitDetailQueryModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "type": "string"
        },
        "isAassigned": {
          "type": "boolean"
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.VisitDetailViewModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "isCheckIn": {
          "type": "boolean"
        },
        "isCheckOut": {
          "type": "boolean"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "technicianFullName": {
          "type": "string"
        },
        "scheduledArrival": {
          "type": "string"
        },
        "arrivalWindow": {
          "type": "string"
        },
        "totalOnsiteTime": {
          "format": "int32",
          "type": "integer"
        },
        "technicianStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "manualIncrementalMin": {
          "format": "int32",
          "type": "integer"
        },
        "manualSubtractMins": {
          "format": "int32",
          "type": "integer"
        },
        "residents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiRepo.VisitDetailResidentResultModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.VisitDetailResidentResultModel": {
      "type": "object",
      "properties": {
        "residentName": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "isPrimaryResident": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.VisitDetailWoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "onSiteTime": {
          "format": "int32",
          "type": "integer"
        },
        "missETA": {
          "format": "int32",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.VisitEventLogViewModel": {
      "type": "object",
      "properties": {
        "createUserId": {
          "type": "string"
        },
        "createUserFullName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "roleType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiRepo.VisitUnassignedQueryModel": {
      "type": "object",
      "properties": {
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.VisitUnassignedViewModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationVisitId": {
          "format": "int32",
          "type": "integer"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "addressLine1": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "wos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarApiController.VisitUnassignedViewModel.WoViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarApiController.VisitUnassignedViewModel.WoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "missETA": {
          "type": "boolean"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "onSiteTime": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.CurrentUserRegionQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.CurrentUserRegionViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currentTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.CurrentUserRegionTechnicianQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryResultModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "locationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalMiles": {
          "format": "double",
          "type": "number"
        },
        "totalDriveTime": {
          "format": "int32",
          "type": "integer"
        },
        "assignedWoCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.DailySummaryQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.ExportDailySummaryResultModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "locationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalMiles": {
          "type": "string"
        },
        "totalDriveTime": {
          "type": "string"
        },
        "assignedWoCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.ManualIntradyOptimizationQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "summaryStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "summaryEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianTimeShaftViewModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "startLat": {
          "format": "double",
          "type": "number"
        },
        "startLng": {
          "format": "double",
          "type": "number"
        },
        "canRearranged": {
          "type": "boolean"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianTimeShaftViewModel.TimeShaftNodeViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianTimeShaftViewModel.TimeShaftNodeViewModel": {
      "type": "object",
      "properties": {
        "timePointType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "timePointName": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "System.Threading.Tasks.Task[System.Collections.Generic.Dictionary[System.String,Moon.Infrastructure.IDataZipCode]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Moon.Infrastructure.IDataZipCode"
          },
          "readOnly": true
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "exception": {
          "type": "object",
          "readOnly": true
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        },
        "isCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "isCompleted": {
          "type": "boolean",
          "readOnly": true
        },
        "creationOptions": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            64
          ],
          "type": "integer",
          "readOnly": true
        },
        "asyncState": {
          "type": "object",
          "readOnly": true
        },
        "isFaulted": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Moon.Infrastructure.IDataZipCode": {
      "type": "object",
      "properties": {
        "utc": {
          "format": "double",
          "type": "number"
        },
        "dst": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.TechnicianDetailQueryModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianDetailViewModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "workingTime": {
          "format": "int32",
          "type": "integer"
        },
        "driveTime": {
          "format": "int32",
          "type": "integer"
        },
        "totalHours": {
          "format": "int32",
          "type": "integer"
        },
        "hoursAvaliable": {
          "format": "int32",
          "type": "integer"
        },
        "blockedTimeOff": {
          "format": "int32",
          "type": "integer"
        },
        "totalLocations": {
          "format": "int32",
          "type": "integer"
        },
        "totalWorkOrders": {
          "format": "int32",
          "type": "integer"
        },
        "startLat": {
          "format": "double",
          "type": "number"
        },
        "startLng": {
          "format": "double",
          "type": "number"
        },
        "timerShaft": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.LocationPointViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.LocationPointViewModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "timePointType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "timePointTypeName": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "visitMapStatus": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.AssignedTechnicianQueryModel": {
      "type": "object",
      "properties": {
        "summaryStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "summaryEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.AssignedTechnicianResultModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "imagePath": {
          "type": "string"
        },
        "isAssigned": {
          "type": "boolean"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.TimerShaftQueryModel": {
      "type": "object",
      "properties": {
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "summaryDate": {
          "format": "date-time",
          "type": "string"
        },
        "summaryStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "summaryEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.TimerShaftViewModel": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TimerShaftSummaryViewModel"
        },
        "technicians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.TechnicianTimeShaftViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.TimerShaftSummaryViewModel": {
      "type": "object",
      "properties": {
        "totalWoCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalTechnicianCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalLocationCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCheckInCount": {
          "format": "int32",
          "type": "integer"
        },
        "totalCompletedCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.UnassignedLocationVisitQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.UnassignedLocationVisitViewModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationVisitId": {
          "format": "int32",
          "type": "integer"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "addressLine1": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "wos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiController.UnassignedLocationVisitViewModel.WoViewModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.UnassignedLocationVisitViewModel.WoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "missETA": {
          "type": "boolean"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "onSiteTime": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.VisitDetailQueryModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "isAassigned": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "classificationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classificationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.VisitDetailViewModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "isCheckIn": {
          "type": "boolean"
        },
        "isCheckOut": {
          "type": "boolean"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "technicianFullName": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "scheduledArrival": {
          "type": "string"
        },
        "arrivalWindow": {
          "type": "string"
        },
        "totalOnsiteTime": {
          "format": "int32",
          "type": "integer"
        },
        "technicianStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "manualIncrementalMin": {
          "format": "int32",
          "type": "integer"
        },
        "manualSubtractMins": {
          "format": "int32",
          "type": "integer"
        },
        "residents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ScheduleCalendarIHApiRepo.ResidentsOfVisitResultModel"
          }
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiRepo.ResidentsOfVisitResultModel": {
      "type": "object",
      "properties": {
        "residentName": {
          "type": "string"
        },
        "cellPhone": {
          "type": "string"
        },
        "isPrimaryResident": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.ScheduleCalendarIHApiController.WoOrdersViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "onSiteTime": {
          "format": "int32",
          "type": "integer"
        },
        "missETA": {
          "format": "int32",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.TechnicianViewModel": {
      "type": "object",
      "properties": {
        "technicianId": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    },
    "Mesh.SDK.ScheduleOptimization.Models.ScheduleInput": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Mesh.SDK.ScheduleOptimization.Models.RescheduleInput": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Mesh.SDK.ScheduleOptimization.Models.RescheduleConfirmInput": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.CustomExportRequestQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "displayName": {
          "type": "string"
        },
        "exportType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "colName": {
          "type": "string"
        },
        "isEssential": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UserWOExportEntity": {
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "exportType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserWOExportColsEntity": {
      "type": "object",
      "properties": {
        "userWOExportId": {
          "type": "string"
        },
        "woExportColumnId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UserWOExportQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "exportType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ],
          "type": "integer"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.UserWOExportColsQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "userWOExportId": {
          "type": "string"
        },
        "woExportColumnId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ServiceAssetQueryModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "isComplete": {
          "type": "boolean"
        },
        "locationId": {
          "type": "string"
        },
        "serviceCodeId": {
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.AssetViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "healthLevel": {
          "type": "string"
        },
        "assetName": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "modelNum": {
          "type": "string"
        },
        "serialNum": {
          "type": "string"
        },
        "belts": {
          "format": "int32",
          "type": "integer"
        },
        "beltSizeA": {
          "type": "string"
        },
        "filters": {
          "format": "int32",
          "type": "integer"
        },
        "filterSize1": {
          "type": "string"
        },
        "requestWOId": {
          "type": "string"
        },
        "equipmentType": {
          "type": "string"
        },
        "isMerged": {
          "type": "boolean"
        },
        "unitNum": {
          "type": "string"
        },
        "attachmentList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationAssetRawDataAttachmentEntity"
          }
        }
      }
    },
    "M2.Entity.LocationAssetRawDataAttachmentEntity": {
      "type": "object",
      "properties": {
        "assetRawDataId": {
          "type": "string"
        },
        "attachmentPath": {
          "type": "string"
        },
        "attachmentType": {
          "format": "int32",
          "type": "integer"
        },
        "labelName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "imageFlag": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "imageUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "pictureShootingAngle": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RequestWOListQueryModel": {
      "type": "object",
      "properties": {
        "requestNum": {
          "type": "string"
        },
        "originalNum": {
          "type": "string"
        },
        "serviceCategoryId": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "residentialWoType": {
          "format": "int32",
          "type": "integer"
        },
        "clientName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "creatorIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isAssigneeToMe": {
          "type": "boolean"
        },
        "assigneeId": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "assetRawDataId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationSummaryQueryModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetClientProjectLocationSummaryResponse": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "isSuccess": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetClientProjectLocationSummaryModel"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetClientProjectLocationSummaryModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "surveyer": {
          "format": "int32",
          "type": "integer"
        },
        "surveyerName": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "surveyNum": {
          "type": "string"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationScheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationScheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationSMSNumber": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "stateAbbr": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "questionnaireId": {
          "format": "int32",
          "type": "integer"
        },
        "timeZoneAbbr": {
          "type": "string"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "woNum": {
          "type": "string"
        },
        "woDepartmentId": {
          "format": "int32",
          "type": "integer"
        },
        "woBusinessUnit": {
          "format": "int32",
          "type": "integer"
        },
        "checkInTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "isReactiveWo": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryQueryModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "skipSize": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryResponse": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "isSuccess": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.PagedListModel[M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryModel]"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.PagedListModel[M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryModel]": {
      "type": "object",
      "properties": {
        "pageNo": {
          "format": "int32",
          "type": "integer"
        },
        "pageCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "dataCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationHistoryModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "surveyerName": {
          "type": "string"
        },
        "surveyNum": {
          "type": "string"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationScheduleTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationCompleteTime": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "utc": {
          "format": "double",
          "type": "number"
        },
        "dst": {
          "type": "string"
        },
        "timeZoneAbbr": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.ResponseBase[M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireModel]": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "isSuccess": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireModel"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireModel": {
      "type": "object",
      "properties": {
        "survey": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireSurveyModel"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireSurveyModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireSectionModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireSectionModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "areas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireAreaModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireAreaModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "heading": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionHeadingModel"
        },
        "validation": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionValidationModel"
        },
        "questionType": {
          "type": "string"
        },
        "fileLabel": {
          "type": "string"
        },
        "isRequired": {
          "type": "boolean"
        },
        "isHide": {
          "type": "boolean"
        },
        "questionAnswerOption": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionModel"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionHeadingModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionValidationModel": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "max": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionModel": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionRawModel"
          }
        },
        "cols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionColModel"
          }
        },
        "choices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionOptionChoiceModel"
          }
        },
        "partial": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionOptionPartialModel"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionRawModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionColModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "choices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionBaseChoiceModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionOptionChoiceModel": {
      "type": "object",
      "properties": {
        "excludes": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isJumpNewPage": {
          "type": "boolean"
        },
        "childrenQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionModel"
          }
        },
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "isHide": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionOptionPartialModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "addButtonName": {
          "type": "string"
        },
        "removeButtonName": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionnaireQuestionModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.QuestionOptionBaseChoiceModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "position": {
          "format": "int32",
          "type": "integer"
        },
        "isHide": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetSurveyAnswerModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetSurveyAnswerResponse": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "isSuccess": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationAnswerSheetModel"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationAnswerSheetModel": {
      "type": "object",
      "properties": {
        "questionnaireId": {
          "format": "int32",
          "type": "integer"
        },
        "answerSheetParts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationAnswerSheetPartModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.GetProjectLocationAnswerSheetPartModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "answerSyncStatus": {
          "format": "int32",
          "type": "integer"
        },
        "answerSheetId": {
          "format": "int32",
          "type": "integer"
        },
        "sectionId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "areaId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "createUserId": {
          "format": "int64",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "format": "int64",
          "type": "integer"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersModel": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "questionType": {
          "type": "string"
        },
        "rowId": {
          "type": "string"
        },
        "choiceId": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "col": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersColModel"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersAttachmentModel"
          }
        },
        "partial": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersPartialModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersColModel": {
      "type": "object",
      "properties": {
        "colId": {
          "type": "string"
        },
        "choiceId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersAttachmentModel": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersPartialModel": {
      "type": "object",
      "properties": {
        "partialId": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.AnswerSheetPartAnswersModel"
          }
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.ResponseBase[M2.Entity.Module.Survey.ServiceMeshSurvey.DataListModel[System.Int32]]": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "isSuccess": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "body": {
          "$ref": "#/definitions/M2.Entity.Module.Survey.ServiceMeshSurvey.DataListModel[System.Int32]"
        }
      }
    },
    "M2.Entity.Module.Survey.ServiceMeshSurvey.DataListModel[System.Int32]": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.ServiceRequestWOModel": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "isCreateServiceRequest": {
          "type": "boolean"
        },
        "isRootCause": {
          "type": "boolean"
        },
        "serviceDescription": {
          "type": "string"
        },
        "isCancel": {
          "type": "boolean"
        },
        "isClientPopTips": {
          "type": "boolean"
        },
        "reactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "reactiveWoContact": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoContactEntity"
        },
        "commonAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "serviceCodeAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "autoScheduleModel": {
          "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
        },
        "woAvailableTimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.WOReactiveAvailableTimeEntity"
          }
        },
        "callId": {
          "type": "string",
          "readOnly": true
        },
        "isAutoSchedule": {
          "type": "boolean"
        },
        "clientServiceRequestEntity": {
          "$ref": "#/definitions/M2.Entity.ClientServiceRequestEntity"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "reactiveRecallLinkWoIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentRecallLinkWoIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.WOReactiveAvailableTimeEntity": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "woReactiveId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientServiceRequestEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "serviceRequestNumber": {
          "type": "string"
        },
        "proCareId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "closeTime": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "typeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.PreferredScheduleTimeModel": {
      "type": "object",
      "properties": {
        "priorityId": {
          "type": "string"
        },
        "firstPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "firstPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "secondPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "secondPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "thirdPreferredStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "thirdPreferredEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "haveResidentPreferredSchedule": {
          "type": "boolean"
        },
        "isProvidePreferredScheduleTime": {
          "type": "boolean"
        },
        "slaStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "slaEndTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.ServiceRequestWOResultModel": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "isRootCause": {
          "type": "boolean"
        },
        "serviceRequestNumber": {
          "type": "string"
        },
        "woStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "woVersion": {
          "type": "string"
        },
        "wo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        }
      }
    },
    "M2.Business.Modules.ServiceRequest.Create.BatchServiceRequestModel": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "serviceDescription": {
          "type": "string"
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "callerInfo": {
          "$ref": "#/definitions/M2.Business.Modules.ServiceRequest.Create.CallerModel"
        },
        "batchServiceRequestWOModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.ServiceRequest.Create.BatchServiceRequestWOModel"
          }
        }
      }
    },
    "M2.Business.Modules.ServiceRequest.Create.CallerModel": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "positionId": {
          "format": "int32",
          "type": "integer"
        },
        "sid": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneType": {
          "format": "int32",
          "type": "integer"
        },
        "phone2": {
          "type": "string"
        },
        "phoneType2": {
          "format": "int32",
          "type": "integer"
        },
        "phone3": {
          "type": "string"
        },
        "phoneType3": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Business.Modules.ServiceRequest.Create.BatchServiceRequestWOModel": {
      "type": "object",
      "properties": {
        "batchId": {
          "type": "string"
        },
        "isRootCause": {
          "type": "boolean"
        },
        "isCreatedWO": {
          "type": "boolean"
        },
        "isCancel": {
          "type": "boolean"
        },
        "isClientPopTips": {
          "type": "boolean",
          "readOnly": true
        },
        "reactiveWo": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "commonAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "serviceCodeAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuestionAnswerEntity"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.AttachmentEntity"
          }
        },
        "autoScheduleModel": {
          "$ref": "#/definitions/M2.Entity.Module.DTO.ScheduleResult"
        },
        "woAvailableTimes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.WOReactiveAvailableTimeEntity"
          }
        },
        "callId": {
          "type": "string",
          "readOnly": true
        },
        "isAutoSchedule": {
          "type": "boolean"
        },
        "reactiveRecallLinkWoIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recurrentRecallLinkWoIdList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.ServiceRequestWOListQuery": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "isProCare": {
          "type": "boolean"
        },
        "clientId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateName": {
          "type": "string"
        },
        "customerStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "srInvoiceVisible": {
          "type": "boolean"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ServiceRequestQueryModel": {
      "type": "object",
      "properties": {
        "serviceRequestName": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "serviceRequestType": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestStatus": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "serviceRequestCategorys": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ClientWOReactiveInteractionLogNoteEntity": {
      "type": "object",
      "properties": {
        "woReactiveId": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientWOReactiveInteractionLogNoteAttachmentEntity": {
      "type": "object",
      "properties": {
        "noteId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Business.ServiceRequestFeatureToggleModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "parentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isOpen": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.ServiceRequest.ServiceRequestActionModel": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "actionType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "isResponseSucceed": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ReferredServiceMappingQueryModel": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "referral": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "redirectStatement": {
          "type": "string"
        },
        "hperLink": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ReferredServiceMappingEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "referral": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "redirectStatement": {
          "type": "string"
        },
        "hperLink": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.GanttListResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "problemCode": {
          "type": "string"
        },
        "statusName": {
          "type": "string"
        },
        "isScheduled": {
          "type": "boolean"
        },
        "reasonCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "reasonCodeName": {
          "type": "string"
        },
        "relatedWOReactiveId": {
          "type": "string"
        },
        "relatedWOReactiveNum": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.FirstPhotoGalleryResult": {
      "type": "object",
      "properties": {
        "thumbnailUrl": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.PhotoItemGalleryResult": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "isShare": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            46,
            50,
            100
          ],
          "type": "integer"
        },
        "extRefId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43
          ],
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestWOListQuery": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateName": {
          "type": "string"
        },
        "customerStatusIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.IdValueModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.WOListSearchFieldsResult": {
      "type": "object",
      "properties": {
        "woStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Infrastructure.IdNameQueryResult"
          }
        },
        "serviceCategoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Infrastructure.IdNameQueryResult"
          }
        },
        "customerStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Infrastructure.IdNameQueryResult"
          }
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.SummaryAllDataQueryResult": {
      "type": "object",
      "properties": {
        "serviceRequestName": {
          "type": "string"
        },
        "serviceRequestType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationPhone": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "firstWOCheckInTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastWOCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastVisit": {
          "format": "date-time",
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "totalDaysToComplete": {
          "format": "double",
          "type": "number"
        },
        "totalCostToDate": {
          "format": "double",
          "type": "number"
        },
        "openDays": {
          "format": "double",
          "type": "number"
        },
        "overallCompletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "offset": {
          "format": "double",
          "type": "number"
        },
        "serviceRequestDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDateLocalTime": {
          "format": "date-time",
          "type": "string"
        },
        "createDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "woAdditionalDetail": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestQueryModel": {
      "type": "object",
      "properties": {
        "serviceRequestName": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "serviceRequestType": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceRequestCategorys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceRequestStatus": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestModelResult]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestModelResult"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ServiceRequestApiRepo.ServiceRequestModelResult": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "woCount": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "completedCount": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "firstWOCheckIn": {
          "format": "date-time",
          "type": "string"
        },
        "lastWOCheckOut": {
          "format": "date-time",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "problemCode": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "assigneeName": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestCategory": {
          "format": "int32",
          "type": "integer"
        },
        "serviceRequestNumber": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.RecommendServiceCodeModel": {
      "type": "object",
      "properties": {
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeAliasName": {
          "type": "string"
        },
        "recommendServiceCodeAliasName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ServiceRequestExportQuery": {
      "type": "object",
      "properties": {
        "isProCare": {
          "type": "boolean"
        },
        "serviceRequestId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "statusId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.ServiceRequest.ProjectLocationViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "locationTypeId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "gps": {
          "$ref": "#/definitions/M2.Entity.GPS"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/M2.Entity.Address"
        },
        "phone": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "locationTypeName": {
          "type": "string"
        },
        "locationResidentMoveInDate": {
          "format": "date-time",
          "type": "string"
        },
        "lat": {
          "format": "double",
          "type": "number"
        },
        "lng": {
          "format": "double",
          "type": "number"
        },
        "locationAttribute": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "locationManagerDetailUrl": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientServiceRequestAttachmentEntity": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "fileUrl": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "exifOrientation": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientServiceRequestAttachmentViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceRequestId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "fileUrl": {
          "type": "string"
        },
        "createUserName": {
          "type": "string"
        },
        "exifOrientation": {
          "format": "int32",
          "type": "integer"
        },
        "thumbnailUrl": {
          "type": "string"
        }
      }
    },
    "M2.Entity.UpdateServiceRequestRootcauseQuery": {
      "type": "object",
      "properties": {
        "serviceRequestId": {
          "type": "string"
        },
        "beforePrimaryId": {
          "type": "string"
        },
        "afterPrimaryId": {
          "type": "string"
        },
        "updateWoId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ServiceRequestLocWoListEditQuery": {
      "type": "object",
      "properties": {
        "changeWoData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ChangeWoViewModel"
          }
        },
        "rootCauseData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.RootCauseViewModel"
          }
        },
        "dragNewServiceRequestWoData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.CreateNewServiceReuqestViewModel"
          }
        },
        "locationId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ChangeWoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "originalServiceRequestId": {
          "type": "string"
        },
        "targetServiceRequestId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RootCauseViewModel": {
      "type": "object",
      "properties": {
        "currentServiceRequestId": {
          "type": "string"
        },
        "rootCauseWoId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.CreateNewServiceReuqestViewModel": {
      "type": "object",
      "properties": {
        "woBelongServiceRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ChangeWoViewModel"
          }
        },
        "rootCauseWoId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.LocationSnowAlertQueryModel": {
      "type": "object",
      "properties": {
        "departmentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationSmsNumber": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "sendDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "confirmBy": {
          "format": "int64",
          "type": "integer"
        },
        "confirmTime": {
          "format": "date-time",
          "type": "string"
        },
        "responseTime": {
          "format": "date-time",
          "type": "string"
        },
        "responseBy": {
          "type": "string"
        },
        "isValid": {
          "type": "boolean"
        },
        "snowFall": {
          "format": "double",
          "type": "number"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zipCode": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "beginSendDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endSendDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "projectManagerId": {
          "type": "string"
        },
        "operationManager": {
          "$ref": "#/definitions/M2.Entity.OperationManagerQuery"
        },
        "oM1Ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teamLeadIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orgFilterLevelId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.WoInfoResultModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategory": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "department": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SmartReplyOptionModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "configMode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "isForbidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.CancelledWoEntity": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "reasonId": {
          "format": "int32",
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "nextStatusId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SmartReplyWorkOrderBaseModel": {
      "type": "object",
      "properties": {
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "isIssues": {
          "type": "boolean"
        },
        "isTurn": {
          "type": "boolean",
          "readOnly": true
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "attribute": {
          "$ref": "#/definitions/M2.Entity.WoReactiveAttributeEntity"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Label.Core.Entity.WoLabelEntity"
          }
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "clientWOReactivePcda": {
          "$ref": "#/definitions/M2.Entity.ClientWOReactivePcdaEntity"
        },
        "locationId": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientWOReactivePcdaEntity": {
      "type": "object",
      "properties": {
        "woReactiveId": {
          "format": "int32",
          "type": "integer"
        },
        "signStatus": {
          "format": "int32",
          "type": "integer"
        },
        "signDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "signReason": {
          "type": "string"
        },
        "signReasonRemark": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SmartReplyDispatchSpecificAffiliateData": {
      "type": "object",
      "properties": {
        "isSupportLandlordProcess": {
          "type": "boolean"
        },
        "isWarranty": {
          "type": "boolean"
        },
        "isInHouseTechnician": {
          "type": "boolean"
        },
        "isJpmc": {
          "type": "boolean"
        },
        "isOnlyPotentialAffiliatesForRecallWo": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.LocationWarrantyDetailQueryModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "itemName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "installRepairDate": {
          "format": "date-time",
          "type": "string"
        },
        "warrantyLaborLength": {
          "format": "int32",
          "type": "integer"
        },
        "warrantyMaterialsLength": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.LocationWarrantyDetailEntity]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.LocationWarrantyDetailEntity"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.LocationWarrantyDetailEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "itemName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "installRepairDate": {
          "format": "date-time",
          "type": "string"
        },
        "warrantyLaborLength": {
          "format": "int32",
          "type": "integer"
        },
        "warrantyMaterialsLength": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCategory": {
          "$ref": "#/definitions/M2.Entity.DataServiceCategoryEntity"
        },
        "affiliate": {
          "$ref": "#/definitions/M2.Entity.AffiliateEntity"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.AffiliateQueryModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dbaName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "phoneExt": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "serviceStates": {
          "type": "string"
        },
        "ssn": {
          "type": "string"
        },
        "ein": {
          "type": "string"
        },
        "tin": {
          "type": "string"
        },
        "entityTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "stateRegistered": {
          "type": "string"
        },
        "webSite": {
          "type": "string"
        },
        "paymentTermsId": {
          "format": "int32",
          "type": "integer"
        },
        "isCommEmail": {
          "type": "boolean"
        },
        "isCommFax": {
          "type": "boolean"
        },
        "isCommPDF": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classification": {
          "type": "string"
        },
        "classifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSourcing": {
          "type": "boolean"
        },
        "isSameBusinessAddr": {
          "type": "boolean"
        },
        "contactPhone": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "businessAddressState": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "mobileCode": {
          "type": "string"
        },
        "excludeAffiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dispatcherEmail": {
          "type": "string"
        },
        "billingEmail": {
          "type": "string"
        },
        "isReceiveMessage": {
          "type": "boolean"
        },
        "isInHouse": {
          "type": "boolean"
        },
        "serviceRegion": {
          "type": "string"
        },
        "serviceZipcode": {
          "type": "string"
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "affiliateCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchAllServiceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationId": {
          "type": "string"
        },
        "complianceManager": {
          "type": "string"
        },
        "complianceManagerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "insuranceSpecialist": {
          "type": "string"
        },
        "marketManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "complianceManagerId": {
          "format": "int32",
          "type": "integer"
        },
        "insuranceSpecialistId": {
          "format": "int32",
          "type": "integer"
        },
        "achDesignation": {
          "format": "int32",
          "type": "integer"
        },
        "contactName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "insuranceTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "expired": {
          "type": "boolean"
        },
        "includeExpiring30": {
          "type": "boolean"
        },
        "includeExpiring60": {
          "type": "boolean"
        },
        "includeExpiring90": {
          "type": "boolean"
        },
        "isAutoConfirmSnowAlerts": {
          "type": "boolean"
        },
        "compliant": {
          "type": "string"
        },
        "checkReleased": {
          "type": "string"
        },
        "authorizedDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchFromDate": {
          "format": "date-time",
          "type": "string"
        },
        "searchEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "traingSessionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractName": {
          "type": "string"
        },
        "contractStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractExpiredDate": {
          "format": "date-time",
          "type": "string"
        },
        "businessUnitId": {
          "type": "string"
        },
        "businessUnitIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "isCompletedServices": {
          "type": "boolean"
        },
        "beginCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "endCreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "contractClientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contractClientTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "contractServiceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "channelId": {
          "format": "int32",
          "type": "integer"
        },
        "countryId": {
          "format": "int32",
          "type": "integer"
        },
        "groupByKey": {
          "type": "string"
        },
        "hasSecurityId": {
          "type": "boolean"
        },
        "scoreCardStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "scoreCardEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "tradeId": {
          "format": "int32",
          "type": "integer"
        },
        "customerTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woZipCode": {
          "type": "string"
        },
        "soSVerificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "marketManagerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "resaleCertificatesVersion": {
          "type": "string"
        },
        "excludedResaleCertificatesVersion": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SmartReplyAffiliateItemAndCountViewModel": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SmartReplyAffiliateModelForDispatch"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SmartReplyAffiliateModelForDispatch": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "affiliateStatus": {
          "$ref": "#/definitions/M2.Entity.SmartReplyAffiliateIdNameModel"
        },
        "averageScore": {
          "format": "double",
          "type": "number"
        },
        "email": {
          "type": "string"
        },
        "dispatcherEmail": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "serviceStates": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "weightedScoreTotal": {
          "type": "string"
        },
        "standardHourlyRate": {
          "format": "double",
          "type": "number"
        },
        "otHourlyRate": {
          "format": "double",
          "type": "number"
        },
        "tripCharge": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "ratio": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "recommendReason": {
          "type": "string"
        },
        "recommendReasonId": {
          "type": "string"
        },
        "notesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.MessageEntity"
          }
        },
        "clientPreferredStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "distance": {
          "type": "string"
        },
        "affiliateServiceCount": {
          "format": "int32",
          "type": "integer"
        },
        "lastServiceTime": {
          "format": "date-time",
          "type": "string"
        },
        "isBlacklist": {
          "type": "boolean"
        },
        "tier": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SmartReplyAffiliateIdNameModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ArticalPatchModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "articalCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "refId": {
          "format": "int32",
          "type": "integer"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        },
        "modifyDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "orderSeq": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ArticalQueryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "articalCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "libraryTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "roleId": {
          "format": "int32",
          "type": "integer"
        },
        "refId": {
          "format": "int32",
          "type": "integer"
        },
        "refType": {
          "format": "int32",
          "type": "integer"
        },
        "orderSeq": {
          "format": "double",
          "type": "number"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Areas.Residential.Models.TrainingVideo.VideoInfoViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "resourcesTitle": {
          "type": "string"
        }
      }
    },
    "M2.Entity.RecommendTimesInput": {
      "type": "object",
      "properties": {
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.WorkOrderRescheduleRecommendTimesInput": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ProcareRecommendTimeInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.RescheduleProcareRecommendTimeInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SugarModel.Entity.IpadSurveryAnswerEntity": {
      "type": "object",
      "properties": {
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "locationInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItem"
          }
        },
        "isCompleted": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SectionItem": {
      "type": "object",
      "properties": {
        "isCompleted": {
          "type": "boolean"
        },
        "questionItemList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.QuestionItem"
          }
        },
        "categoryName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.QuestionItem": {
      "type": "object",
      "properties": {
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "questionName": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.OptionCommentsAndPhotos"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.OptionCommentsAndPhotos": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SurveyAttachmentEntity"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyAttachmentEntity": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "contentType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SurveyAnswerEntity": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "projectId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "syncStatusFlag": {
          "type": "boolean"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryEntity"
          }
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiProjectQuery": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "surveyer": {
          "type": "string"
        },
        "isEnable": {
          "type": "boolean"
        },
        "address": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "surveyers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCompleted": {
          "type": "boolean"
        },
        "clientQuery": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiProjectClientQuery"
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        },
        "clientDistricts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "projectName": {
          "type": "string"
        },
        "isShowClient": {
          "type": "boolean"
        },
        "isShowAffiliate": {
          "type": "boolean"
        },
        "surveyNum": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiProjectClientQuery": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "district": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.Web.Client.Models.Survey.ProjectSummaryDto]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Survey.ProjectSummaryDto"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.ProjectSummaryDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "completeRate": {
          "format": "double",
          "type": "number"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "pendingCount": {
          "format": "int32",
          "type": "integer"
        },
        "completedCount": {
          "format": "int32",
          "type": "integer"
        },
        "isShowClient": {
          "type": "boolean"
        },
        "cancelledCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiLocationSurveyQuery": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "surveyer": {
          "type": "string"
        },
        "surveyerName": {
          "type": "string"
        },
        "scheduledDate": {
          "format": "date-time",
          "type": "string"
        },
        "startScheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "endScheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "completionDate": {
          "format": "date-time",
          "type": "string"
        },
        "startCompletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCompletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientQuery": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiProjectClientQuery"
        },
        "technician": {
          "type": "string"
        },
        "community": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "surveyNum": {
          "type": "string"
        },
        "beginSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "endSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "auditStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        },
        "clientDistricts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientRegions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.Web.Client.Models.Survey.LocationSurveyListItemViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Survey.LocationSurveyListItemViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.LocationSurveyListItemViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "locationNum": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "projectType": {
          "type": "string"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "completionTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "surveyerName": {
          "type": "string"
        },
        "surveyerRoleTypeId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "photosList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
          }
        },
        "photoTotalCount": {
          "format": "int32",
          "type": "integer"
        },
        "photoGalleryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryEntity"
          }
        },
        "surveyNum": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SugarModel.Entity.V_SurveryTemplateEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "format": "int32",
          "type": "integer"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "questionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SugarModel.Generated.survey_Question"
          }
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiSurveyExportQuery": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "loadingMore": {
          "type": "boolean"
        },
        "submitTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affiliateId": {
          "type": "string"
        },
        "technicianId": {
          "type": "string"
        },
        "roleType": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.OptionCommentsAndPhotosShow": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string"
        },
        "photos": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiAdditionalInformation": {
      "type": "object",
      "properties": {
        "sectionId": {
          "format": "int32",
          "type": "integer"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "comments": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.SurveyProjectFileTemplateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "fileTemplateName": {
          "type": "string"
        },
        "fileTemplateType": {
          "format": "int32",
          "type": "integer"
        },
        "fileTemplatePath": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "format": "int32",
          "type": "integer"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.SurveyProjectFileTemplateAnswerModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "isComplete": {
          "type": "boolean"
        },
        "fileTemplateList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyFileTemplateModel"
          }
        }
      }
    },
    "M2.Entity.SurveyFileTemplateModel": {
      "type": "object",
      "properties": {
        "projectFileTemplateId": {
          "type": "string"
        },
        "isComplete": {
          "type": "boolean"
        },
        "answerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FileTemplateQuestionAnswerModel"
          }
        }
      }
    },
    "M2.Entity.FileTemplateQuestionAnswerModel": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "questionOptionId": {
          "type": "string"
        },
        "parentQuestionId": {
          "type": "string"
        },
        "questionGroupId": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyProjectFileTemplateAnswerAttachmentModel"
          }
        }
      }
    },
    "M2.Entity.SurveyProjectFileTemplateAnswerAttachmentModel": {
      "type": "object",
      "properties": {
        "attachmentName": {
          "type": "string"
        },
        "attachmentPath": {
          "type": "string"
        },
        "attachmentUrl": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Mvc.StaticViewResult": {
      "type": "object",
      "properties": {
        "resultRouteData": {
          "$ref": "#/definitions/Moon.Infrastructure.Mvc.StaticViewResultRouteData"
        },
        "masterName": {
          "type": "string"
        },
        "model": {
          "type": "object",
          "readOnly": true
        },
        "tempData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "view": {
          "$ref": "#/definitions/System.Web.Mvc.IView"
        },
        "viewBag": {
          "type": "object",
          "readOnly": true
        },
        "viewData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "viewEngineCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Web.Mvc.IViewEngine"
          }
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Mvc.StaticViewResultRouteData": {
      "type": "object",
      "properties": {
        "requireParameter": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiLocationSurveyListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "locationNum": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "surveyer": {
          "type": "string"
        },
        "surveyerName": {
          "type": "string"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "completionTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "surveyerRoleTypeId": {
          "type": "string"
        },
        "photosList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
          }
        },
        "photoTotalCount": {
          "format": "int32",
          "type": "integer"
        },
        "photoGalleryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotoGalleryEntity"
          }
        },
        "projectType": {
          "type": "string"
        },
        "surveyNum": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyProjectIndexSeachFiedleModel": {
      "type": "object",
      "properties": {
        "clientList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        },
        "surveyNameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.IdNameViewModel"
          }
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyProjectSummaryModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "completeRate": {
          "format": "double",
          "type": "number"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "completedCount": {
          "format": "int32",
          "type": "integer"
        },
        "pendingCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyProjectRateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "completeRate": {
          "format": "int32",
          "type": "integer"
        },
        "pendingRate": {
          "format": "int32",
          "type": "integer"
        },
        "completeCount": {
          "format": "int32",
          "type": "integer"
        },
        "pendingCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyDetailViewModel": {
      "type": "object",
      "properties": {
        "affiliateCode": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/M2.Entity.SurveyProjectEntity"
        },
        "locationId": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateId": {
          "type": "string"
        },
        "landscapingQuote": {
          "format": "double",
          "type": "number"
        },
        "parkingLotQuote": {
          "format": "double",
          "type": "number"
        },
        "isMaintenanceShow": {
          "type": "boolean"
        },
        "surveyer": {
          "type": "string"
        },
        "surveyerEntity": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "scheduledTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "clientId": {
          "type": "string"
        },
        "businessUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "completeTime": {
          "format": "date-time",
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "answerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SugarModel.Entity.SurverySummaryModel"
          }
        },
        "gpcaReferenceNumber": {
          "type": "string"
        },
        "canSubmitSurvey": {
          "type": "boolean"
        },
        "surveyNum": {
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "questionnaireId": {
          "format": "int32",
          "type": "integer"
        },
        "auditStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "auditorName": {
          "type": "string"
        },
        "auditorTitleId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ApiSurveyPhotoGalleryModel": {
      "type": "object",
      "properties": {
        "photoId": {
          "type": "string"
        },
        "photoUrl": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        },
        "filePath": {
          "type": "string"
        },
        "photoName": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyProjectPermissionViewModel": {
      "type": "object",
      "properties": {
        "isMarkup": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.SurveyPhotoGalleryHistoryModel": {
      "type": "object",
      "properties": {
        "photoGalleryId": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "afterStatus": {
          "type": "string"
        },
        "beforeStatus": {
          "type": "string"
        },
        "createDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "createName": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "comments": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyAnswerFive": {
      "type": "object",
      "properties": {
        "la": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswerFive"
        },
        "bd": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswerFive"
        },
        "lp": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswerFive"
        },
        "irs": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswerFive"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "stepNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ChildItemAnswerFive": {
      "type": "object",
      "properties": {
        "isNotApplicable": {
          "type": "boolean"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "itemAnswer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFive"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ItemAnswerFive": {
      "type": "object",
      "properties": {
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "responseType": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyAnswerFour": {
      "type": "object",
      "properties": {
        "la": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFour"
        },
        "lb": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFour"
        },
        "ts": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFour"
        },
        "ir": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFour"
        },
        "pl": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ItemAnswerFour"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "stepNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ItemAnswerFour": {
      "type": "object",
      "properties": {
        "textRemark": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.RadioItem"
          }
        },
        "isNotApplicable": {
          "type": "boolean"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "radioItemChecked": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.RadioItem"
          }
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.RadioItem": {
      "type": "object",
      "properties": {
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyAnswerThree": {
      "type": "object",
      "properties": {
        "locationInfo": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItem"
        },
        "landscaping": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItem"
        },
        "snowRemoval": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItem"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "stepNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyAnswerTwo": {
      "type": "object",
      "properties": {
        "pt": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItemAnswer"
        },
        "sc": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItemAnswer"
        },
        "sp": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.SectionItemAnswer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "stepNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SectionItemAnswer": {
      "type": "object",
      "properties": {
        "isCompleted": {
          "type": "boolean"
        },
        "questionItemList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.QuestionItem"
          }
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.SurveyLocationAnswer": {
      "type": "object",
      "properties": {
        "la": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswer"
        },
        "lb": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswer"
        },
        "ts": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswer"
        },
        "ir": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswer"
        },
        "pl": {
          "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ChildItemAnswer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "projectLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "stepNum": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.Module.SurveyApiModel.ChildItemAnswer": {
      "type": "object",
      "properties": {
        "isNotApplicable": {
          "type": "boolean"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "radioItemChecked": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.RadioItem"
          }
        },
        "textRemark": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.RadioItem"
          }
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "M2.Entity.SurveyCommentsQueryModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "additionalServiceId": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "section": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "additionalServiceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyCommonAndPhotosModel": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "photos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SurveyPhotosEntity"
          }
        }
      }
    },
    "M2.Entity.SurveyCommentModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "additionalServiceId": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "section": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Survey.SurveyUploadAdditionalInformationPhotoModel": {
      "type": "object",
      "properties": {
        "imgName": {
          "type": "string"
        },
        "urlString": {
          "type": "string"
        },
        "photoId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.SummaryCateSurvey": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "string"
        },
        "summaryQuestionItemList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SummaryQuestionItem"
          }
        }
      }
    },
    "M2.Entity.SummaryQuestionItem": {
      "type": "object",
      "properties": {
        "questionName": {
          "type": "string"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "summaryQuestionOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SummaryQuestionOption"
          }
        }
      }
    },
    "M2.Entity.SummaryQuestionOption": {
      "type": "object",
      "properties": {
        "count": {
          "format": "double",
          "type": "number"
        },
        "value": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "type": "integer"
        },
        "ratio": {
          "type": "string",
          "readOnly": true
        },
        "totalCount": {
          "format": "double",
          "type": "number"
        },
        "questionOptionRank": {
          "format": "int32",
          "type": "integer"
        },
        "dropListOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.SummaryQuestionOption"
          }
        }
      }
    },
    "M2.Entity.ClientSurveyLocationQuestionModel": {
      "type": "object",
      "properties": {
        "locationNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "serviceRegion": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "categoryQuestion": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ApiSurveySummaryQuery": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Web.Client.Controllers.SurveyController.GeneralConditionForClientPropertyModel": {
      "type": "object",
      "properties": {
        "projectLocationId": {
          "type": "string"
        },
        "sortId": {
          "format": "int32",
          "type": "integer"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Controllers.SurveyController.GeneralConditionQuestionAnswer"
          }
        }
      }
    },
    "Moon.Web.Client.Controllers.SurveyController.GeneralConditionQuestionAnswer": {
      "type": "object",
      "properties": {
        "questionId": {
          "format": "int32",
          "type": "integer"
        },
        "questionName": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "questionRank": {
          "format": "int32",
          "type": "integer"
        },
        "questionTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "answerId": {
          "format": "int32",
          "type": "integer"
        },
        "answerValue": {
          "type": "string"
        },
        "answerRank": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.Module.SurveyApiModel.ApiLocationSurveyListItem]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Module.SurveyApiModel.ApiLocationSurveyListItem"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionQuery": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "projectType": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "parentQuestionOptionId": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionResult": {
      "type": "object",
      "properties": {
        "projectQuestion": {
          "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionDto"
        },
        "childrenProjectQuestionOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionOptionResult"
          }
        },
        "projectAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerResult"
          }
        },
        "additional": {
          "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerAdditional"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectType": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "questionName": {
          "type": "string"
        },
        "questionTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "questionRank": {
          "format": "int32",
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "parentQuestionOptionId": {
          "type": "string"
        },
        "isAdditionInfo": {
          "type": "boolean"
        },
        "questionDescription": {
          "type": "string"
        },
        "isNecessary": {
          "type": "boolean"
        },
        "additionTitle": {
          "type": "string"
        },
        "unitNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionOptionResult": {
      "type": "object",
      "properties": {
        "projectQuestionOption": {
          "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionOptionDto"
        },
        "childrenProjectQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionResult"
          }
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerResult": {
      "type": "object",
      "properties": {
        "projectAnswer": {
          "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerDto"
        },
        "projectAnswerAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerAttachmentDto"
          }
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerAdditional": {
      "type": "object",
      "properties": {
        "answerId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerAttachmentDto"
          }
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectQuestionOptionDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "questionOptionName": {
          "type": "string"
        },
        "questionOptionTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "questionOptionRank": {
          "format": "int32",
          "type": "integer"
        },
        "isAdditionInfo": {
          "type": "boolean"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectLocationId": {
          "type": "string"
        },
        "projectQuestionId": {
          "type": "string"
        },
        "projectQuestionOptionId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.SurveyProjectQuestionApiController.SurveyProjectAnswerAttachmentDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "projectAnswerId": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "thumbnailUrl": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientSurveyLocationSummaryModel": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ClientSurveyProjectSummaryModel"
          }
        }
      }
    },
    "M2.Entity.ClientSurveyProjectSummaryModel": {
      "type": "object",
      "properties": {
        "projectId": {
          "format": "int64",
          "type": "integer"
        },
        "projectName": {
          "type": "string"
        },
        "hasOverAll": {
          "type": "boolean",
          "readOnly": true
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ClientSurveySectionScoreModel"
          }
        }
      }
    },
    "M2.Entity.ClientSurveySectionScoreModel": {
      "type": "object",
      "properties": {
        "isOverAllSection": {
          "type": "boolean"
        },
        "sectionId": {
          "format": "int32",
          "type": "integer"
        },
        "sectionName": {
          "type": "string"
        },
        "score": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "M2.Entity.ClientSurveyProjectQuestionModel": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.KeyValueModel"
          }
        }
      }
    },
    "M2.Entity.ApiSurveyAddtionalServicePhotoGalleyModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "projectId": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "photoName": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ApiSurveySectionScoreQuery": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "projectType": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "prevProjectId": {
          "format": "int32",
          "type": "integer"
        },
        "projectIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "sectionId": {
          "format": "int32",
          "type": "integer"
        },
        "isEnable": {
          "type": "boolean"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "rangeStart": {
          "format": "double",
          "type": "number"
        },
        "rangeEnd": {
          "format": "double",
          "type": "number"
        },
        "projectLocationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.ClientSurveyDivisionScoreItemModel": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ClientSurveyScoreItemModel"
          }
        },
        "name": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationCount": {
          "format": "int64",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "prevScore": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "isAscend": {
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientSurveyScoreItemModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationCount": {
          "format": "int64",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "prevScore": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "isAscend": {
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ClientSurveyRegionScoreItemModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locationCount": {
          "format": "int64",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "prevScore": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "isAscend": {
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[M2.Entity.ClientSurveyLocationScoreItemModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ClientSurveyLocationScoreItemModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ClientSurveyLocationScoreItemModel": {
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "prevScore": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "isAscend": {
          "type": "boolean",
          "readOnly": true
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        }
      }
    },
    "M2.Entity.TaskTypeListQueryModel": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.TaskTypeListResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "taskCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TaskScoreTypeListQueryModel": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.TaskScoreTypeListResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "minScore": {
          "format": "double",
          "type": "number"
        },
        "maxScore": {
          "format": "double",
          "type": "number"
        },
        "taskCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TaskClaimTypeListQueryModel": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "M2.Entity.TaskClaimTypeListResultModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "taskCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TaskListQueryModel": {
      "type": "object",
      "properties": {
        "scoreTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "claimTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "taskTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "communitys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchValue": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PageResult[M2.Entity.TaskListResultModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TaskListResultModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.TaskListResultModel": {
      "type": "object",
      "properties": {
        "taskId": {
          "format": "int32",
          "type": "integer"
        },
        "taskTypeName": {
          "type": "string"
        },
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "woTypeId": {
          "type": "string"
        },
        "priorityId": {
          "type": "string"
        },
        "refId": {
          "format": "int32",
          "type": "integer"
        },
        "refType": {
          "format": "int32",
          "type": "integer"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "claimUserType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "claimUserId": {
          "format": "int32",
          "type": "integer"
        },
        "assigneeUserId": {
          "type": "string"
        },
        "claimUserFirstName": {
          "type": "string"
        },
        "claimUserLastName": {
          "type": "string"
        },
        "assigneeUserFirstName": {
          "type": "string"
        },
        "assigneeUserLastName": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "woStatus": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "callerName": {
          "type": "string"
        },
        "callerEmail": {
          "type": "string"
        },
        "callerPhones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationNumber": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "addressLine": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "openWoCount": {
          "format": "int32",
          "type": "integer"
        },
        "additionalDetail": {
          "type": "string"
        },
        "taskTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApproval": {
          "format": "int32",
          "type": "integer"
        },
        "clientDispatchApprovalTime": {
          "format": "date-time",
          "type": "string"
        },
        "signReasonRemarks": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "signDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "autoApprovalResidueTime": {
          "format": "date-time",
          "type": "string"
        },
        "hasUnreadMessage": {
          "type": "boolean"
        },
        "requestNum": {
          "type": "string"
        },
        "requestType": {
          "format": "int32",
          "type": "integer"
        },
        "originalRefId": {
          "format": "int32",
          "type": "integer"
        },
        "originalRefType": {
          "format": "int32",
          "type": "integer"
        },
        "originalNum": {
          "type": "string"
        },
        "createName": {
          "type": "string"
        },
        "isCreateNewServiceRequest": {
          "type": "boolean"
        },
        "proposalAmount": {
          "format": "double",
          "type": "number"
        },
        "preApprover": {
          "type": "string"
        }
      }
    },
    "Moon.WebService.Client.ReturnTripNeededWoQueryModel": {
      "type": "object",
      "properties": {
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "clientId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Infrastructure.Paging.IPagedItemsResult[Moon.WebService.Client.ReturnTripNeededWoViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.WebService.Client.ReturnTripNeededWoViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.WebService.Client.ReturnTripNeededWoViewModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "createMonth": {
          "format": "date-time",
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeName": {
          "type": "string",
          "readOnly": true
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "address": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "isEscalate": {
          "type": "boolean"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "technician": {
          "type": "string"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "createUserId": {
          "type": "string"
        },
        "dispatchUserId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "assigneeId": {
          "type": "string"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "isHelper": {
          "type": "boolean"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "serviceType": {
          "$ref": "#/definitions/M2.Entity.DataServiceTypeEntity"
        },
        "woType": {
          "$ref": "#/definitions/M2.Entity.DataWOTypeEntity"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectUpdateModel": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "key": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            17
          ],
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "isUpdateDate": {
          "type": "boolean"
        },
        "superintendentId": {
          "type": "string"
        },
        "assessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "assessmentEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "earliestProjectStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsActualSignOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualProjectStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "assineeId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sendLienWaiver": {
          "type": "boolean"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "clientId": {
          "type": "string"
        },
        "progress": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "projectNum": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "statusId": {
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "actualStart": {
          "format": "date-time",
          "type": "string"
        },
        "actualEnd": {
          "format": "date-time",
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "completed": {
          "format": "int32",
          "type": "integer"
        },
        "remark": {
          "type": "string"
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "turnProjectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "clientAssigneeId": {
          "type": "string"
        },
        "dateofEstimation": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "estimatorPhone": {
          "type": "string"
        },
        "estimatorEmail": {
          "type": "string"
        },
        "budget": {
          "format": "double",
          "type": "number"
        },
        "initialBudget": {
          "format": "double",
          "type": "number"
        },
        "qcWalkReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "estimatedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "affiliateBudget": {
          "format": "double",
          "type": "number"
        },
        "completeRatio": {
          "format": "double",
          "type": "number"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "inspectionTime": {
          "format": "date-time",
          "type": "string"
        },
        "inspectionEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isUtilitiesOn": {
          "type": "boolean"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "technician": {
          "type": "string"
        },
        "inspectionPrice": {
          "format": "double",
          "type": "number"
        },
        "inspectionCost": {
          "format": "double",
          "type": "number"
        },
        "affiliateReportSqft": {
          "type": "string"
        },
        "affiliateReportBedRoom": {
          "type": "string"
        },
        "affiliateReportBathRoom": {
          "type": "string"
        },
        "isInspection": {
          "type": "boolean"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "departmentId": {
          "type": "string"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "cancelReason": {
          "type": "string"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "specialInstructions": {
          "type": "string"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "turnRehabCapitalProjectStatusEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "trpVersion": {
          "format": "int32",
          "type": "integer"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "propertyReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "earliestAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsFinalApprovaDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalApprovalDate": {
          "format": "date-time",
          "type": "string"
        },
        "expectedCompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalSignOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "actualAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientRevisionRequestDate": {
          "format": "date-time",
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "assessmentReviewStatus": {
          "format": "int32",
          "type": "integer"
        },
        "phaseId": {
          "format": "int32",
          "type": "integer"
        },
        "isSingleLocation": {
          "type": "boolean"
        },
        "extClientProjectNum": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "M2.Entity.ProjectEntity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "projectNum": {
          "type": "string"
        },
        "progress": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "pmId": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "turnRehabCapitalProjectStatusEnumId": {
          "format": "int32",
          "type": "integer"
        },
        "turnRehabCapitalProjectStatusName": {
          "type": "string"
        },
        "scheduleStart": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEnd": {
          "format": "date-time",
          "type": "string"
        },
        "actualStart": {
          "format": "date-time",
          "type": "string"
        },
        "actualEnd": {
          "format": "date-time",
          "type": "string"
        },
        "budget": {
          "format": "double",
          "type": "number"
        },
        "remark": {
          "type": "string"
        },
        "duration": {
          "format": "int32",
          "type": "integer"
        },
        "completeRate": {
          "format": "double",
          "type": "number"
        },
        "currentCustomerNTE": {
          "format": "double",
          "type": "number"
        },
        "currentCustomerTax": {
          "format": "double",
          "type": "number"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "modifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "modifyUserId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "projectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "clientAssigneeId": {
          "type": "string"
        },
        "dateofEstimation": {
          "format": "date-time",
          "type": "string"
        },
        "estimatorName": {
          "type": "string"
        },
        "estimatorPhone": {
          "type": "string"
        },
        "estimatorEmail": {
          "type": "string"
        },
        "initialBudget": {
          "format": "double",
          "type": "number"
        },
        "bidRequestId": {
          "type": "string"
        },
        "cancelReason": {
          "type": "string"
        },
        "qcWalkReadyDate": {
          "format": "date-time",
          "type": "string"
        },
        "estimatedEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "estimatedCloseDate": {
          "format": "date-time",
          "type": "string"
        },
        "estimatedCompleteDays": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateBudget": {
          "format": "double",
          "type": "number"
        },
        "lockBoxCode": {
          "type": "string"
        },
        "inspectionTime": {
          "format": "date-time",
          "type": "string"
        },
        "inspectionEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "isUtilitiesOn": {
          "type": "boolean"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "pendingVendorAcceptanceCount": {
          "format": "int32",
          "type": "integer"
        },
        "technician": {
          "type": "string"
        },
        "technicianUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "inspectionPrice": {
          "format": "double",
          "type": "number"
        },
        "inspectionCost": {
          "format": "double",
          "type": "number"
        },
        "district": {
          "type": "string"
        },
        "projectCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "projectCategory": {
          "$ref": "#/definitions/M2.Entity.DataProjectCategoryEntity"
        },
        "ownerContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        },
        "hourseKeeperContactInfo": {
          "$ref": "#/definitions/M2.Entity.ProjectContactInfoEntity"
        },
        "locationAttributeEntity": {
          "$ref": "#/definitions/M2.Entity.LocationAttributeEntity"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskEntity"
          }
        },
        "depends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectTaskDependEntity"
          }
        },
        "workOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectReactiveWoEntity"
          }
        },
        "dependsWorkOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ProjectReactiveWoEntity"
          }
        },
        "client": {
          "$ref": "#/definitions/M2.Entity.ClientEntity"
        },
        "status": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "assigneeUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "clientAssigneeUser": {
          "$ref": "#/definitions/M2.Entity.UserModel"
        },
        "reactiveWO": {
          "$ref": "#/definitions/M2.Entity.ReactiveWoEntity"
        },
        "smsAssessmentWOStatusId": {
          "format": "int32",
          "type": "integer"
        },
        "smsAssessmentWoStatusName": {
          "type": "string"
        },
        "locAttrId": {
          "format": "int32",
          "type": "integer"
        },
        "checkUtilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.InspectionUtilitiesEntity"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.InspectionScopeEntity"
          }
        },
        "affiliateReportSqft": {
          "type": "string"
        },
        "affiliateReportBedRoom": {
          "type": "string"
        },
        "affiliateReportBathRoom": {
          "type": "string"
        },
        "reportDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "isInspection": {
          "type": "boolean"
        },
        "clientReferNumber": {
          "type": "string"
        },
        "turnProjectTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "turnProjectTypeName": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "departmentId": {
          "type": "string"
        },
        "visitType": {
          "format": "int32",
          "type": "integer"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "squareFootage": {
          "format": "double",
          "type": "number"
        },
        "specialInstructions": {
          "type": "string"
        },
        "isScheduleAtRisk": {
          "type": "boolean"
        },
        "isLockedTechnician": {
          "type": "boolean"
        },
        "isSMSPerformingAssessment": {
          "type": "boolean"
        },
        "propertyReceivedDate": {
          "format": "date-time",
          "type": "string"
        },
        "earliestAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsFinalApprovaDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalApprovalDate": {
          "format": "date-time",
          "type": "string"
        },
        "expectedCompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientFinalSignOffDate": {
          "format": "date-time",
          "type": "string"
        },
        "projectTypeName": {
          "type": "string"
        },
        "trpVersion": {
          "format": "int32",
          "type": "integer"
        },
        "specialAssessmentTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TrpDetailSpecialAssessmentViewModel"
          }
        },
        "actualAssessmentDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentBudget": {
          "format": "double",
          "type": "number"
        },
        "appVersion": {
          "type": "string"
        },
        "assessmentReviewStatus": {
          "format": "int32",
          "type": "integer"
        },
        "clientRevisionRequestDate": {
          "format": "date-time",
          "type": "string"
        },
        "phaseId": {
          "format": "int32",
          "type": "integer"
        },
        "timestamp": {
          "format": "int32",
          "type": "integer"
        },
        "isSingleLocation": {
          "type": "boolean"
        },
        "extClientProjectNum": {
          "type": "string"
        },
        "completeRatio": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.DataProjectCategoryEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.InspectionUtilitiesEntity": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "utilityId": {
          "format": "int32",
          "type": "integer"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "createUserId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.InspectionScopeEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "configQty": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "M2.Entity.TrpDetailSpecialAssessmentViewModel": {
      "type": "object",
      "properties": {
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryName": {
          "type": "string"
        }
      }
    },
    "M2.Entity.Module.TRP.CheckIsAbleToCompleteProjectResultModel": {
      "type": "object",
      "properties": {
        "isSuccess": {
          "type": "boolean"
        },
        "clientAssignee": {
          "type": "string"
        },
        "failedReason": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        }
      }
    },
    "M2.Entity.SpecialAssessmentWoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "statusName": {
          "type": "string"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.Web.Client.Models.UserBehaviorDataViewModel": {
      "type": "object",
      "properties": {
        "userBehaviorToken": {
          "type": "string"
        },
        "userBehaviorDomain": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.UserFeedback.CRTFieldInitViewModel": {
      "type": "object",
      "properties": {
        "clientList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "originationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "afterHoursList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "serviceCategoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "sourceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "affiliateOrInternalTechnicianList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        }
      }
    },
    "M2.Business.Modules.Feedback.AllowedValuesViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.AffiliateCapacityRequestViewModel": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "submittedBy": {
          "type": "string"
        },
        "origination": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "regionOrMarket": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "afterHours": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "requestType": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "M2.Entity.FeedbackRecordAttachment": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.NewFeedbackAffiliatePerformanceViewModel": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "submittedBy": {
          "type": "string"
        },
        "originatiOn": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "regionOrMarket": {
          "type": "string"
        },
        "affiliateNo": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "workOrderNo": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "propertyAddress": {
          "type": "string"
        },
        "technicianName": {
          "type": "string"
        },
        "detailsOrDescription": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "requestType": {
          "type": "string"
        },
        "featureFor": {
          "type": "string"
        },
        "customer": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "impact": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "Moon.Web.Client.Models.UserFeedback.BugAndFeatureFieldsViewModel": {
      "type": "object",
      "properties": {
        "priorityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        },
        "customerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Business.Modules.Feedback.AllowedValuesViewModel"
          }
        }
      }
    },
    "Moon.Web.Client.Models.UserFeedback.ReporterAndManagerViewModel": {
      "type": "object",
      "properties": {
        "reporter": {
          "type": "string"
        },
        "manager": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.NewUserFeedBackViewModel": {
      "type": "object",
      "properties": {
        "reporterName": {
          "type": "string"
        },
        "reporterPosition": {
          "type": "string"
        },
        "reporterManager": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "currentBehavior": {
          "type": "string"
        },
        "desiredBehavior": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "featureFor": {
          "type": "string"
        },
        "customer": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "impact": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "Moon.Web.Client.Models.TenantEscalationViewModel": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "submittedBy": {
          "type": "string"
        },
        "origination": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "onsiteContactName": {
          "type": "string"
        },
        "propertyAddress": {
          "type": "string"
        },
        "complaintDescription": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "workOrderNo": {
          "type": "string"
        },
        "affiliateOrInternalTechnician": {
          "type": "string"
        },
        "affiliateNo": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCategory": {
          "type": "string"
        },
        "detailsOrDescription": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "requestType": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "Moon.Web.Client.Models.CreditRequestViewModel": {
      "type": "object",
      "properties": {
        "submittedBy": {
          "type": "string"
        },
        "origination": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "workOrder": {
          "type": "string"
        },
        "propertyID": {
          "type": "string"
        },
        "propertyAddress": {
          "type": "string"
        },
        "amountRequested": {
          "type": "string"
        },
        "detailsOrDescription": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "requestType": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "Moon.Web.Client.Models.NewFeedBackIssue.NewFeedBackIssueDetailQueryModel": {
      "type": "object",
      "properties": {
        "issueId": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "enum": [
            1,
            10001,
            10604,
            10605,
            10606,
            10607
          ],
          "type": "integer"
        }
      }
    },
    "M2.Business.Modules.Feedback.CustomerRequestAttachmentViewModel": {
      "type": "object",
      "properties": {
        "issueId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.FeedbackRecordAttachment"
          }
        }
      }
    },
    "M2.Entity.JiraQueryModel": {
      "type": "object",
      "properties": {
        "reporterName": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "issueType": {
          "format": "int32",
          "type": "integer"
        },
        "issueStatus": {
          "type": "string"
        },
        "customerType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.WebService.Client.VisitApiRepo.VisitFlagListQueryModel": {
      "type": "object",
      "properties": {
        "visitId": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "closeRepleacSpace": {
          "type": "boolean"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.WorkOrderRecommendInput": {
      "type": "object",
      "properties": {
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "sameDaySchedule": {
          "type": "boolean"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.WorkOrderRescheduleRecommendInput": {
      "type": "object",
      "properties": {
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.ProCareRecommendInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.ProCareRescheduleRecommendInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.VisitCalendarRecommendResult": {
      "type": "object",
      "properties": {
        "topRecommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitTechnicianRecommendItem"
          }
        },
        "sameTimeRecommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitTechnicianRecommendItem"
          }
        },
        "sameTechnicianRecommends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.VisitTechnicianRecommendItem"
          }
        }
      }
    },
    "M2.Entity.VisitTechnicianRecommendItem": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianName": {
          "type": "string"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.TechnicianScore"
          }
        },
        "canSelect": {
          "type": "boolean"
        },
        "isHighlight": {
          "type": "boolean"
        },
        "isPrioritySort": {
          "type": "boolean"
        },
        "indexOf": {
          "format": "int32",
          "type": "integer"
        },
        "minScore": {
          "format": "double",
          "type": "number"
        },
        "isSameDayNextDay": {
          "type": "boolean"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.ProCareRescheduleByServiceCodeRecommendInput": {
      "type": "object",
      "properties": {
        "procareId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.VisitRescheduleWorkOrderInput": {
      "type": "object",
      "properties": {
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.TechnicianScore"
          }
        },
        "woId": {
          "format": "int32",
          "type": "integer"
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "type": "string"
        }
      }
    },
    "Moon.Web.Client.Models.VisitEventLogViewModel": {
      "type": "object",
      "properties": {
        "refType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            78,
            79,
            80,
            81
          ],
          "type": "integer"
        },
        "refId": {
          "type": "string"
        },
        "roleType": {
          "format": "int32",
          "description": "RoleType:目前分1 job执行、2 人为执行",
          "type": "integer"
        },
        "log": {
          "type": "string"
        },
        "createUser": {
          "$ref": "#/definitions/M2.Entity.UserEntity"
        },
        "eventLogType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            17,
            18,
            19,
            20
          ],
          "type": "integer"
        },
        "eventSource": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "createUserId": {
          "type": "string"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.ManualScheduleInput": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "technicianStartTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Mesh.SDK.AutoSchedule.Models.VisitRescheduleRecommendInput": {
      "type": "object",
      "properties": {
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "canScheduleInWeekend": {
          "type": "boolean"
        }
      }
    },
    "M2.Entity.VisitFutureDateRecommendResult": {
      "type": "object",
      "properties": {
        "technicianId": {
          "format": "int32",
          "type": "integer"
        },
        "technicianName": {
          "type": "string"
        },
        "scheduleStartTime": {
          "format": "date-time",
          "type": "string"
        },
        "scheduleEndTime": {
          "format": "date-time",
          "type": "string"
        },
        "arrivalWindow": {
          "type": "string"
        },
        "technicianScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mesh.SDK.AutoSchedule.Models.TechnicianScore"
          }
        },
        "visitId": {
          "format": "int32",
          "type": "integer"
        },
        "indexOf": {
          "format": "int32",
          "type": "integer"
        },
        "minScore": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ReactiveWoArchiveQueryModel": {
      "type": "object",
      "properties": {
        "woNum": {
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "woCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "openOrClose": {
          "type": "boolean"
        },
        "locationId": {
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "affiliateCode": {
          "type": "string"
        },
        "referWoNum": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "priorityId": {
          "type": "string"
        },
        "beginCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCallTime": {
          "format": "date-time",
          "type": "string"
        },
        "beginCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "endCheckOutTime": {
          "format": "date-time",
          "type": "string"
        },
        "smsLocationNumber": {
          "type": "string"
        },
        "locationStatus": {
          "format": "int32",
          "type": "integer"
        },
        "districts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "woTypeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceCodeIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "serviceCategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "statusIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "affiliateIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "orderBy": {
          "type": "string"
        },
        "asc": {
          "type": "boolean"
        },
        "skip": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "flag": {
          "format": "int32",
          "type": "integer"
        },
        "noNumNavigation": {
          "type": "boolean"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.OnSiteProposalWoViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.OnSiteProposalWoViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.OnSiteProposalWoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "smsProposalStatus": {
          "type": "string"
        },
        "smsProposalStatusName": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string"
        },
        "currentStatusTimeSpan": {
          "type": "string"
        },
        "smsProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "proposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "statusAge": {
          "type": "string",
          "readOnly": true
        },
        "affiliateProposalAmount": {
          "format": "double",
          "type": "number"
        },
        "affiliateNTE": {
          "format": "double",
          "type": "number"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "proposalList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.QuoteWaitingApprovalWoModel"
          }
        }
      }
    },
    "M2.Entity.QuoteWaitingApprovalWoModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "proposalId": {
          "type": "string"
        },
        "proposalNum": {
          "type": "string"
        },
        "purposeName": {
          "type": "string"
        },
        "proposalAmount": {
          "format": "double",
          "type": "number"
        },
        "isPreApproved": {
          "type": "boolean"
        },
        "locationId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/M2.Entity.LocationEntity"
        },
        "serviceCodeId": {
          "format": "int32",
          "type": "integer"
        },
        "serviceCode": {
          "$ref": "#/definitions/M2.Entity.DataServiceCodeEntity"
        },
        "statusId": {
          "format": "int32",
          "type": "integer"
        },
        "woStatus": {
          "$ref": "#/definitions/M2.Entity.DataWOStatusEntity"
        },
        "createDate": {
          "format": "date-time",
          "type": "string"
        },
        "clientNTE": {
          "format": "double",
          "type": "number"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "submitDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusLastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "preApprovedBy": {
          "type": "string"
        },
        "preApprovedTime": {
          "format": "date-time",
          "type": "string"
        },
        "customerWoStatus": {
          "$ref": "#/definitions/M2.Entity.DataKeyValueEntity"
        },
        "isSnow": {
          "type": "boolean"
        },
        "timeInStatus": {
          "type": "string"
        },
        "areas": {
          "type": "string"
        },
        "woTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "woTypeName": {
          "type": "string"
        },
        "affiliateId": {
          "format": "int32",
          "type": "integer"
        },
        "affiliateName": {
          "type": "string"
        },
        "preApproveNotes": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.ClientProposalInfoViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.ClientProposalInfoViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.ClientProposalInfoViewModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "smsNumber": {
          "type": "string"
        },
        "woTypeName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "priorityId": {
          "type": "string"
        },
        "responseWindow": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "affiliateName": {
          "type": "string"
        },
        "smsProposalStatus": {
          "type": "string"
        },
        "smsProposalStatusName": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string"
        },
        "proposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentStatusTimeSpan": {
          "type": "string"
        },
        "statusAge": {
          "type": "string",
          "readOnly": true
        },
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.Proposals"
          }
        }
      }
    },
    "M2.Entity.Proposals": {
      "type": "object",
      "properties": {
        "proposalNum": {
          "type": "string"
        },
        "proposalReactiveId": {
          "type": "string"
        },
        "proposalSubmitDate": {
          "format": "date-time",
          "type": "string"
        },
        "smsProposalStatus": {
          "type": "string"
        },
        "smsProposalAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[Moon.Web.Client.Models.Dashboard.RFIWoViewModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Moon.Web.Client.Models.Dashboard.RFIWoViewModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Moon.Web.Client.Models.Dashboard.RFIWoViewModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "callTime": {
          "format": "date-time",
          "type": "string"
        },
        "locationNumber": {
          "type": "string"
        },
        "addressLine1": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "priorityId": {
          "format": "int32",
          "type": "integer"
        },
        "isReactive": {
          "type": "boolean"
        },
        "isSim": {
          "type": "boolean"
        },
        "ageOfRfiHours": {
          "format": "int64",
          "type": "integer"
        },
        "rfiReason": {
          "type": "string"
        },
        "isReply": {
          "type": "boolean"
        },
        "senderTypeId": {
          "type": "string"
        },
        "userRefId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        }
      }
    },
    "Moon.Infrastructure.Paging.PagedItemsViewModel[M2.Entity.PastRfiModel]": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/M2.Entity.PastRfiModel"
          }
        },
        "totalItemsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "M2.Entity.PastRfiModel": {
      "type": "object",
      "properties": {
        "woId": {
          "type": "string"
        },
        "priorityId": {
          "type": "string"
        },
        "priorityName": {
          "type": "string"
        },
        "isReactive": {
          "type": "boolean"
        },
        "messageId": {
          "type": "string"
        },
        "woNum": {
          "type": "string"
        },
        "readTime": {
          "format": "date-time",
          "type": "string"
        },
        "readBy": {
          "type": "string"
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "rfiReason": {
          "type": "string"
        },
        "userContent": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "ageOfRFI": {
          "type": "string"
        },
        "serviceCategoryName": {
          "type": "string"
        },
        "serviceTypeName": {
          "type": "string"
        },
        "serviceCodeName": {
          "type": "string"
        },
        "responseMessageId": {
          "type": "string"
        },
        "rfiResponse": {
          "type": "string"
        },
        "locationId": {
          "type": "string"
        }
      }
    }
  }
}